

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Sep 13 11:58:02 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           	psect	idataCOMRAM
    89  003534                     __pidataCOMRAM:
    90                           	opt stack 0
    91                           
    92                           ;initializer for _countup
    93  003534  0001               	dw	1
    94                           
    95                           	psect	idataBANK1
    96  0034F4                     __pidataBANK1:
    97                           	opt stack 0
    98                           
    99                           ;initializer for BT_Init@F5671
   100  0034F4  41                 	db	65
   101  0034F5  54                 	db	84
   102  0034F6  2B                 	db	43
   103  0034F7  4E                 	db	78
   104  0034F8  41                 	db	65
   105  0034F9  4D                 	db	77
   106  0034FA  45                 	db	69
   107  0034FB  3D                 	db	61
   108  0034FC  72                 	db	114
   109  0034FD  6F                 	db	111
   110  0034FE  62                 	db	98
   111  0034FF  6F                 	db	111
   112  003500  74                 	db	116
   113  003501  0D                 	db	13
   114  003502  0A                 	db	10
   115  003503  00                 	db	0
   116  003504  00                 	db	0
   117  003505  00                 	db	0
   118                           
   119                           	psect	mediumconst
   120  007E9C                     __pmediumconst:
   121                           	opt stack 0
   122  007E9C  00                 	db	0
   123  007E9D                     _dpowers:
   124                           	opt stack 0
   125  007E9D  0001               	dw	1
   126  007E9F  0000               	dw	0
   127  007EA1  000A               	dw	10
   128  007EA3  0000               	dw	0
   129  007EA5  0064               	dw	100
   130  007EA7  0000               	dw	0
   131  007EA9  03E8               	dw	1000
   132  007EAB  0000               	dw	0
   133  007EAD  2710               	dw	10000
   134  007EAF  0000               	dw	0
   135  007EB1  86A0               	dw	34464
   136  007EB3  0001               	dw	1
   137  007EB5  4240               	dw	16960
   138  007EB7  000F               	dw	15
   139  007EB9  9680               	dw	38528
   140  007EBB  0098               	dw	152
   141  007EBD  E100               	dw	57600
   142  007EBF  05F5               	dw	1525
   143  007EC1  CA00               	dw	51712
   144  007EC3  3B9A               	dw	15258
   145  007EC5                     __end_of_dpowers:
   146                           	opt stack 0
   147  007EC5                     __npowers_:
   148                           	opt stack 0
   149  007EC5  00                 	db	0
   150  007EC6  80                 	db	128
   151  007EC7  3F                 	db	63
   152  007EC8  CD                 	db	205
   153  007EC9  CC                 	db	204
   154  007ECA  3D                 	db	61
   155  007ECB  D7                 	db	215
   156  007ECC  23                 	db	35
   157  007ECD  3C                 	db	60
   158  007ECE  12                 	db	18
   159  007ECF  83                 	db	131
   160  007ED0  3A                 	db	58
   161  007ED1  B7                 	db	183
   162  007ED2  D1                 	db	209
   163  007ED3  38                 	db	56
   164  007ED4  C6                 	db	198
   165  007ED5  27                 	db	39
   166  007ED6  37                 	db	55
   167  007ED7  38                 	db	56
   168  007ED8  86                 	db	134
   169  007ED9  35                 	db	53
   170  007EDA  C0                 	db	192
   171  007EDB  D6                 	db	214
   172  007EDC  33                 	db	51
   173  007EDD  CC                 	db	204
   174  007EDE  2B                 	db	43
   175  007EDF  32                 	db	50
   176  007EE0  70                 	db	112
   177  007EE1  89                 	db	137
   178  007EE2  30                 	db	48
   179  007EE3  E7                 	db	231
   180  007EE4  DB                 	db	219
   181  007EE5  2E                 	db	46
   182  007EE6  E5                 	db	229
   183  007EE7  3C                 	db	60
   184  007EE8  1E                 	db	30
   185  007EE9  42                 	db	66
   186  007EEA  A2                 	db	162
   187  007EEB  0D                 	db	13
   188  007EEC                     __end_of__npowers_:
   189                           	opt stack 0
   190  007EEC                     __powers_:
   191                           	opt stack 0
   192  007EEC  00                 	db	0
   193  007EED  80                 	db	128
   194  007EEE  3F                 	db	63
   195  007EEF  00                 	db	0
   196  007EF0  20                 	db	32
   197  007EF1  41                 	db	65
   198  007EF2  00                 	db	0
   199  007EF3  C8                 	db	200
   200  007EF4  42                 	db	66
   201  007EF5  00                 	db	0
   202  007EF6  7A                 	db	122
   203  007EF7  44                 	db	68
   204  007EF8  40                 	db	64
   205  007EF9  1C                 	db	28
   206  007EFA  46                 	db	70
   207  007EFB  50                 	db	80
   208  007EFC  C3                 	db	195
   209  007EFD  47                 	db	71
   210  007EFE  24                 	db	36
   211  007EFF  74                 	db	116
   212  007F00  49                 	db	73
   213  007F01  97                 	db	151
   214  007F02  18                 	db	24
   215  007F03  4B                 	db	75
   216  007F04  BC                 	db	188
   217  007F05  BE                 	db	190
   218  007F06  4C                 	db	76
   219  007F07  6B                 	db	107
   220  007F08  6E                 	db	110
   221  007F09  4E                 	db	78
   222  007F0A  03                 	db	3
   223  007F0B  15                 	db	21
   224  007F0C  50                 	db	80
   225  007F0D  79                 	db	121
   226  007F0E  AD                 	db	173
   227  007F0F  60                 	db	96
   228  007F10  F3                 	db	243
   229  007F11  49                 	db	73
   230  007F12  71                 	db	113
   231  007F13                     __end_of__powers_:
   232                           	opt stack 0
   233  0000                     _ADCON1bits	set	4033
   234  0000                     _CCP1CON	set	4029
   235  0000                     _CCP2CON	set	4026
   236  0000                     _CCPR1L	set	4030
   237  0000                     _CCPR2L	set	4027
   238  0000                     _INTCON	set	4082
   239  0000                     _INTCON2bits	set	4081
   240  0000                     _INTCON3bits	set	4080
   241  0000                     _INTCONbits	set	4082
   242  0000                     _OSCCONbits	set	4051
   243  0000                     _PIE1	set	3997
   244  0000                     _PIE1bits	set	3997
   245  0000                     _PIR1bits	set	3998
   246  0000                     _PORTA	set	3968
   247  0000                     _PORTAbits	set	3968
   248  0000                     _PORTB	set	3969
   249  0000                     _PORTBbits	set	3969
   250  0000                     _PORTDbits	set	3971
   251  0000                     _PORTE	set	3972
   252  0000                     _PORTEbits	set	3972
   253  0000                     _PR2	set	4043
   254  0000                     _RCREG	set	4014
   255  0000                     _RCSTA	set	4011
   256  0000                     _RCSTAbits	set	4011
   257  0000                     _SPBRG	set	4015
   258  0000                     _SPBRGH	set	4016
   259  0000                     _T2CON	set	4042
   260  0000                     _T2CONbits	set	4042
   261  0000                     _TMR2	set	4044
   262  0000                     _TRISA	set	3986
   263  0000                     _TRISB	set	3987
   264  0000                     _TRISBbits	set	3987
   265  0000                     _TRISC	set	3988
   266  0000                     _TRISCbits	set	3988
   267  0000                     _TRISD	set	3989
   268  0000                     _TRISE	set	3990
   269  0000                     _TXREG	set	4013
   270  0000                     _TXSTA	set	4012
   271  0000                     _TXSTAbits	set	4012
   272  007F13                     __stringdata:
   273                           	opt stack 0
   274  007F13                     STR_22:
   275  007F13  49                 	db	73	;'I'
   276  007F14  6E                 	db	110	;'n'
   277  007F15  74                 	db	116	;'t'
   278  007F16  65                 	db	101	;'e'
   279  007F17  72                 	db	114	;'r'
   280  007F18  72                 	db	114	;'r'
   281  007F19  75                 	db	117	;'u'
   282  007F1A  70                 	db	112	;'p'
   283  007F1B  74                 	db	116	;'t'
   284  007F1C  69                 	db	105	;'i'
   285  007F1D  6F                 	db	111	;'o'
   286  007F1E  6E                 	db	110	;'n'
   287  007F1F  20                 	db	32
   288  007F20  54                 	db	84	;'T'
   289  007F21  4D                 	db	77	;'M'
   290  007F22  52                 	db	82	;'R'
   291  007F23  32                 	db	50	;'2'
   292  007F24  00                 	db	0
   293  007F25                     STR_19:
   294  007F25  49                 	db	73	;'I'
   295  007F26  6E                 	db	110	;'n'
   296  007F27  74                 	db	116	;'t'
   297  007F28  65                 	db	101	;'e'
   298  007F29  72                 	db	114	;'r'
   299  007F2A  72                 	db	114	;'r'
   300  007F2B  75                 	db	117	;'u'
   301  007F2C  70                 	db	112	;'p'
   302  007F2D  74                 	db	116	;'t'
   303  007F2E  69                 	db	105	;'i'
   304  007F2F  6F                 	db	111	;'o'
   305  007F30  6E                 	db	110	;'n'
   306  007F31  20                 	db	32
   307  007F32  52                 	db	82	;'R'
   308  007F33  42                 	db	66	;'B'
   309  007F34  30                 	db	48	;'0'
   310  007F35  00                 	db	0
   311  007F36                     STR_20:
   312  007F36  49                 	db	73	;'I'
   313  007F37  6E                 	db	110	;'n'
   314  007F38  74                 	db	116	;'t'
   315  007F39  65                 	db	101	;'e'
   316  007F3A  72                 	db	114	;'r'
   317  007F3B  72                 	db	114	;'r'
   318  007F3C  75                 	db	117	;'u'
   319  007F3D  70                 	db	112	;'p'
   320  007F3E  74                 	db	116	;'t'
   321  007F3F  69                 	db	105	;'i'
   322  007F40  6F                 	db	111	;'o'
   323  007F41  6E                 	db	110	;'n'
   324  007F42  20                 	db	32
   325  007F43  52                 	db	82	;'R'
   326  007F44  42                 	db	66	;'B'
   327  007F45  31                 	db	49	;'1'
   328  007F46  00                 	db	0
   329  007F47                     STR_21:
   330  007F47  49                 	db	73	;'I'
   331  007F48  6E                 	db	110	;'n'
   332  007F49  74                 	db	116	;'t'
   333  007F4A  65                 	db	101	;'e'
   334  007F4B  72                 	db	114	;'r'
   335  007F4C  72                 	db	114	;'r'
   336  007F4D  75                 	db	117	;'u'
   337  007F4E  70                 	db	112	;'p'
   338  007F4F  74                 	db	116	;'t'
   339  007F50  69                 	db	105	;'i'
   340  007F51  6F                 	db	111	;'o'
   341  007F52  6E                 	db	110	;'n'
   342  007F53  20                 	db	32
   343  007F54  52                 	db	82	;'R'
   344  007F55  42                 	db	66	;'B'
   345  007F56  32                 	db	50	;'2'
   346  007F57  00                 	db	0
   347  007F58                     STR_11:
   348  007F58  42                 	db	66	;'B'
   349  007F59  54                 	db	84	;'T'
   350  007F5A  20                 	db	32
   351  007F5B  49                 	db	73	;'I'
   352  007F5C  4E                 	db	78	;'N'
   353  007F5D  49                 	db	73	;'I'
   354  007F5E  43                 	db	67	;'C'
   355  007F5F  49                 	db	73	;'I'
   356  007F60  41                 	db	65	;'A'
   357  007F61  4C                 	db	76	;'L'
   358  007F62  49                 	db	73	;'I'
   359  007F63  5A                 	db	90	;'Z'
   360  007F64  41                 	db	65	;'A'
   361  007F65  44                 	db	68	;'D'
   362  007F66  4F                 	db	79	;'O'
   363  007F67  00                 	db	0
   364  007F68                     STR_2:
   365  007F68  41                 	db	65	;'A'
   366  007F69  54                 	db	84	;'T'
   367  007F6A  2B                 	db	43
   368  007F6B  50                 	db	80	;'P'
   369  007F6C  53                 	db	83	;'S'
   370  007F6D  57                 	db	87	;'W'
   371  007F6E  44                 	db	68	;'D'
   372  007F6F  3D                 	db	61	;'='
   373  007F70  30                 	db	48	;'0'
   374  007F71  30                 	db	48	;'0'
   375  007F72  30                 	db	48	;'0'
   376  007F73  30                 	db	48	;'0'
   377  007F74  0D                 	db	13
   378  007F75  0A                 	db	10
   379  007F76  00                 	db	0
   380  007F77  0A                 	db	10
   381  007F78  2B                 	db	43
   382  007F79  42                 	db	66	;'B'
   383  007F7A  54                 	db	84	;'T'
   384  007F7B  53                 	db	83	;'S'
   385  007F7C  54                 	db	84	;'T'
   386  007F7D  41                 	db	65	;'A'
   387  007F7E  54                 	db	84	;'T'
   388  007F7F  45                 	db	69	;'E'
   389  007F80  3A                 	db	58	;':'
   390  007F81  31                 	db	49	;'1'
   391  007F82  0D                 	db	13
   392  007F83  0A                 	db	10
   393  007F84  00                 	db	0
   394  007F85  0A                 	db	10
   395  007F86  2B                 	db	43
   396  007F87  42                 	db	66	;'B'
   397  007F88  54                 	db	84	;'T'
   398  007F89  53                 	db	83	;'S'
   399  007F8A  54                 	db	84	;'T'
   400  007F8B  41                 	db	65	;'A'
   401  007F8C  54                 	db	84	;'T'
   402  007F8D  45                 	db	69	;'E'
   403  007F8E  3A                 	db	58	;':'
   404  007F8F  33                 	db	51	;'3'
   405  007F90  0D                 	db	13
   406  007F91  0A                 	db	10
   407  007F92  00                 	db	0
   408  007F93  0A                 	db	10
   409  007F94  2B                 	db	43
   410  007F95  42                 	db	66	;'B'
   411  007F96  54                 	db	84	;'T'
   412  007F97  53                 	db	83	;'S'
   413  007F98  54                 	db	84	;'T'
   414  007F99  41                 	db	65	;'A'
   415  007F9A  54                 	db	84	;'T'
   416  007F9B  45                 	db	69	;'E'
   417  007F9C  3A                 	db	58	;':'
   418  007F9D  34                 	db	52	;'4'
   419  007F9E  0D                 	db	13
   420  007F9F  0A                 	db	10
   421  007FA0  00                 	db	0
   422  007FA1  0A                 	db	10
   423  007FA2  43                 	db	67	;'C'
   424  007FA3  4F                 	db	79	;'O'
   425  007FA4  4E                 	db	78	;'N'
   426  007FA5  4E                 	db	78	;'N'
   427  007FA6  45                 	db	69	;'E'
   428  007FA7  43                 	db	67	;'C'
   429  007FA8  54                 	db	84	;'T'
   430  007FA9  3A                 	db	58	;':'
   431  007FAA  4F                 	db	79	;'O'
   432  007FAB  4B                 	db	75	;'K'
   433  007FAC  0D                 	db	13
   434  007FAD  0A                 	db	10
   435  007FAE  00                 	db	0
   436  007FAF                     STR_18:
   437  007FAF  49                 	db	73	;'I'
   438  007FB0  6E                 	db	110	;'n'
   439  007FB1  74                 	db	116	;'t'
   440  007FB2  65                 	db	101	;'e'
   441  007FB3  67                 	db	103	;'g'
   442  007FB4  65                 	db	101	;'e'
   443  007FB5  72                 	db	114	;'r'
   444  007FB6  20                 	db	32
   445  007FB7  3D                 	db	61	;'='
   446  007FB8  20                 	db	32
   447  007FB9  25                 	db	37
   448  007FBA  64                 	db	100	;'d'
   449  007FBB  00                 	db	0
   450  007FBC                     STR_1:
   451  007FBC  41                 	db	65	;'A'
   452  007FBD  54                 	db	84	;'T'
   453  007FBE  2B                 	db	43
   454  007FBF  52                 	db	82	;'R'
   455  007FC0  4F                 	db	79	;'O'
   456  007FC1  4C                 	db	76	;'L'
   457  007FC2  45                 	db	69	;'E'
   458  007FC3  3D                 	db	61	;'='
   459  007FC4  30                 	db	48	;'0'
   460  007FC5  0D                 	db	13
   461  007FC6  0A                 	db	10
   462  007FC7  00                 	db	0
   463  007FC8                     STR_24:
   464  007FC8  43                 	db	67	;'C'
   465  007FC9  4D                 	db	77	;'M'
   466  007FCA  44                 	db	68	;'D'
   467  007FCB  20                 	db	32
   468  007FCC  54                 	db	84	;'T'
   469  007FCD  41                 	db	65	;'A'
   470  007FCE  42                 	db	66	;'B'
   471  007FCF  4C                 	db	76	;'L'
   472  007FD0  45                 	db	69	;'E'
   473  007FD1  54                 	db	84	;'T'
   474  007FD2  00                 	db	0
   475  007FD3  46                 	db	70	;'F'
   476  007FD4  6C                 	db	108	;'l'
   477  007FD5  6F                 	db	111	;'o'
   478  007FD6  61                 	db	97	;'a'
   479  007FD7  74                 	db	116	;'t'
   480  007FD8  20                 	db	32
   481  007FD9  3D                 	db	61	;'='
   482  007FDA  20                 	db	32
   483  007FDB  25                 	db	37
   484  007FDC  66                 	db	102	;'f'
   485  007FDD  00                 	db	0
   486  007FDE                     STR_3:
   487  007FDE  41                 	db	65	;'A'
   488  007FDF  54                 	db	84	;'T'
   489  007FE0  2B                 	db	43
   490  007FE1  49                 	db	73	;'I'
   491  007FE2  4E                 	db	78	;'N'
   492  007FE3  51                 	db	81	;'Q'
   493  007FE4  0D                 	db	13
   494  007FE5  0A                 	db	10
   495  007FE6  00                 	db	0
   496  007FE7                     STR_16:
   497  007FE7  44                 	db	68	;'D'
   498  007FE8  65                 	db	101	;'e'
   499  007FE9  66                 	db	102	;'f'
   500  007FEA  61                 	db	97	;'a'
   501  007FEB  75                 	db	117	;'u'
   502  007FEC  6C                 	db	108	;'l'
   503  007FED  74                 	db	116	;'t'
   504  007FEE  00                 	db	0
   505  007FEF                     STR_23:
   506  007FEF  49                 	db	73	;'I'
   507  007FF0  6E                 	db	110	;'n'
   508  007FF1  69                 	db	105	;'i'
   509  007FF2  63                 	db	99	;'c'
   510  007FF3  69                 	db	105	;'i'
   511  007FF4  6F                 	db	111	;'o'
   512  007FF5  00                 	db	0
   513  007FF6                     STR_10:
   514  007FF6  49                 	db	73	;'I'
   515  007FF7  4E                 	db	78	;'N'
   516  007FF8  49                 	db	73	;'I'
   517  007FF9  43                 	db	67	;'C'
   518  007FFA  49                 	db	73	;'I'
   519  007FFB  4F                 	db	79	;'O'
   520  007FFC  00                 	db	0
   521  007FFD                     STR_14:
   522  007FFD  33                 	db	51	;'3'
   523  007FFE  00                 	db	0
   524  007FFF                     __end_of__stringdata:
   525                           	opt stack 0
   526                           
   527                           ; #config settings
   528  007FFF  00                 	db	0	; dummy byte at the end
   529  0000                     
   530                           	psect	cinit
   531  002ED0                     __pcinit:
   532                           	opt stack 0
   533  002ED0                     start_initialization:
   534                           	opt stack 0
   535  002ED0                     __initialization:
   536                           	opt stack 0
   537                           
   538                           ; Clear objects allocated to BANK1 (110 bytes)
   539  002ED0  EE01  F000         	lfsr	0,__pbssBANK1
   540  002ED4  0E6E               	movlw	110
   541  002ED6                     clear_0:
   542  002ED6  6AEE               	clrf	postinc0,c
   543  002ED8  06E8               	decf	wreg,f,c
   544  002EDA  E1FD               	bnz	clear_0
   545                           
   546                           ; Clear objects allocated to BANK0 (6 bytes)
   547  002EDC  0100               	movlb	0
   548  002EDE  6BEE               	clrf	(__pbssBANK0+5)& (0+255),b
   549  002EE0  6BED               	clrf	(__pbssBANK0+4)& (0+255),b
   550  002EE2  6BEC               	clrf	(__pbssBANK0+3)& (0+255),b
   551  002EE4  6BEB               	clrf	(__pbssBANK0+2)& (0+255),b
   552  002EE6  6BEA               	clrf	(__pbssBANK0+1)& (0+255),b
   553  002EE8  6BE9               	clrf	__pbssBANK0& (0+255),b
   554                           
   555                           ; Clear objects allocated to COMRAM (28 bytes)
   556  002EEA  EE00  F042         	lfsr	0,__pbssCOMRAM
   557  002EEE  0E1C               	movlw	28
   558  002EF0                     clear_1:
   559  002EF0  6AEE               	clrf	postinc0,c
   560  002EF2  06E8               	decf	wreg,f,c
   561  002EF4  E1FD               	bnz	clear_1
   562                           
   563                           ; Initialize objects allocated to BANK1 (18 bytes)
   564                           ; load TBLPTR registers with __pidataBANK1
   565  002EF6  0EF4               	movlw	low __pidataBANK1
   566  002EF8  6EF6               	movwf	tblptrl,c
   567  002EFA  0E34               	movlw	high __pidataBANK1
   568  002EFC  6EF7               	movwf	tblptrh,c
   569  002EFE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   570  002F00  6EF8               	movwf	tblptru,c
   571  002F02  EE01  F06E         	lfsr	0,__pdataBANK1
   572  002F06  EE10 F012          	lfsr	1,18
   573  002F0A                     copy_data0:
   574  002F0A  0009               	tblrd		*+
   575  002F0C  CFF5 FFEE          	movff	tablat,postinc0
   576  002F10  50E5               	movf	postdec1,w,c
   577  002F12  50E1               	movf	fsr1l,w,c
   578  002F14  E1FA               	bnz	copy_data0
   579                           
   580                           ; Initialize objects allocated to COMRAM (2 bytes)
   581                           ; load TBLPTR registers with __pidataCOMRAM
   582  002F16  0E34               	movlw	low __pidataCOMRAM
   583  002F18  6EF6               	movwf	tblptrl,c
   584  002F1A  0E35               	movlw	high __pidataCOMRAM
   585  002F1C  6EF7               	movwf	tblptrh,c
   586  002F1E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   587  002F20  6EF8               	movwf	tblptru,c
   588  002F22  0009               	tblrd		*+	;fetch initializer
   589  002F24  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   590  002F28  0009               	tblrd		*+	;fetch initializer
   591  002F2A  CFF5 F05F          	movff	tablat,__pdataCOMRAM+1
   592  002F2E                     end_of_initialization:
   593                           	opt stack 0
   594  002F2E                     __end_of__initialization:
   595                           	opt stack 0
   596  002F2E  0100               	movlb	0
   597  002F30  EF7E  F013         	goto	_main	;jump to C main() function
   598                           tblptru	equ	0xFF8
   599                           tblptrh	equ	0xFF7
   600                           tblptrl	equ	0xFF6
   601                           tablat	equ	0xFF5
   602                           postinc0	equ	0xFEE
   603                           wreg	equ	0xFE8
   604                           postdec1	equ	0xFE5
   605                           fsr1l	equ	0xFE1
   606                           
   607                           	psect	bssCOMRAM
   608  000042                     __pbssCOMRAM:
   609                           	opt stack 0
   610  000042                     _Med_lsb:
   611                           	opt stack 0
   612  000042                     	ds	2
   613  000044                     _Med_msb:
   614                           	opt stack 0
   615  000044                     	ds	2
   616  000046                     _TamanhoTrama:
   617                           	opt stack 0
   618  000046                     	ds	2
   619  000048                     _i:
   620                           	opt stack 0
   621  000048                     	ds	2
   622  00004A                     _CheckSum:
   623                           	opt stack 0
   624  00004A                     	ds	1
   625  00004B                     _ComanBFlag:
   626                           	opt stack 0
   627  00004B                     	ds	1
   628  00004C                     _ComanTFlag:
   629                           	opt stack 0
   630  00004C                     	ds	1
   631  00004D                     _Comando:
   632                           	opt stack 0
   633  00004D                     	ds	1
   634  00004E                     _ComandoTablet:
   635                           	opt stack 0
   636  00004E                     	ds	1
   637  00004F                     _EntTrama:
   638                           	opt stack 0
   639  00004F                     	ds	1
   640  000050                     _InicioComando:
   641                           	opt stack 0
   642  000050                     	ds	1
   643  000051                     _RXComandoTB:
   644                           	opt stack 0
   645  000051                     	ds	1
   646  000052                     _SBUSART:
   647                           	opt stack 0
   648  000052                     	ds	1
   649  000053                     _Timer1:
   650                           	opt stack 0
   651  000053                     	ds	1
   652  000054                     _USART_Status:
   653                           	opt stack 0
   654  000054                     	ds	1
   655  000055                     _cad:
   656                           	opt stack 0
   657  000055                     	ds	1
   658  000056                     _contador:
   659                           	opt stack 0
   660  000056                     	ds	1
   661  000057                     _contador2:
   662                           	opt stack 0
   663  000057                     	ds	1
   664  000058                     _j:
   665                           	opt stack 0
   666  000058                     	ds	1
   667  000059                     _lenght:
   668                           	opt stack 0
   669  000059                     	ds	1
   670  00005A                     _num_med_hi:
   671                           	opt stack 0
   672  00005A                     	ds	1
   673  00005B                     _num_med_low:
   674                           	opt stack 0
   675  00005B                     	ds	1
   676  00005C                     _num_med_medium:
   677                           	opt stack 0
   678  00005C                     	ds	1
   679  00005D                     _packet:
   680                           	opt stack 0
   681  00005D                     	ds	1
   682                           tblptru	equ	0xFF8
   683                           tblptrh	equ	0xFF7
   684                           tblptrl	equ	0xFF6
   685                           tablat	equ	0xFF5
   686                           postinc0	equ	0xFEE
   687                           wreg	equ	0xFE8
   688                           postdec1	equ	0xFE5
   689                           fsr1l	equ	0xFE1
   690                           
   691                           	psect	dataCOMRAM
   692  00005E                     __pdataCOMRAM:
   693                           	opt stack 0
   694  00005E                     _countup:
   695                           	opt stack 0
   696  00005E                     	ds	2
   697                           tblptru	equ	0xFF8
   698                           tblptrh	equ	0xFF7
   699                           tblptrl	equ	0xFF6
   700                           tablat	equ	0xFF5
   701                           postinc0	equ	0xFEE
   702                           wreg	equ	0xFE8
   703                           postdec1	equ	0xFE5
   704                           fsr1l	equ	0xFE1
   705                           
   706                           	psect	bssBANK0
   707  0000E9                     __pbssBANK0:
   708                           	opt stack 0
   709  0000E9                     _DutyCycle:
   710                           	opt stack 0
   711  0000E9                     	ds	2
   712  0000EB                     _FinComandB:
   713                           	opt stack 0
   714  0000EB                     	ds	1
   715  0000EC                     _FinComandT:
   716                           	opt stack 0
   717  0000EC                     	ds	1
   718  0000ED                     _cleanBfer:
   719                           	opt stack 0
   720  0000ED                     	ds	1
   721  0000EE                     _Timer2Config:
   722                           	opt stack 0
   723  0000EE                     	ds	1
   724                           tblptru	equ	0xFF8
   725                           tblptrh	equ	0xFF7
   726                           tblptrl	equ	0xFF6
   727                           tablat	equ	0xFF5
   728                           postinc0	equ	0xFEE
   729                           wreg	equ	0xFE8
   730                           postdec1	equ	0xFE5
   731                           fsr1l	equ	0xFE1
   732                           
   733                           	psect	bssBANK1
   734  000100                     __pbssBANK1:
   735                           	opt stack 0
   736  000100                     _TramaTablet:
   737                           	opt stack 0
   738  000100                     	ds	20
   739  000114                     _array:
   740                           	opt stack 0
   741  000114                     	ds	20
   742  000128                     _BluetoothDato:
   743                           	opt stack 0
   744  000128                     	ds	50
   745  00015A                     _comando:
   746                           	opt stack 0
   747  00015A                     	ds	20
   748                           tblptru	equ	0xFF8
   749                           tblptrh	equ	0xFF7
   750                           tblptrl	equ	0xFF6
   751                           tablat	equ	0xFF5
   752                           postinc0	equ	0xFEE
   753                           wreg	equ	0xFE8
   754                           postdec1	equ	0xFE5
   755                           fsr1l	equ	0xFE1
   756                           
   757                           	psect	dataBANK1
   758  00016E                     __pdataBANK1:
   759                           	opt stack 0
   760  00016E                     BT_Init@F5671:
   761                           	opt stack 0
   762  00016E                     	ds	18
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           
   772                           	psect	cstackBANK0
   773  000060                     __pcstackBANK0:
   774                           	opt stack 0
   775  000060                     ??_OpenPWM2:
   776  000060                     ?_getCNY70Value:
   777                           	opt stack 0
   778  000060                     ?___awmod:
   779                           	opt stack 0
   780  000060                     ?___ftpack:
   781                           	opt stack 0
   782  000060                     ?___ftneg:
   783                           	opt stack 0
   784  000060                     ?__tdiv_to_l_:
   785                           	opt stack 0
   786  000060                     ?__div_to_l_:
   787                           	opt stack 0
   788  000060                     ?___lldiv:
   789                           	opt stack 0
   790  000060                     Lcd_Port@a:
   791                           	opt stack 0
   792  000060                     OpenPWM1@period:
   793                           	opt stack 0
   794  000060                     WriteUSART@data:
   795                           	opt stack 0
   796  000060                     clrBufferUSART@i:
   797                           	opt stack 0
   798  000060                     Pause_ms@x:
   799                           	opt stack 0
   800  000060                     SetDCPWM1@dutycycle:
   801                           	opt stack 0
   802  000060                     SetDCPWM2@dutycycle:
   803                           	opt stack 0
   804  000060                     OpenUSART@spbrg:
   805                           	opt stack 0
   806  000060                     ___awmod@dividend:
   807                           	opt stack 0
   808  000060                     __div_to_l_@f1:
   809                           	opt stack 0
   810  000060                     ___ftpack@arg:
   811                           	opt stack 0
   812  000060                     __tdiv_to_l_@f1:
   813                           	opt stack 0
   814  000060                     ___ftge@ff1:
   815                           	opt stack 0
   816  000060                     ___ftneg@f1:
   817                           	opt stack 0
   818  000060                     ___lldiv@dividend:
   819                           	opt stack 0
   820                           
   821                           ; 4 bytes @ 0x0
   822  000060                     	ds	1
   823  000061                     ??_Lcd_Cmd:
   824  000061                     putcTxU1@character:
   825                           	opt stack 0
   826  000061                     Lcd_Write_Char@temp:
   827                           	opt stack 0
   828  000061                     PWM_init1@period:
   829                           	opt stack 0
   830  000061                     OpenPWM2@period:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x1
   834  000061                     	ds	1
   835  000062                     ??_OpenUSART:
   836  000062                     ??_SetDCPWM1:
   837  000062                     ??_SetDCPWM2:
   838  000062                     ??_Pause_ms:
   839  000062                     Lcd_Cmd@a:
   840                           	opt stack 0
   841  000062                     Lcd_Write_Char@y:
   842                           	opt stack 0
   843  000062                     OpenPWM2@ccp2mx:
   844                           	opt stack 0
   845  000062                     putSTRINGU1@dato:
   846                           	opt stack 0
   847  000062                     ___awmod@divisor:
   848                           	opt stack 0
   849                           
   850                           ; 2 bytes @ 0x2
   851  000062                     	ds	1
   852  000063                     ??_Lcd_Init:
   853  000063                     Lcd_Set_Cursor@b:
   854                           	opt stack 0
   855  000063                     Lcd_Write_Char@a:
   856                           	opt stack 0
   857  000063                     PWM_init2@period:
   858                           	opt stack 0
   859  000063                     ___ftpack@exp:
   860                           	opt stack 0
   861  000063                     Pause_ms@i:
   862                           	opt stack 0
   863  000063                     __div_to_l_@f2:
   864                           	opt stack 0
   865  000063                     __tdiv_to_l_@f2:
   866                           	opt stack 0
   867  000063                     ___ftge@ff2:
   868                           	opt stack 0
   869                           
   870                           ; 3 bytes @ 0x3
   871  000063                     	ds	1
   872  000064                     Lcd_Set_Cursor@a:
   873                           	opt stack 0
   874  000064                     ___awmod@counter:
   875                           	opt stack 0
   876  000064                     ___ftpack@sign:
   877                           	opt stack 0
   878  000064                     putSTRINGU1@total:
   879                           	opt stack 0
   880  000064                     Lcd_Write_String@a:
   881                           	opt stack 0
   882  000064                     SetDCPWM1@DCycle:
   883                           	opt stack 0
   884  000064                     SetDCPWM2@DCycle:
   885                           	opt stack 0
   886  000064                     ___lldiv@divisor:
   887                           	opt stack 0
   888                           
   889                           ; 4 bytes @ 0x4
   890  000064                     	ds	1
   891  000065                     ??___ftpack:
   892  000065                     Pause_seg@x:
   893                           	opt stack 0
   894  000065                     Lcd_Set_Cursor@z:
   895                           	opt stack 0
   896  000065                     OpenUSART@config:
   897                           	opt stack 0
   898  000065                     ___awmod@sign:
   899                           	opt stack 0
   900                           
   901                           ; 1 bytes @ 0x5
   902  000065                     	ds	1
   903  000066                     ??_putSTRINGU1:
   904  000066                     ??_Lcd_Write_String:
   905  000066                     ??__tdiv_to_l_:
   906  000066                     ??__div_to_l_:
   907  000066                     ??___ftge:
   908  000066                     ?___awdiv:
   909                           	opt stack 0
   910  000066                     Pause_seg@i:
   911                           	opt stack 0
   912  000066                     UART1_Init@bdr:
   913                           	opt stack 0
   914  000066                     Lcd_Set_Cursor@y:
   915                           	opt stack 0
   916  000066                     ___awdiv@dividend:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x6
   920  000066                     	ds	1
   921  000067                     Lcd_Set_Cursor@temp:
   922                           	opt stack 0
   923  000067                     putcBluetoothString@a:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x7
   927  000067                     	ds	1
   928  000068                     ?___lbtoft:
   929                           	opt stack 0
   930  000068                     ?___lltoft:
   931                           	opt stack 0
   932  000068                     putSTRINGU1@last:
   933                           	opt stack 0
   934  000068                     Lcd_Write_String@i:
   935                           	opt stack 0
   936  000068                     ___awdiv@divisor:
   937                           	opt stack 0
   938  000068                     ___lldiv@quotient:
   939                           	opt stack 0
   940  000068                     ___lltoft@c:
   941                           	opt stack 0
   942                           
   943                           ; 4 bytes @ 0x8
   944  000068                     	ds	1
   945  000069                     ??_putcBluetoothString:
   946  000069                     putSTRINGU1@cont:
   947                           	opt stack 0
   948  000069                     __tdiv_to_l_@quot:
   949                           	opt stack 0
   950                           
   951                           ; 4 bytes @ 0x9
   952  000069                     	ds	1
   953  00006A                     ___awdiv@counter:
   954                           	opt stack 0
   955  00006A                     SendBlueToothCommand@command:
   956                           	opt stack 0
   957  00006A                     __div_to_l_@quot:
   958                           	opt stack 0
   959                           
   960                           ; 4 bytes @ 0xA
   961  00006A                     	ds	1
   962  00006B                     ___awdiv@sign:
   963                           	opt stack 0
   964  00006B                     ___lbtoft@c:
   965                           	opt stack 0
   966  00006B                     putcBluetoothString@i:
   967                           	opt stack 0
   968                           
   969                           ; 2 bytes @ 0xB
   970  00006B                     	ds	1
   971  00006C                     ??___lltoft:
   972  00006C                     ___lldiv@counter:
   973                           	opt stack 0
   974  00006C                     SendBlueToothCommand@total:
   975                           	opt stack 0
   976  00006C                     ___awdiv@quotient:
   977                           	opt stack 0
   978                           
   979                           ; 2 bytes @ 0xC
   980  00006C                     	ds	1
   981  00006D                     ?___llmod:
   982                           	opt stack 0
   983  00006D                     __tdiv_to_l_@cntr:
   984                           	opt stack 0
   985  00006D                     ___llmod@dividend:
   986                           	opt stack 0
   987                           
   988                           ; 4 bytes @ 0xD
   989  00006D                     	ds	1
   990  00006E                     ?___wmul:
   991                           	opt stack 0
   992  00006E                     __div_to_l_@cntr:
   993                           	opt stack 0
   994  00006E                     __tdiv_to_l_@exp1:
   995                           	opt stack 0
   996  00006E                     ___wmul@multiplier:
   997                           	opt stack 0
   998  00006E                     BT_Init@nameBT:
   999                           	opt stack 0
  1000                           
  1001                           ; 18 bytes @ 0xE
  1002  00006E                     	ds	1
  1003  00006F                     __div_to_l_@exp1:
  1004                           	opt stack 0
  1005                           
  1006                           ; 1 bytes @ 0xF
  1007  00006F                     	ds	1
  1008  000070                     ___lltoft@exp:
  1009                           	opt stack 0
  1010  000070                     ___wmul@multiplicand:
  1011                           	opt stack 0
  1012                           
  1013                           ; 2 bytes @ 0x10
  1014  000070                     	ds	1
  1015  000071                     ___llmod@divisor:
  1016                           	opt stack 0
  1017                           
  1018                           ; 4 bytes @ 0x11
  1019  000071                     	ds	1
  1020  000072                     ___wmul@product:
  1021                           	opt stack 0
  1022                           
  1023                           ; 2 bytes @ 0x12
  1024  000072                     	ds	2
  1025  000074                     ?___ftmul:
  1026                           	opt stack 0
  1027  000074                     ___ftmul@f1:
  1028                           	opt stack 0
  1029                           
  1030                           ; 3 bytes @ 0x14
  1031  000074                     	ds	1
  1032  000075                     ___llmod@counter:
  1033                           	opt stack 0
  1034                           
  1035                           ; 1 bytes @ 0x15
  1036  000075                     	ds	2
  1037  000077                     ___ftmul@f2:
  1038                           	opt stack 0
  1039                           
  1040                           ; 3 bytes @ 0x17
  1041  000077                     	ds	3
  1042  00007A                     ??___ftmul:
  1043                           
  1044                           ; 0 bytes @ 0x1A
  1045  00007A                     	ds	3
  1046  00007D                     ___ftmul@exp:
  1047                           	opt stack 0
  1048                           
  1049                           ; 1 bytes @ 0x1D
  1050  00007D                     	ds	1
  1051  00007E                     ___ftmul@f3_as_product:
  1052                           	opt stack 0
  1053                           
  1054                           ; 3 bytes @ 0x1E
  1055  00007E                     	ds	2
  1056  000080                     ??_Inicializa_Driveby:
  1057                           
  1058                           ; 0 bytes @ 0x20
  1059  000080                     	ds	1
  1060  000081                     ___ftmul@cntr:
  1061                           	opt stack 0
  1062  000081                     Inicializa_Driveby@i:
  1063                           	opt stack 0
  1064                           
  1065                           ; 2 bytes @ 0x21
  1066  000081                     	ds	1
  1067  000082                     ___ftmul@sign:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x22
  1071  000082                     	ds	1
  1072  000083                     ?_fround:
  1073                           	opt stack 0
  1074  000083                     ?_scale:
  1075                           	opt stack 0
  1076                           
  1077                           ; 3 bytes @ 0x23
  1078  000083                     	ds	3
  1079  000086                     _fround$2760:
  1080                           	opt stack 0
  1081  000086                     _scale$2761:
  1082                           	opt stack 0
  1083                           
  1084                           ; 3 bytes @ 0x26
  1085  000086                     	ds	3
  1086  000089                     scale@scl:
  1087                           	opt stack 0
  1088  000089                     _fround$2759:
  1089                           	opt stack 0
  1090                           
  1091                           ; 3 bytes @ 0x29
  1092  000089                     	ds	1
  1093  00008A                     ?___fttol:
  1094                           	opt stack 0
  1095  00008A                     ___fttol@f1:
  1096                           	opt stack 0
  1097                           
  1098                           ; 3 bytes @ 0x2A
  1099  00008A                     	ds	2
  1100  00008C                     fround@prec:
  1101                           	opt stack 0
  1102                           
  1103                           ; 1 bytes @ 0x2C
  1104  00008C                     	ds	1
  1105  00008D                     ?___ftadd:
  1106                           	opt stack 0
  1107  00008D                     ___ftadd@f1:
  1108                           	opt stack 0
  1109                           
  1110                           ; 3 bytes @ 0x2D
  1111  00008D                     	ds	1
  1112  00008E                     ??___fttol:
  1113                           
  1114                           ; 0 bytes @ 0x2E
  1115  00008E                     	ds	2
  1116  000090                     ___ftadd@f2:
  1117                           	opt stack 0
  1118                           
  1119                           ; 3 bytes @ 0x30
  1120  000090                     	ds	3
  1121  000093                     ??___ftadd:
  1122  000093                     ___fttol@sign1:
  1123                           	opt stack 0
  1124                           
  1125                           ; 1 bytes @ 0x33
  1126  000093                     	ds	1
  1127  000094                     ___fttol@lval:
  1128                           	opt stack 0
  1129                           
  1130                           ; 4 bytes @ 0x34
  1131  000094                     	ds	2
  1132  000096                     ___ftadd@sign:
  1133                           	opt stack 0
  1134                           
  1135                           ; 1 bytes @ 0x36
  1136  000096                     	ds	1
  1137  000097                     ___ftadd@exp2:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x37
  1141  000097                     	ds	1
  1142  000098                     ___ftadd@exp1:
  1143                           	opt stack 0
  1144  000098                     ___fttol@exp1:
  1145                           	opt stack 0
  1146                           
  1147                           ; 1 bytes @ 0x38
  1148  000098                     	ds	1
  1149  000099                     ??_PWM_DutyCycle1:
  1150  000099                     ??_PWM_DutyCycle2:
  1151  000099                     ?___ftsub:
  1152                           	opt stack 0
  1153  000099                     ___ftsub@f1:
  1154                           	opt stack 0
  1155                           
  1156                           ; 3 bytes @ 0x39
  1157  000099                     	ds	3
  1158  00009C                     ___ftsub@f2:
  1159                           	opt stack 0
  1160                           
  1161                           ; 3 bytes @ 0x3C
  1162  00009C                     	ds	1
  1163  00009D                     PWM_DutyCycle1@DutyCycle:
  1164                           	opt stack 0
  1165  00009D                     PWM_DutyCycle2@DutyCycle:
  1166                           	opt stack 0
  1167                           
  1168                           ; 2 bytes @ 0x3D
  1169  00009D                     	ds	2
  1170  00009F                     ?_sprintf:
  1171                           	opt stack 0
  1172  00009F                     PWM_DutyCycle1@percentageDuty:
  1173                           	opt stack 0
  1174  00009F                     PWM_DutyCycle2@percentageDuty:
  1175                           	opt stack 0
  1176  00009F                     sprintf@sp:
  1177                           	opt stack 0
  1178                           
  1179                           ; 2 bytes @ 0x3F
  1180  00009F                     	ds	1
  1181  0000A0                     PWM_DutyCycle1@DC:
  1182                           	opt stack 0
  1183  0000A0                     PWM_DutyCycle2@DC:
  1184                           	opt stack 0
  1185                           
  1186                           ; 2 bytes @ 0x40
  1187  0000A0                     	ds	1
  1188  0000A1                     sprintf@f:
  1189                           	opt stack 0
  1190                           
  1191                           ; 2 bytes @ 0x41
  1192  0000A1                     	ds	5
  1193  0000A6                     ??_sprintf:
  1194                           
  1195                           ; 0 bytes @ 0x46
  1196  0000A6                     	ds	6
  1197  0000AC                     _sprintf$2762:
  1198                           	opt stack 0
  1199                           
  1200                           ; 3 bytes @ 0x4C
  1201  0000AC                     	ds	3
  1202  0000AF                     _sprintf$1737:
  1203                           	opt stack 0
  1204                           
  1205                           ; 4 bytes @ 0x4F
  1206  0000AF                     	ds	4
  1207  0000B3                     sprintf@vd:
  1208                           	opt stack 0
  1209                           
  1210                           ; 4 bytes @ 0x53
  1211  0000B3                     	ds	4
  1212  0000B7                     sprintf@vd_1739:
  1213                           	opt stack 0
  1214                           
  1215                           ; 4 bytes @ 0x57
  1216  0000B7                     	ds	4
  1217  0000BB                     sprintf@ap:
  1218                           	opt stack 0
  1219                           
  1220                           ; 2 bytes @ 0x5B
  1221  0000BB                     	ds	2
  1222  0000BD                     sprintf@flag:
  1223                           	opt stack 0
  1224                           
  1225                           ; 2 bytes @ 0x5D
  1226  0000BD                     	ds	2
  1227  0000BF                     sprintf@integ:
  1228                           	opt stack 0
  1229                           
  1230                           ; 3 bytes @ 0x5F
  1231  0000BF                     	ds	3
  1232  0000C2                     sprintf@prec:
  1233                           	opt stack 0
  1234                           
  1235                           ; 2 bytes @ 0x62
  1236  0000C2                     	ds	2
  1237  0000C4                     sprintf@_val:
  1238                           	opt stack 0
  1239                           
  1240                           ; 5 bytes @ 0x64
  1241  0000C4                     	ds	5
  1242  0000C9                     sprintf@exp:
  1243                           	opt stack 0
  1244                           
  1245                           ; 2 bytes @ 0x69
  1246  0000C9                     	ds	2
  1247  0000CB                     sprintf@fval:
  1248                           	opt stack 0
  1249                           
  1250                           ; 3 bytes @ 0x6B
  1251  0000CB                     	ds	3
  1252  0000CE                     sprintf@c:
  1253                           	opt stack 0
  1254                           
  1255                           ; 1 bytes @ 0x6E
  1256  0000CE                     	ds	1
  1257  0000CF                     putcBluetoothInt@a:
  1258                           	opt stack 0
  1259  0000CF                     Lcd_Write_Integer@a:
  1260                           	opt stack 0
  1261                           
  1262                           ; 2 bytes @ 0x6F
  1263  0000CF                     	ds	2
  1264  0000D1                     putcBluetoothInt@s:
  1265                           	opt stack 0
  1266  0000D1                     Lcd_Write_Integer@s:
  1267                           	opt stack 0
  1268                           
  1269                           ; 20 bytes @ 0x71
  1270  0000D1                     	ds	20
  1271  0000E5                     putcBluetoothInt@i:
  1272                           	opt stack 0
  1273                           
  1274                           ; 2 bytes @ 0x85
  1275  0000E5                     	ds	2
  1276  0000E7                     Comando_Tablet@sensed:
  1277                           	opt stack 0
  1278                           
  1279                           ; 2 bytes @ 0x87
  1280  0000E7                     	ds	2
  1281  0000E9                     tblptru	equ	0xFF8
  1282                           tblptrh	equ	0xFF7
  1283                           tblptrl	equ	0xFF6
  1284                           tablat	equ	0xFF5
  1285                           postinc0	equ	0xFEE
  1286                           wreg	equ	0xFE8
  1287                           postdec1	equ	0xFE5
  1288                           fsr1l	equ	0xFE1
  1289                           
  1290                           ; 0 bytes @ 0x89
  1291                           
  1292                           	psect	cstackCOMRAM
  1293  000001                     __pcstackCOMRAM:
  1294                           	opt stack 0
  1295  000001                     ?i2___ftpack:
  1296                           	opt stack 0
  1297  000001                     ReadUSART@data:
  1298                           	opt stack 0
  1299  000001                     i2Lcd_Port@a:
  1300                           	opt stack 0
  1301  000001                     i2SetDCPWM1@dutycycle:
  1302                           	opt stack 0
  1303  000001                     i2SetDCPWM2@dutycycle:
  1304                           	opt stack 0
  1305  000001                     i2___ftpack@arg:
  1306                           	opt stack 0
  1307                           
  1308                           ; 3 bytes @ 0x0
  1309  000001                     	ds	1
  1310  000002                     ??i2_Lcd_Cmd:
  1311  000002                     i2Lcd_Write_Char@temp:
  1312                           	opt stack 0
  1313                           
  1314                           ; 1 bytes @ 0x1
  1315  000002                     	ds	1
  1316  000003                     ??i2_SetDCPWM1:
  1317  000003                     ??i2_SetDCPWM2:
  1318  000003                     i2Lcd_Cmd@a:
  1319                           	opt stack 0
  1320  000003                     i2Lcd_Write_Char@y:
  1321                           	opt stack 0
  1322                           
  1323                           ; 1 bytes @ 0x2
  1324  000003                     	ds	1
  1325  000004                     i2Lcd_Set_Cursor@b:
  1326                           	opt stack 0
  1327  000004                     i2Lcd_Write_Char@a:
  1328                           	opt stack 0
  1329  000004                     i2___ftpack@exp:
  1330                           	opt stack 0
  1331                           
  1332                           ; 1 bytes @ 0x3
  1333  000004                     	ds	1
  1334  000005                     i2Lcd_Set_Cursor@a:
  1335                           	opt stack 0
  1336  000005                     i2___ftpack@sign:
  1337                           	opt stack 0
  1338  000005                     i2Lcd_Write_String@a:
  1339                           	opt stack 0
  1340  000005                     i2SetDCPWM1@DCycle:
  1341                           	opt stack 0
  1342  000005                     i2SetDCPWM2@DCycle:
  1343                           	opt stack 0
  1344                           
  1345                           ; 2 bytes @ 0x4
  1346  000005                     	ds	1
  1347  000006                     ??i2___ftpack:
  1348  000006                     i2Lcd_Set_Cursor@z:
  1349                           	opt stack 0
  1350                           
  1351                           ; 1 bytes @ 0x5
  1352  000006                     	ds	1
  1353  000007                     ??i2_Lcd_Write_String:
  1354  000007                     i2Lcd_Set_Cursor@y:
  1355                           	opt stack 0
  1356                           
  1357                           ; 1 bytes @ 0x6
  1358  000007                     	ds	1
  1359  000008                     i2Lcd_Set_Cursor@temp:
  1360                           	opt stack 0
  1361                           
  1362                           ; 1 bytes @ 0x7
  1363  000008                     	ds	1
  1364  000009                     ?i2___lbtoft:
  1365                           	opt stack 0
  1366  000009                     i2Lcd_Write_String@i:
  1367                           	opt stack 0
  1368                           
  1369                           ; 2 bytes @ 0x8
  1370  000009                     	ds	3
  1371  00000C                     i2___lbtoft@c:
  1372                           	opt stack 0
  1373                           
  1374                           ; 1 bytes @ 0xB
  1375  00000C                     	ds	1
  1376  00000D                     ?i2___ftmul:
  1377                           	opt stack 0
  1378  00000D                     i2___ftmul@f1:
  1379                           	opt stack 0
  1380                           
  1381                           ; 3 bytes @ 0xC
  1382  00000D                     	ds	3
  1383  000010                     i2___ftmul@f2:
  1384                           	opt stack 0
  1385                           
  1386                           ; 3 bytes @ 0xF
  1387  000010                     	ds	3
  1388  000013                     ??i2___ftmul:
  1389                           
  1390                           ; 0 bytes @ 0x12
  1391  000013                     	ds	3
  1392  000016                     i2___ftmul@exp:
  1393                           	opt stack 0
  1394                           
  1395                           ; 1 bytes @ 0x15
  1396  000016                     	ds	1
  1397  000017                     i2___ftmul@f3_as_product:
  1398                           	opt stack 0
  1399                           
  1400                           ; 3 bytes @ 0x16
  1401  000017                     	ds	3
  1402  00001A                     i2___ftmul@cntr:
  1403                           	opt stack 0
  1404                           
  1405                           ; 1 bytes @ 0x19
  1406  00001A                     	ds	1
  1407  00001B                     i2___ftmul@sign:
  1408                           	opt stack 0
  1409                           
  1410                           ; 1 bytes @ 0x1A
  1411  00001B                     	ds	1
  1412  00001C                     ?i2___fttol:
  1413                           	opt stack 0
  1414  00001C                     i2___fttol@f1:
  1415                           	opt stack 0
  1416                           
  1417                           ; 3 bytes @ 0x1B
  1418  00001C                     	ds	4
  1419  000020                     ??i2___fttol:
  1420                           
  1421                           ; 0 bytes @ 0x1F
  1422  000020                     	ds	5
  1423  000025                     i2___fttol@sign1:
  1424                           	opt stack 0
  1425                           
  1426                           ; 1 bytes @ 0x24
  1427  000025                     	ds	1
  1428  000026                     i2___fttol@lval:
  1429                           	opt stack 0
  1430                           
  1431                           ; 4 bytes @ 0x25
  1432  000026                     	ds	4
  1433  00002A                     i2___fttol@exp1:
  1434                           	opt stack 0
  1435                           
  1436                           ; 1 bytes @ 0x29
  1437  00002A                     	ds	1
  1438  00002B                     ??i2_PWM_DutyCycle1:
  1439  00002B                     ??i2_PWM_DutyCycle2:
  1440                           
  1441                           ; 0 bytes @ 0x2A
  1442  00002B                     	ds	4
  1443  00002F                     i2PWM_DutyCycle1@DutyCycle:
  1444                           	opt stack 0
  1445  00002F                     i2PWM_DutyCycle2@DutyCycle:
  1446                           	opt stack 0
  1447                           
  1448                           ; 2 bytes @ 0x2E
  1449  00002F                     	ds	2
  1450  000031                     i2PWM_DutyCycle1@percentageDuty:
  1451                           	opt stack 0
  1452  000031                     i2PWM_DutyCycle2@percentageDuty:
  1453                           	opt stack 0
  1454                           
  1455                           ; 1 bytes @ 0x30
  1456  000031                     	ds	1
  1457  000032                     i2PWM_DutyCycle1@DC:
  1458                           	opt stack 0
  1459  000032                     i2PWM_DutyCycle2@DC:
  1460                           	opt stack 0
  1461                           
  1462                           ; 2 bytes @ 0x31
  1463  000032                     	ds	2
  1464  000034                     ??_TMRO_USART:
  1465                           
  1466                           ; 0 bytes @ 0x33
  1467  000034                     	ds	14
  1468                           tblptru	equ	0xFF8
  1469                           tblptrh	equ	0xFF7
  1470                           tblptrl	equ	0xFF6
  1471                           tablat	equ	0xFF5
  1472                           postinc0	equ	0xFEE
  1473                           wreg	equ	0xFE8
  1474                           postdec1	equ	0xFE5
  1475                           fsr1l	equ	0xFE1
  1476                           
  1477 ;;
  1478 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1479 ;;
  1480 ;; *************** function _main *****************
  1481 ;; Defined at:
  1482 ;;		line 156 in file "robot.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  2  397[COMRAM] int 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1496 ;;      Params:         0       0       0       0       0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1499 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels required when called:   10
  1502 ;; This function calls:
  1503 ;;		_Comando_Tablet
  1504 ;;		_Inicializa_Driveby
  1505 ;;		_Lcd_Clear
  1506 ;;		_Lcd_Init
  1507 ;;		_Lcd_Set_Cursor
  1508 ;;		_Lcd_Write_String
  1509 ;;		_UART1_Init
  1510 ;;		_clrBufferUSART
  1511 ;; This function is called by:
  1512 ;;		Startup code after reset
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text0
  1517  0026FC                     __ptext0:
  1518                           	opt stack 0
  1519  0026FC                     _main:
  1520                           	opt stack 21
  1521                           
  1522                           ;robot.c: 158: INTCON =0X00;
  1523                           
  1524                           ;incstack = 0
  1525  0026FC  0E00               	movlw	0
  1526  0026FE  6EF2               	movwf	intcon,c	;volatile
  1527                           
  1528                           ;robot.c: 159: TRISD = 0x00;
  1529  002700  0E00               	movlw	0
  1530  002702  6E95               	movwf	3989,c	;volatile
  1531                           
  1532                           ;robot.c: 160: TRISE = 0x00;
  1533  002704  0E00               	movlw	0
  1534  002706  6E96               	movwf	3990,c	;volatile
  1535                           
  1536                           ;robot.c: 161: PORTEbits.RE1=0;
  1537  002708  9284               	bcf	3972,1,c	;volatile
  1538                           
  1539                           ;robot.c: 162: ADCON1bits.PCFG=0b1111;
  1540  00270A  80C1               	bsf	4033,0,c	;volatile
  1541  00270C  82C1               	bsf	4033,1,c	;volatile
  1542  00270E  84C1               	bsf	4033,2,c	;volatile
  1543  002710  86C1               	bsf	4033,3,c	;volatile
  1544                           
  1545                           ;robot.c: 163: Lcd_Init();
  1546  002712  EC87  F016         	call	_Lcd_Init	;wreg free
  1547                           
  1548                           ;robot.c: 164: Lcd_Clear();
  1549  002716  EC8C  F01A         	call	_Lcd_Clear	;wreg free
  1550                           
  1551                           ;robot.c: 165: Lcd_Set_Cursor(1,1);
  1552  00271A  0E01               	movlw	1
  1553  00271C  0100               	movlb	0	; () banked
  1554  00271E  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1555  002720  0E01               	movlw	1
  1556  002722  ECC3  F016         	call	_Lcd_Set_Cursor
  1557                           
  1558                           ;robot.c: 166: Lcd_Write_String("Inicio");
  1559  002726  0E7F               	movlw	high STR_23
  1560  002728  0100               	movlb	0	; () banked
  1561  00272A  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1562  00272C  0EEF               	movlw	low STR_23
  1563  00272E  0100               	movlb	0	; () banked
  1564  002730  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1565  002732  EC7C  F014         	call	_Lcd_Write_String	;wreg free
  1566                           
  1567                           ;robot.c: 167: Inicializa_Driveby();
  1568  002736  EC5A  F00F         	call	_Inicializa_Driveby	;wreg free
  1569                           
  1570                           ;robot.c: 168: PORTAbits.RA2 = 1;
  1571  00273A  8480               	bsf	3968,2,c	;volatile
  1572  00273C                     l4836:
  1573                           
  1574                           ;robot.c: 172: {
  1575                           ;robot.c: 175: if (cleanBfer == 1) {
  1576  00273C  0100               	movlb	0	; () banked
  1577  00273E  05ED               	decf	_cleanBfer& (0+255),w,b
  1578  002740  A4D8               	btfss	status,2,c
  1579  002742  D005               	goto	l4842
  1580                           
  1581                           ; BSR set to: 0
  1582                           ;robot.c: 176: clrBufferUSART();
  1583  002744  ECA4  F018         	call	_clrBufferUSART	;wreg free
  1584                           
  1585                           ;robot.c: 177: cleanBfer = 0;
  1586  002748  0E00               	movlw	0
  1587  00274A  0100               	movlb	0	; () banked
  1588  00274C  6FED               	movwf	_cleanBfer& (0+255),b
  1589  00274E                     l4842:
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;robot.c: 178: }
  1593                           ;robot.c: 179: if (FinComandT == 1) {
  1594  00274E  0100               	movlb	0	; () banked
  1595  002750  05EC               	decf	_FinComandT& (0+255),w,b
  1596  002752  A4D8               	btfss	status,2,c
  1597  002754  D01E               	goto	l4862
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;robot.c: 180: Lcd_Clear();
  1601  002756  EC8C  F01A         	call	_Lcd_Clear	;wreg free
  1602                           
  1603                           ;robot.c: 181: Lcd_Set_Cursor(2,1);
  1604  00275A  0E01               	movlw	1
  1605  00275C  0100               	movlb	0	; () banked
  1606  00275E  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1607  002760  0E02               	movlw	2
  1608  002762  ECC3  F016         	call	_Lcd_Set_Cursor
  1609                           
  1610                           ;robot.c: 182: Lcd_Write_String("CMD TABLET");
  1611  002766  0E7F               	movlw	high STR_24
  1612  002768  0100               	movlb	0	; () banked
  1613  00276A  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  1614  00276C  0EC8               	movlw	low STR_24
  1615  00276E  0100               	movlb	0	; () banked
  1616  002770  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  1617  002772  EC7C  F014         	call	_Lcd_Write_String	;wreg free
  1618                           
  1619                           ;robot.c: 183: FinComandT = 0;
  1620  002776  0E00               	movlw	0
  1621  002778  0100               	movlb	0	; () banked
  1622  00277A  6FEC               	movwf	_FinComandT& (0+255),b
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;robot.c: 184: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1626  00277C  0E4F               	movlw	79
  1627  00277E  16AB               	andwf	4011,f,c	;volatile
  1628                           
  1629                           ; BSR set to: 0
  1630  002780  9AAC               	bcf	4012,5,c	;volatile
  1631                           
  1632                           ; BSR set to: 0
  1633  002782  0ECF               	movlw	207
  1634  002784  169D               	andwf	3997,f,c	;volatile
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;robot.c: 185: Comando_Tablet();
  1638  002786  EC82  F00D         	call	_Comando_Tablet	;wreg free
  1639                           
  1640                           ;robot.c: 186: UART1_Init(51);
  1641  00278A  0E33               	movlw	51
  1642  00278C  EC5B  F01A         	call	_UART1_Init
  1643                           
  1644                           ;robot.c: 188: }
  1645  002790  D7D5               	goto	l4836
  1646  002792                     l4862:
  1647                           
  1648                           ;robot.c: 189: else if (FinComandB == 1) {
  1649  002792  0100               	movlb	0	; () banked
  1650  002794  05EB               	decf	_FinComandB& (0+255),w,b
  1651  002796  A4D8               	btfss	status,2,c
  1652  002798  D7D1               	goto	l4836
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;robot.c: 194: FinComandB = 0;
  1656  00279A  0E00               	movlw	0
  1657  00279C  0100               	movlb	0	; () banked
  1658  00279E  6FEB               	movwf	_FinComandB& (0+255),b
  1659                           
  1660                           ; BSR set to: 0
  1661                           ;robot.c: 195: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1662  0027A0  0E4F               	movlw	79
  1663  0027A2  16AB               	andwf	4011,f,c	;volatile
  1664                           
  1665                           ; BSR set to: 0
  1666  0027A4  9AAC               	bcf	4012,5,c	;volatile
  1667                           
  1668                           ; BSR set to: 0
  1669  0027A6  0ECF               	movlw	207
  1670  0027A8  169D               	andwf	3997,f,c	;volatile
  1671  0027AA  D7C8               	goto	l4836
  1672  0027AC                     __end_of_main:
  1673                           	opt stack 0
  1674                           tblptru	equ	0xFF8
  1675                           tblptrh	equ	0xFF7
  1676                           tblptrl	equ	0xFF6
  1677                           tablat	equ	0xFF5
  1678                           intcon	equ	0xFF2
  1679                           postinc0	equ	0xFEE
  1680                           wreg	equ	0xFE8
  1681                           postdec1	equ	0xFE5
  1682                           fsr1l	equ	0xFE1
  1683                           status	equ	0xFD8
  1684                           
  1685 ;; *************** function _Lcd_Init *****************
  1686 ;; Defined at:
  1687 ;;		line 57 in file "lcd.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;		None               void
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1701 ;;      Params:         0       0       0       0       0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1703 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1704 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1705 ;;Total ram usage:        1 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    6
  1708 ;; This function calls:
  1709 ;;		_Lcd_Cmd
  1710 ;;		_Lcd_Port
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text1
  1717  002D0E                     __ptext1:
  1718                           	opt stack 0
  1719  002D0E                     _Lcd_Init:
  1720                           	opt stack 24
  1721                           
  1722                           ;lcd.c: 58: Lcd_Port(0x00);
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;incstack = 0
  1726  002D0E  0E00               	movlw	0
  1727  002D10  EC74  F019         	call	_Lcd_Port
  1728                           
  1729                           ;lcd.c: 59: _delay((unsigned long)((20)*(4000000/4000.0)));
  1730  002D14  0E1A               	movlw	26
  1731  002D16  0100               	movlb	0	; () banked
  1732  002D18  6F63               	movwf	??_Lcd_Init& (0+255),b
  1733  002D1A  0EF8               	movlw	248
  1734  002D1C                     u5267:
  1735  002D1C  2EE8               	decfsz	wreg,f,c
  1736  002D1E  D7FE               	goto	u5267
  1737  002D20  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
  1738  002D22  D7FC               	goto	u5267
  1739  002D24  D000               	nop2	
  1740                           
  1741                           ;lcd.c: 60: Lcd_Cmd(0x03);
  1742  002D26  0E03               	movlw	3
  1743  002D28  ECFD  F019         	call	_Lcd_Cmd
  1744                           
  1745                           ;lcd.c: 61: _delay((unsigned long)((5)*(4000000/4000.0)));
  1746  002D2C  0E07               	movlw	7
  1747  002D2E  0100               	movlb	0	; () banked
  1748  002D30  6F63               	movwf	??_Lcd_Init& (0+255),b
  1749  002D32  0E7D               	movlw	125
  1750  002D34                     u5277:
  1751  002D34  2EE8               	decfsz	wreg,f,c
  1752  002D36  D7FE               	goto	u5277
  1753  002D38  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
  1754  002D3A  D7FC               	goto	u5277
  1755  002D3C  F000               	nop	
  1756                           
  1757                           ;lcd.c: 62: Lcd_Cmd(0x03);
  1758  002D3E  0E03               	movlw	3
  1759  002D40  ECFD  F019         	call	_Lcd_Cmd
  1760                           
  1761                           ;lcd.c: 63: _delay((unsigned long)((11)*(4000000/4000.0)));
  1762  002D44  0E0F               	movlw	15
  1763  002D46  0100               	movlb	0	; () banked
  1764  002D48  6F63               	movwf	??_Lcd_Init& (0+255),b
  1765  002D4A  0E48               	movlw	72
  1766  002D4C                     u5287:
  1767  002D4C  2EE8               	decfsz	wreg,f,c
  1768  002D4E  D7FE               	goto	u5287
  1769  002D50  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
  1770  002D52  D7FC               	goto	u5287
  1771                           
  1772                           ;lcd.c: 64: Lcd_Cmd(0x03);
  1773  002D54  0E03               	movlw	3
  1774  002D56  ECFD  F019         	call	_Lcd_Cmd
  1775                           
  1776                           ;lcd.c: 66: Lcd_Cmd(0x02);
  1777  002D5A  0E02               	movlw	2
  1778  002D5C  ECFD  F019         	call	_Lcd_Cmd
  1779                           
  1780                           ;lcd.c: 67: Lcd_Cmd(0x02);
  1781  002D60  0E02               	movlw	2
  1782  002D62  ECFD  F019         	call	_Lcd_Cmd
  1783                           
  1784                           ;lcd.c: 68: Lcd_Cmd(0x08);
  1785  002D66  0E08               	movlw	8
  1786  002D68  ECFD  F019         	call	_Lcd_Cmd
  1787                           
  1788                           ;lcd.c: 69: Lcd_Cmd(0x00);
  1789  002D6C  0E00               	movlw	0
  1790  002D6E  ECFD  F019         	call	_Lcd_Cmd
  1791                           
  1792                           ;lcd.c: 70: Lcd_Cmd(0x0C);
  1793  002D72  0E0C               	movlw	12
  1794  002D74  ECFD  F019         	call	_Lcd_Cmd
  1795                           
  1796                           ;lcd.c: 71: Lcd_Cmd(0x00);
  1797  002D78  0E00               	movlw	0
  1798  002D7A  ECFD  F019         	call	_Lcd_Cmd
  1799                           
  1800                           ;lcd.c: 72: Lcd_Cmd(0x06);
  1801  002D7E  0E06               	movlw	6
  1802  002D80  ECFD  F019         	call	_Lcd_Cmd
  1803  002D84  0012               	return	
  1804  002D86                     __end_of_Lcd_Init:
  1805                           	opt stack 0
  1806                           tblptru	equ	0xFF8
  1807                           tblptrh	equ	0xFF7
  1808                           tblptrl	equ	0xFF6
  1809                           tablat	equ	0xFF5
  1810                           intcon	equ	0xFF2
  1811                           postinc0	equ	0xFEE
  1812                           wreg	equ	0xFE8
  1813                           postdec1	equ	0xFE5
  1814                           fsr1l	equ	0xFE1
  1815                           status	equ	0xFD8
  1816                           
  1817 ;; *************** function _Inicializa_Driveby *****************
  1818 ;; Defined at:
  1819 ;;		line 62 in file "Funciones_Db.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  i               2   33[BANK0 ] int 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;		None               void
  1826 ;; Registers used:
  1827 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1833 ;;      Params:         0       0       0       0       0       0       0       0       0
  1834 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1835 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1836 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1837 ;;Total ram usage:        3 bytes
  1838 ;; Hardware stack levels used:    1
  1839 ;; Hardware stack levels required when called:    9
  1840 ;; This function calls:
  1841 ;;		_BT_Init
  1842 ;;		_Lcd_Clear
  1843 ;;		_Lcd_Set_Cursor
  1844 ;;		_Lcd_Write_String
  1845 ;;		_PWM_init1
  1846 ;;		_PWM_init2
  1847 ;;		_Pause_seg
  1848 ;;		_clrBufferUSART
  1849 ;;		_external_interrupt_init
  1850 ;; This function is called by:
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text2
  1856  001EB4                     __ptext2:
  1857                           	opt stack 0
  1858  001EB4                     _Inicializa_Driveby:
  1859                           	opt stack 21
  1860                           
  1861                           ;Funciones_Db.c: 63: TRISA = TRISB = TRISC = TRISD = 0;
  1862                           
  1863                           ;incstack = 0
  1864  001EB4  0E00               	movlw	0
  1865  001EB6  6E95               	movwf	3989,c	;volatile
  1866  001EB8  CF95 FF94          	movff	3989,3988	;volatile
  1867  001EBC  CF94 FF93          	movff	3988,3987	;volatile
  1868  001EC0  CF93 FF92          	movff	3987,3986	;volatile
  1869                           
  1870                           ;Funciones_Db.c: 64: INTCON = 0b11000000;
  1871  001EC4  0EC0               	movlw	192
  1872  001EC6  6EF2               	movwf	intcon,c	;volatile
  1873                           
  1874                           ;Funciones_Db.c: 67: int i = 0;
  1875  001EC8  0E00               	movlw	0
  1876  001ECA  0100               	movlb	0	; () banked
  1877  001ECC  6F82               	movwf	(Inicializa_Driveby@i+1)& (0+255),b
  1878  001ECE  0E00               	movlw	0
  1879  001ED0  0100               	movlb	0	; () banked
  1880  001ED2  6F81               	movwf	Inicializa_Driveby@i& (0+255),b
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;Funciones_Db.c: 68: _delay((unsigned long)((40)*(4000000/4000.0)));
  1884  001ED4  0E34               	movlw	52
  1885  001ED6  0100               	movlb	0	; () banked
  1886  001ED8  6F80               	movwf	??_Inicializa_Driveby& (0+255),b
  1887  001EDA  0EF2               	movlw	242
  1888  001EDC                     u5297:
  1889  001EDC  2EE8               	decfsz	wreg,f,c
  1890  001EDE  D7FE               	goto	u5297
  1891  001EE0  2F80               	decfsz	??_Inicializa_Driveby& (0+255),f,b
  1892  001EE2  D7FC               	goto	u5297
  1893                           
  1894                           ;Funciones_Db.c: 69: OSCCONbits.IRCF = 0b111;
  1895  001EE4  88D3               	bsf	4051,4,c	;volatile
  1896  001EE6  8AD3               	bsf	4051,5,c	;volatile
  1897  001EE8  8CD3               	bsf	4051,6,c	;volatile
  1898                           
  1899                           ;Funciones_Db.c: 74: TRISA = 0;
  1900  001EEA  0E00               	movlw	0
  1901  001EEC  6E92               	movwf	3986,c	;volatile
  1902                           
  1903                           ;Funciones_Db.c: 75: PORTA = 0;
  1904  001EEE  0E00               	movlw	0
  1905  001EF0  6E80               	movwf	3968,c	;volatile
  1906                           
  1907                           ;Funciones_Db.c: 76: TRISCbits.TRISC7 = 1;
  1908  001EF2  8E94               	bsf	3988,7,c	;volatile
  1909                           
  1910                           ;Funciones_Db.c: 77: TRISCbits.TRISC6 = 0;
  1911  001EF4  9C94               	bcf	3988,6,c	;volatile
  1912                           
  1913                           ;Funciones_Db.c: 78: for (i = 1; i <= 50; i++)
  1914  001EF6  0E00               	movlw	0
  1915  001EF8  0100               	movlb	0	; () banked
  1916  001EFA  6F82               	movwf	(Inicializa_Driveby@i+1)& (0+255),b
  1917  001EFC  0E01               	movlw	1
  1918  001EFE  0100               	movlb	0	; () banked
  1919  001F00  6F81               	movwf	Inicializa_Driveby@i& (0+255),b
  1920  001F02                     
  1921                           ; BSR set to: 0
  1922  001F02  0100               	movlb	0	; () banked
  1923  001F04  5182               	movf	(Inicializa_Driveby@i+1)& (0+255),w,b
  1924  001F06  0A80               	xorlw	128
  1925  001F08  0F80               	addlw	-128
  1926  001F0A  0E33               	movlw	51
  1927  001F0C  B4D8               	btfsc	status,2,c
  1928  001F0E  5D81               	subwf	Inicializa_Driveby@i& (0+255),w,b
  1929  001F10  B0D8               	btfsc	status,0,c
  1930  001F12  D00D               	goto	l4518
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;Funciones_Db.c: 79: _delay((unsigned long)((20)*(4000000/4000.0)));
  1934                           
  1935                           ; BSR set to: 0
  1936                           
  1937                           ; BSR set to: 0
  1938  001F14  0E1A               	movlw	26
  1939  001F16  0100               	movlb	0	; () banked
  1940  001F18  6F80               	movwf	??_Inicializa_Driveby& (0+255),b
  1941  001F1A  0EF8               	movlw	248
  1942  001F1C                     u5307:
  1943  001F1C  2EE8               	decfsz	wreg,f,c
  1944  001F1E  D7FE               	goto	u5307
  1945  001F20  2F80               	decfsz	??_Inicializa_Driveby& (0+255),f,b
  1946  001F22  D7FC               	goto	u5307
  1947  001F24  D000               	nop2	
  1948  001F26  0100               	movlb	0	; () banked
  1949  001F28  4B81               	infsnz	Inicializa_Driveby@i& (0+255),f,b
  1950  001F2A  2B82               	incf	(Inicializa_Driveby@i+1)& (0+255),f,b
  1951  001F2C  D7EA               	goto	L1
  1952  001F2E                     l4518:
  1953                           
  1954                           ; BSR set to: 0
  1955                           ;Funciones_Db.c: 80: PORTE = 0;
  1956  001F2E  0E00               	movlw	0
  1957  001F30  6E84               	movwf	3972,c	;volatile
  1958                           
  1959                           ;Funciones_Db.c: 81: PORTB = 0;
  1960  001F32  0E00               	movlw	0
  1961  001F34  6E81               	movwf	3969,c	;volatile
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;Funciones_Db.c: 82: TRISBbits.TRISB0 = 1;
  1965  001F36  8093               	bsf	3987,0,c	;volatile
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;Funciones_Db.c: 83: TRISBbits.TRISB1 = 1;
  1969  001F38  8293               	bsf	3987,1,c	;volatile
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;Funciones_Db.c: 84: TRISBbits.TRISB2 = 1;
  1973  001F3A  8493               	bsf	3987,2,c	;volatile
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;Funciones_Db.c: 85: TRISBbits.TRISB3 = 1;
  1977  001F3C  8693               	bsf	3987,3,c	;volatile
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;Funciones_Db.c: 86: TRISBbits.TRISB4 = 1;
  1981  001F3E  8893               	bsf	3987,4,c	;volatile
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;Funciones_Db.c: 87: external_interrupt_init();
  1985  001F40  EC41  F01A         	call	_external_interrupt_init	;wreg free
  1986                           
  1987                           ;Funciones_Db.c: 88: Lcd_Clear();
  1988  001F44  EC8C  F01A         	call	_Lcd_Clear	;wreg free
  1989                           
  1990                           ;Funciones_Db.c: 89: Lcd_Set_Cursor(2, 1);
  1991  001F48  0E01               	movlw	1
  1992  001F4A  0100               	movlb	0	; () banked
  1993  001F4C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  1994  001F4E  0E02               	movlw	2
  1995  001F50  ECC3  F016         	call	_Lcd_Set_Cursor
  1996                           
  1997                           ;Funciones_Db.c: 90: Lcd_Write_String("INICIO");
  1998  001F54  0E7F               	movlw	high STR_10
  1999  001F56  0100               	movlb	0	; () banked
  2000  001F58  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2001  001F5A  0EF6               	movlw	low STR_10
  2002  001F5C  0100               	movlb	0	; () banked
  2003  001F5E  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  2004  001F60  EC7C  F014         	call	_Lcd_Write_String	;wreg free
  2005                           
  2006                           ;Funciones_Db.c: 92: BT_Init();
  2007  001F64  ECF3  F011         	call	_BT_Init	;wreg free
  2008                           
  2009                           ;Funciones_Db.c: 93: Lcd_Clear();
  2010  001F68  EC8C  F01A         	call	_Lcd_Clear	;wreg free
  2011                           
  2012                           ;Funciones_Db.c: 94: Lcd_Set_Cursor(1, 1);
  2013  001F6C  0E01               	movlw	1
  2014  001F6E  0100               	movlb	0	; () banked
  2015  001F70  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2016  001F72  0E01               	movlw	1
  2017  001F74  ECC3  F016         	call	_Lcd_Set_Cursor
  2018                           
  2019                           ;Funciones_Db.c: 95: Lcd_Write_String("BT INICIALIZADO");
  2020  001F78  0E7F               	movlw	high STR_11
  2021  001F7A  0100               	movlb	0	; () banked
  2022  001F7C  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2023  001F7E  0E58               	movlw	low STR_11
  2024  001F80  0100               	movlb	0	; () banked
  2025  001F82  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  2026  001F84  EC7C  F014         	call	_Lcd_Write_String	;wreg free
  2027                           
  2028                           ;Funciones_Db.c: 97: Pause_seg(7);
  2029  001F88  0E07               	movlw	7
  2030  001F8A  EC9A  F017         	call	_Pause_seg
  2031                           
  2032                           ;Funciones_Db.c: 98: cad = 0;
  2033  001F8E  0E00               	movlw	0
  2034  001F90  6E55               	movwf	_cad,c
  2035                           
  2036                           ;Funciones_Db.c: 99: clrBufferUSART();
  2037  001F92  ECA4  F018         	call	_clrBufferUSART	;wreg free
  2038                           
  2039                           ;Funciones_Db.c: 102: PWM_init1(0xff);
  2040  001F96  0EFF               	movlw	255
  2041  001F98  ECEA  F019         	call	_PWM_init1
  2042                           
  2043                           ;Funciones_Db.c: 103: PWM_init2(0xff);
  2044  001F9C  0EFF               	movlw	255
  2045  001F9E  ECD7  F019         	call	_PWM_init2
  2046                           
  2047                           ;Funciones_Db.c: 104: return;
  2048  001FA2  0012               	return	
  2049  001FA4                     __end_of_Inicializa_Driveby:
  2050                           	opt stack 0
  2051                           tblptru	equ	0xFF8
  2052                           tblptrh	equ	0xFF7
  2053                           tblptrl	equ	0xFF6
  2054                           tablat	equ	0xFF5
  2055                           intcon	equ	0xFF2
  2056                           postinc0	equ	0xFEE
  2057                           wreg	equ	0xFE8
  2058                           postdec1	equ	0xFE5
  2059                           fsr1l	equ	0xFE1
  2060                           status	equ	0xFD8
  2061                           
  2062 ;; *************** function _external_interrupt_init *****************
  2063 ;; Defined at:
  2064 ;;		line 107 in file "Funciones_Db.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;		None               void
  2071 ;; Registers used:
  2072 ;;		None
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2078 ;;      Params:         0       0       0       0       0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2081 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:    4
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_Inicializa_Driveby
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text3
  2093  003482                     __ptext3:
  2094                           	opt stack 0
  2095  003482                     _external_interrupt_init:
  2096                           	opt stack 25
  2097                           
  2098                           ;Funciones_Db.c: 110: TRISBbits.TRISB0 = 1;
  2099                           
  2100                           ;incstack = 0
  2101  003482  8093               	bsf	3987,0,c	;volatile
  2102                           
  2103                           ;Funciones_Db.c: 111: INTCONbits.INT0E = 1;
  2104  003484  88F2               	bsf	intcon,4,c	;volatile
  2105                           
  2106                           ;Funciones_Db.c: 112: INTCON2bits.INTEDG0 = 0;
  2107  003486  9CF1               	bcf	intcon2,6,c	;volatile
  2108                           
  2109                           ;Funciones_Db.c: 113: INTCONbits.INT0F = 0;
  2110  003488  92F2               	bcf	intcon,1,c	;volatile
  2111                           
  2112                           ;Funciones_Db.c: 115: TRISBbits.TRISB1 = 1;
  2113  00348A  8293               	bsf	3987,1,c	;volatile
  2114                           
  2115                           ;Funciones_Db.c: 116: INTCON3bits.INT1E = 1;
  2116  00348C  86F0               	bsf	intcon3,3,c	;volatile
  2117                           
  2118                           ;Funciones_Db.c: 117: INTCON2bits.INTEDG1 = 0;
  2119  00348E  9AF1               	bcf	intcon2,5,c	;volatile
  2120                           
  2121                           ;Funciones_Db.c: 118: INTCON3bits.INT1F = 0;
  2122  003490  90F0               	bcf	intcon3,0,c	;volatile
  2123                           
  2124                           ;Funciones_Db.c: 120: TRISBbits.TRISB2 = 1;
  2125  003492  8493               	bsf	3987,2,c	;volatile
  2126                           
  2127                           ;Funciones_Db.c: 121: INTCON3bits.INT2E = 1;
  2128  003494  88F0               	bsf	intcon3,4,c	;volatile
  2129                           
  2130                           ;Funciones_Db.c: 122: INTCON2bits.INTEDG2 = 0;
  2131  003496  98F1               	bcf	intcon2,4,c	;volatile
  2132                           
  2133                           ;Funciones_Db.c: 123: INTCON3bits.INT2F = 0;
  2134  003498  92F0               	bcf	intcon3,1,c	;volatile
  2135                           
  2136                           ;Funciones_Db.c: 124: return;
  2137  00349A  0012               	return	
  2138  00349C                     __end_of_external_interrupt_init:
  2139                           	opt stack 0
  2140                           tblptru	equ	0xFF8
  2141                           tblptrh	equ	0xFF7
  2142                           tblptrl	equ	0xFF6
  2143                           tablat	equ	0xFF5
  2144                           intcon	equ	0xFF2
  2145                           intcon2	equ	0xFF1
  2146                           intcon3	equ	0xFF0
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           postdec1	equ	0xFE5
  2150                           fsr1l	equ	0xFE1
  2151                           status	equ	0xFD8
  2152                           
  2153 ;; *************** function _PWM_init2 *****************
  2154 ;; Defined at:
  2155 ;;		line 42 in file "pwm.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  period          1    wreg     unsigned char 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  period          1    3[BANK0 ] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;		None               void
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2169 ;;      Params:         0       0       0       0       0       0       0       0       0
  2170 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2172 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2173 ;;Total ram usage:        1 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    5
  2176 ;; This function calls:
  2177 ;;		_OpenPWM2
  2178 ;; This function is called by:
  2179 ;;		_Inicializa_Driveby
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text4
  2184  0033AE                     __ptext4:
  2185                           	opt stack 0
  2186  0033AE                     _PWM_init2:
  2187                           	opt stack 24
  2188                           
  2189                           ;incstack = 0
  2190                           ;PWM_init2@period stored from wreg
  2191  0033AE  0100               	movlb	0	; () banked
  2192  0033B0  6F63               	movwf	PWM_init2@period& (0+255),b
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;pwm.c: 43: Timer2Config = 0b11111110;
  2196  0033B2  0EFE               	movlw	254
  2197  0033B4  0100               	movlb	0	; () banked
  2198  0033B6  6FEE               	movwf	_Timer2Config& (0+255),b
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;pwm.c: 44: T2CON = (0xfb & Timer2Config);
  2202  0033B8  0100               	movlb	0	; () banked
  2203  0033BA  51EE               	movf	_Timer2Config& (0+255),w,b
  2204  0033BC  0BFB               	andlw	251
  2205  0033BE  6ECA               	movwf	4042,c	;volatile
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;pwm.c: 47: TMR2 = 0;
  2209  0033C0  0E00               	movlw	0
  2210  0033C2  6ECC               	movwf	4044,c	;volatile
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;pwm.c: 48: PIR1bits.TMR2IF = 0;
  2214  0033C4  929E               	bcf	3998,1,c	;volatile
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;pwm.c: 49: PIE1bits.TMR2IE = 0;
  2218  0033C6  929D               	bcf	3997,1,c	;volatile
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;pwm.c: 50: T2CONbits.TMR2ON = 1;
  2222  0033C8  84CA               	bsf	4042,2,c	;volatile
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;pwm.c: 51: OpenPWM2(period);
  2226  0033CA  0100               	movlb	0	; () banked
  2227  0033CC  5163               	movf	PWM_init2@period& (0+255),w,b
  2228  0033CE  EC82  F018         	call	_OpenPWM2
  2229                           
  2230                           ;pwm.c: 53: return;
  2231  0033D2  0012               	return	
  2232  0033D4                     __end_of_PWM_init2:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           intcon	equ	0xFF2
  2239                           intcon2	equ	0xFF1
  2240                           intcon3	equ	0xFF0
  2241                           postinc0	equ	0xFEE
  2242                           wreg	equ	0xFE8
  2243                           postdec1	equ	0xFE5
  2244                           fsr1l	equ	0xFE1
  2245                           status	equ	0xFD8
  2246                           
  2247 ;; *************** function _OpenPWM2 *****************
  2248 ;; Defined at:
  2249 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2open.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  period          1    wreg     unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  period          1    1[BANK0 ] unsigned char 
  2254 ;;  ccp2mx          1    2[BANK0 ] unsigned char 
  2255 ;;  pmmode          1    0        unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;		None               void
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2265 ;;      Params:         0       0       0       0       0       0       0       0       0
  2266 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2267 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2268 ;;      Totals:         0       3       0       0       0       0       0       0       0
  2269 ;;Total ram usage:        3 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    4
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_PWM_init2
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text5
  2280  003104                     __ptext5:
  2281                           	opt stack 0
  2282  003104                     _OpenPWM2:
  2283                           	opt stack 24
  2284                           
  2285                           ;incstack = 0
  2286                           ;OpenPWM2@period stored from wreg
  2287  003104  0100               	movlb	0	; () banked
  2288  003106  6F61               	movwf	OpenPWM2@period& (0+255),b
  2289                           
  2290                           ; BSR set to: 0
  2291  003108  0E0C               	movlw	12
  2292  00310A  6EBA               	movwf	4026,c	;volatile
  2293                           
  2294                           ; BSR set to: 0
  2295  00310C  0E05               	movlw	5
  2296  00310E  6EF6               	movwf	tblptrl,c
  2297  003110                     	if	1	;There is more than 1 active tblptr byte
  2298  003110  0E00               	movlw	0
  2299  003112  6EF7               	movwf	tblptrh,c
  2300  003114                     	endif
  2301  003114                     	if	1	;There are 3 active tblptr bytes
  2302  003114  0E30               	movlw	48
  2303  003116  6EF8               	movwf	tblptru,c
  2304  003118                     	endif
  2305  003118  0008               	tblrd		*
  2306  00311A  CFF5 F060          	movff	tablat,??_OpenPWM2
  2307  00311E  0100               	movlb	0	; () banked
  2308  003120  A160               	btfss	??_OpenPWM2& (0+255),0,b
  2309  003122  D003               	goto	l4006
  2310                           
  2311                           ; BSR set to: 0
  2312  003124  0100               	movlb	0	; () banked
  2313  003126  6962               	setf	OpenPWM2@ccp2mx& (0+255),b
  2314  003128  D003               	goto	l591
  2315  00312A                     l4006:
  2316                           
  2317                           ; BSR set to: 0
  2318  00312A  0E00               	movlw	0
  2319  00312C  0100               	movlb	0	; () banked
  2320  00312E  6F62               	movwf	OpenPWM2@ccp2mx& (0+255),b
  2321  003130                     l591:
  2322                           
  2323                           ; BSR set to: 0
  2324  003130  0100               	movlb	0	; () banked
  2325  003132  5162               	movf	OpenPWM2@ccp2mx& (0+255),w,b
  2326  003134  B4D8               	btfsc	status,2,c
  2327  003136  D002               	goto	l592
  2328                           
  2329                           ; BSR set to: 0
  2330  003138  9294               	bcf	3988,1,c	;volatile
  2331  00313A  D001               	goto	l593
  2332  00313C                     l592:
  2333                           
  2334                           ; BSR set to: 0
  2335  00313C  9693               	bcf	3987,3,c	;volatile
  2336  00313E                     l593:
  2337                           
  2338                           ; BSR set to: 0
  2339  00313E  94CA               	bcf	4042,2,c	;volatile
  2340  003140  C061  FFCB         	movff	OpenPWM2@period,4043	;volatile
  2341  003144  84CA               	bsf	4042,2,c	;volatile
  2342                           
  2343                           ; BSR set to: 0
  2344  003146  0012               	return	
  2345  003148                     __end_of_OpenPWM2:
  2346                           	opt stack 0
  2347                           tblptru	equ	0xFF8
  2348                           tblptrh	equ	0xFF7
  2349                           tblptrl	equ	0xFF6
  2350                           tablat	equ	0xFF5
  2351                           intcon	equ	0xFF2
  2352                           intcon2	equ	0xFF1
  2353                           intcon3	equ	0xFF0
  2354                           postinc0	equ	0xFEE
  2355                           wreg	equ	0xFE8
  2356                           postdec1	equ	0xFE5
  2357                           fsr1l	equ	0xFE1
  2358                           status	equ	0xFD8
  2359                           
  2360 ;; *************** function _PWM_init1 *****************
  2361 ;; Defined at:
  2362 ;;		line 20 in file "pwm.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  period          1    wreg     unsigned char 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  period          1    1[BANK0 ] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;		None               void
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2376 ;;      Params:         0       0       0       0       0       0       0       0       0
  2377 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2378 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2379 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2380 ;;Total ram usage:        1 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; Hardware stack levels required when called:    5
  2383 ;; This function calls:
  2384 ;;		_OpenPWM1
  2385 ;; This function is called by:
  2386 ;;		_Inicializa_Driveby
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text6
  2391  0033D4                     __ptext6:
  2392                           	opt stack 0
  2393  0033D4                     _PWM_init1:
  2394                           	opt stack 24
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;incstack = 0
  2398                           ;PWM_init1@period stored from wreg
  2399  0033D4  0100               	movlb	0	; () banked
  2400  0033D6  6F61               	movwf	PWM_init1@period& (0+255),b
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;pwm.c: 21: Timer2Config = 0b11111110;
  2404  0033D8  0EFE               	movlw	254
  2405  0033DA  0100               	movlb	0	; () banked
  2406  0033DC  6FEE               	movwf	_Timer2Config& (0+255),b
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;pwm.c: 22: T2CON = (0xfb & Timer2Config);
  2410  0033DE  0100               	movlb	0	; () banked
  2411  0033E0  51EE               	movf	_Timer2Config& (0+255),w,b
  2412  0033E2  0BFB               	andlw	251
  2413  0033E4  6ECA               	movwf	4042,c	;volatile
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;pwm.c: 25: TMR2 = 0;
  2417  0033E6  0E00               	movlw	0
  2418  0033E8  6ECC               	movwf	4044,c	;volatile
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;pwm.c: 26: PIR1bits.TMR2IF = 0;
  2422  0033EA  929E               	bcf	3998,1,c	;volatile
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;pwm.c: 27: PIE1bits.TMR2IE = 0;
  2426  0033EC  929D               	bcf	3997,1,c	;volatile
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;pwm.c: 28: T2CONbits.TMR2ON = 1;
  2430  0033EE  84CA               	bsf	4042,2,c	;volatile
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;pwm.c: 29: OpenPWM1(period);
  2434  0033F0  0100               	movlb	0	; () banked
  2435  0033F2  5161               	movf	PWM_init1@period& (0+255),w,b
  2436  0033F4  EC66  F01A         	call	_OpenPWM1
  2437                           
  2438                           ;pwm.c: 31: return;
  2439  0033F8  0012               	return	
  2440  0033FA                     __end_of_PWM_init1:
  2441                           	opt stack 0
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           intcon	equ	0xFF2
  2447                           intcon2	equ	0xFF1
  2448                           intcon3	equ	0xFF0
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           postdec1	equ	0xFE5
  2452                           fsr1l	equ	0xFE1
  2453                           status	equ	0xFD8
  2454                           
  2455 ;; *************** function _OpenPWM1 *****************
  2456 ;; Defined at:
  2457 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  period          1    wreg     unsigned char 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  period          1    0[BANK0 ] unsigned char 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;		None               void
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0
  2472 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2474 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2475 ;;Total ram usage:        1 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    4
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_PWM_init1
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text7
  2486  0034CC                     __ptext7:
  2487                           	opt stack 0
  2488  0034CC                     _OpenPWM1:
  2489                           	opt stack 24
  2490                           
  2491                           ;incstack = 0
  2492                           ;OpenPWM1@period stored from wreg
  2493  0034CC  0100               	movlb	0	; () banked
  2494  0034CE  6F60               	movwf	OpenPWM1@period& (0+255),b
  2495                           
  2496                           ; BSR set to: 0
  2497  0034D0  0E0C               	movlw	12
  2498  0034D2  12BD               	iorwf	4029,f,c	;volatile
  2499                           
  2500                           ; BSR set to: 0
  2501  0034D4  9494               	bcf	3988,2,c	;volatile
  2502                           
  2503                           ; BSR set to: 0
  2504  0034D6  94CA               	bcf	4042,2,c	;volatile
  2505                           
  2506                           ; BSR set to: 0
  2507  0034D8  C060  FFCB         	movff	OpenPWM1@period,4043	;volatile
  2508                           
  2509                           ; BSR set to: 0
  2510  0034DC  84CA               	bsf	4042,2,c	;volatile
  2511                           
  2512                           ; BSR set to: 0
  2513  0034DE  0012               	return	
  2514  0034E0                     __end_of_OpenPWM1:
  2515                           	opt stack 0
  2516                           tblptru	equ	0xFF8
  2517                           tblptrh	equ	0xFF7
  2518                           tblptrl	equ	0xFF6
  2519                           tablat	equ	0xFF5
  2520                           intcon	equ	0xFF2
  2521                           intcon2	equ	0xFF1
  2522                           intcon3	equ	0xFF0
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           postdec1	equ	0xFE5
  2526                           fsr1l	equ	0xFE1
  2527                           status	equ	0xFD8
  2528                           
  2529 ;; *************** function _BT_Init *****************
  2530 ;; Defined at:
  2531 ;;		line 16 in file "Bluetooth.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  nameBT         18   14[BANK0 ] unsigned char [18]
  2536 ;; Return value:  Size  Location     Type
  2537 ;;		None               void
  2538 ;; Registers used:
  2539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2545 ;;      Params:         0       0       0       0       0       0       0       0       0
  2546 ;;      Locals:         0      18       0       0       0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2548 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2549 ;;Total ram usage:       18 bytes
  2550 ;; Hardware stack levels used:    1
  2551 ;; Hardware stack levels required when called:    8
  2552 ;; This function calls:
  2553 ;;		_Pause_seg
  2554 ;;		_SendBlueToothCommand
  2555 ;;		_UART1_Init
  2556 ;; This function is called by:
  2557 ;;		_Inicializa_Driveby
  2558 ;;		_EstadoBluetooth
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562                           	psect	text8
  2563  0023E6                     __ptext8:
  2564                           	opt stack 0
  2565  0023E6                     _BT_Init:
  2566                           	opt stack 21
  2567                           
  2568                           ;Bluetooth.c: 18: UART1_Init(51);
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;incstack = 0
  2572  0023E6  0E33               	movlw	51
  2573  0023E8  EC5B  F01A         	call	_UART1_Init
  2574                           
  2575                           ;Bluetooth.c: 21: Pause_seg(1);
  2576  0023EC  0E01               	movlw	1
  2577  0023EE  EC9A  F017         	call	_Pause_seg
  2578                           
  2579                           ;Bluetooth.c: 22: char nameBT[18] = {
  2580                           ;Bluetooth.c: 23: "AT+NAME=robot\r\n\0"
  2581                           ;Bluetooth.c: 24: };
  2582  0023F2  EE21  F06E         	lfsr	2,BT_Init@F5671
  2583  0023F6  EE10  F06E         	lfsr	1,BT_Init@nameBT
  2584  0023FA  0E12               	movlw	18
  2585  0023FC                     u4251:
  2586  0023FC  CFDE FFE6          	movff	postinc2,postinc1
  2587  002400  2EE8               	decfsz	wreg,f,c
  2588  002402  D7FC               	goto	u4251
  2589                           
  2590                           ;Bluetooth.c: 27: SendBlueToothCommand("AT+ROLE=0\r\n", 11);
  2591  002404  0E7F               	movlw	high STR_1
  2592  002406  0100               	movlb	0	; () banked
  2593  002408  6F6B               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  2594  00240A  0EBC               	movlw	low STR_1
  2595  00240C  0100               	movlb	0	; () banked
  2596  00240E  6F6A               	movwf	SendBlueToothCommand@command& (0+255),b
  2597  002410  0E00               	movlw	0
  2598  002412  0100               	movlb	0	; () banked
  2599  002414  6F6D               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  2600  002416  0E0B               	movlw	11
  2601  002418  0100               	movlb	0	; () banked
  2602  00241A  6F6C               	movwf	SendBlueToothCommand@total& (0+255),b
  2603  00241C  EC4E  F01A         	call	_SendBlueToothCommand	;wreg free
  2604                           
  2605                           ;Bluetooth.c: 29: Pause_seg(1);
  2606  002420  0E01               	movlw	1
  2607  002422  EC9A  F017         	call	_Pause_seg
  2608                           
  2609                           ;Bluetooth.c: 32: SendBlueToothCommand((const char * ) nameBT, sizeof(nameBT));
  2610  002426  0100               	movlb	0	; () banked
  2611  002428  0E00               	movlw	high BT_Init@nameBT
  2612  00242A  0100               	movlb	0	; () banked
  2613  00242C  6F6B               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  2614  00242E  0100               	movlb	0	; () banked
  2615  002430  0E6E               	movlw	low BT_Init@nameBT
  2616  002432  0100               	movlb	0	; () banked
  2617  002434  6F6A               	movwf	SendBlueToothCommand@command& (0+255),b
  2618  002436  0E00               	movlw	0
  2619  002438  0100               	movlb	0	; () banked
  2620  00243A  6F6D               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  2621  00243C  0E12               	movlw	18
  2622  00243E  0100               	movlb	0	; () banked
  2623  002440  6F6C               	movwf	SendBlueToothCommand@total& (0+255),b
  2624  002442  EC4E  F01A         	call	_SendBlueToothCommand	;wreg free
  2625                           
  2626                           ;Bluetooth.c: 33: Pause_seg(2);
  2627  002446  0E02               	movlw	2
  2628  002448  EC9A  F017         	call	_Pause_seg
  2629                           
  2630                           ;Bluetooth.c: 35: SendBlueToothCommand("AT+PSWD=0000\r\n", 14);
  2631  00244C  0E7F               	movlw	high STR_2
  2632  00244E  0100               	movlb	0	; () banked
  2633  002450  6F6B               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  2634  002452  0E68               	movlw	low STR_2
  2635  002454  0100               	movlb	0	; () banked
  2636  002456  6F6A               	movwf	SendBlueToothCommand@command& (0+255),b
  2637  002458  0E00               	movlw	0
  2638  00245A  0100               	movlb	0	; () banked
  2639  00245C  6F6D               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  2640  00245E  0E0E               	movlw	14
  2641  002460  0100               	movlb	0	; () banked
  2642  002462  6F6C               	movwf	SendBlueToothCommand@total& (0+255),b
  2643  002464  EC4E  F01A         	call	_SendBlueToothCommand	;wreg free
  2644                           
  2645                           ;Bluetooth.c: 36: Pause_seg(2);
  2646  002468  0E02               	movlw	2
  2647  00246A  EC9A  F017         	call	_Pause_seg
  2648                           
  2649                           ;Bluetooth.c: 40: SendBlueToothCommand("AT+INQ\r\n", 8);
  2650  00246E  0E7F               	movlw	high STR_3
  2651  002470  0100               	movlb	0	; () banked
  2652  002472  6F6B               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  2653  002474  0EDE               	movlw	low STR_3
  2654  002476  0100               	movlb	0	; () banked
  2655  002478  6F6A               	movwf	SendBlueToothCommand@command& (0+255),b
  2656  00247A  0E00               	movlw	0
  2657  00247C  0100               	movlb	0	; () banked
  2658  00247E  6F6D               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  2659  002480  0E08               	movlw	8
  2660  002482  0100               	movlb	0	; () banked
  2661  002484  6F6C               	movwf	SendBlueToothCommand@total& (0+255),b
  2662  002486  EC4E  F01A         	call	_SendBlueToothCommand	;wreg free
  2663                           
  2664                           ;Bluetooth.c: 41: Pause_seg(2);
  2665  00248A  0E02               	movlw	2
  2666  00248C  EC9A  F017         	call	_Pause_seg
  2667                           
  2668                           ;Bluetooth.c: 43: SendBlueToothCommand("AT+INQ\r\n", 8);
  2669  002490  0E7F               	movlw	high STR_3
  2670  002492  0100               	movlb	0	; () banked
  2671  002494  6F6B               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  2672  002496  0EDE               	movlw	low STR_3
  2673  002498  0100               	movlb	0	; () banked
  2674  00249A  6F6A               	movwf	SendBlueToothCommand@command& (0+255),b
  2675  00249C  0E00               	movlw	0
  2676  00249E  0100               	movlb	0	; () banked
  2677  0024A0  6F6D               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  2678  0024A2  0E08               	movlw	8
  2679  0024A4  0100               	movlb	0	; () banked
  2680  0024A6  6F6C               	movwf	SendBlueToothCommand@total& (0+255),b
  2681  0024A8  EC4E  F01A         	call	_SendBlueToothCommand	;wreg free
  2682                           
  2683                           ;Bluetooth.c: 44: Pause_seg(2);
  2684  0024AC  0E02               	movlw	2
  2685  0024AE  EC9A  F017         	call	_Pause_seg
  2686                           
  2687                           ;Bluetooth.c: 45: return;
  2688  0024B2  0012               	return	
  2689  0024B4                     __end_of_BT_Init:
  2690                           	opt stack 0
  2691                           tblptru	equ	0xFF8
  2692                           tblptrh	equ	0xFF7
  2693                           tblptrl	equ	0xFF6
  2694                           tablat	equ	0xFF5
  2695                           intcon	equ	0xFF2
  2696                           intcon2	equ	0xFF1
  2697                           intcon3	equ	0xFF0
  2698                           postinc0	equ	0xFEE
  2699                           wreg	equ	0xFE8
  2700                           postinc1	equ	0xFE6
  2701                           postdec1	equ	0xFE5
  2702                           fsr1l	equ	0xFE1
  2703                           postinc2	equ	0xFDE
  2704                           status	equ	0xFD8
  2705                           
  2706 ;; *************** function _SendBlueToothCommand *****************
  2707 ;; Defined at:
  2708 ;;		line 48 in file "Bluetooth.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  command         2   10[BANK0 ] PTR const unsigned char 
  2711 ;;		 -> STR_4(9), STR_3(9), STR_2(15), STR_1(12), 
  2712 ;;		 -> BT_Init@nameBT(18), 
  2713 ;;  total           2   12[BANK0 ] unsigned int 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;		None               void
  2718 ;; Registers used:
  2719 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2725 ;;      Params:         0       4       0       0       0       0       0       0       0
  2726 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2728 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2729 ;;Total ram usage:        4 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    7
  2732 ;; This function calls:
  2733 ;;		_putSTRINGU1
  2734 ;; This function is called by:
  2735 ;;		_BT_Init
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text9
  2740  00349C                     __ptext9:
  2741                           	opt stack 0
  2742  00349C                     _SendBlueToothCommand:
  2743                           	opt stack 21
  2744                           
  2745                           ;Bluetooth.c: 49: putSTRINGU1(command, total);
  2746                           
  2747                           ;incstack = 0
  2748  00349C  0100               	movlb	0	; () banked
  2749  00349E  C06B  F063         	movff	SendBlueToothCommand@command+1,putSTRINGU1@dato+1
  2750  0034A2  0100               	movlb	0	; () banked
  2751  0034A4  C06A  F062         	movff	SendBlueToothCommand@command,putSTRINGU1@dato
  2752  0034A8  C06C  F064         	movff	SendBlueToothCommand@total,putSTRINGU1@total
  2753  0034AC  C06D  F065         	movff	SendBlueToothCommand@total+1,putSTRINGU1@total+1
  2754  0034B0  EC1F  F013         	call	_putSTRINGU1	;wreg free
  2755                           
  2756                           ;Bluetooth.c: 50: return;
  2757  0034B4  0012               	return	
  2758  0034B6                     __end_of_SendBlueToothCommand:
  2759                           	opt stack 0
  2760                           tblptru	equ	0xFF8
  2761                           tblptrh	equ	0xFF7
  2762                           tblptrl	equ	0xFF6
  2763                           tablat	equ	0xFF5
  2764                           intcon	equ	0xFF2
  2765                           intcon2	equ	0xFF1
  2766                           intcon3	equ	0xFF0
  2767                           postinc0	equ	0xFEE
  2768                           wreg	equ	0xFE8
  2769                           postinc1	equ	0xFE6
  2770                           postdec1	equ	0xFE5
  2771                           fsr1l	equ	0xFE1
  2772                           postinc2	equ	0xFDE
  2773                           status	equ	0xFD8
  2774                           
  2775 ;; *************** function _putSTRINGU1 *****************
  2776 ;; Defined at:
  2777 ;;		line 18 in file "UART1.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  dato            2    2[BANK0 ] PTR const unsigned char 
  2780 ;;		 -> STR_4(9), STR_3(9), STR_2(15), STR_1(12), 
  2781 ;;		 -> BT_Init@nameBT(18), 
  2782 ;;  total           2    4[BANK0 ] unsigned int 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  cont            1    9[BANK0 ] unsigned char 
  2785 ;;  last            1    8[BANK0 ] unsigned char 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;		None               void
  2788 ;; Registers used:
  2789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2795 ;;      Params:         0       4       0       0       0       0       0       0       0
  2796 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2797 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2798 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2799 ;;Total ram usage:        8 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    6
  2802 ;; This function calls:
  2803 ;;		_putcTxU1
  2804 ;; This function is called by:
  2805 ;;		_SendBlueToothCommand
  2806 ;; This function uses a non-reentrant model
  2807 ;;
  2808                           
  2809                           	psect	text10
  2810  00263E                     __ptext10:
  2811                           	opt stack 0
  2812  00263E                     _putSTRINGU1:
  2813                           	opt stack 21
  2814                           
  2815                           ;UART1.c: 19: unsigned char cont,last;
  2816                           ;UART1.c: 21: for(cont=0,last=0;cont<total;cont++){
  2817                           
  2818                           ;incstack = 0
  2819  00263E  0E00               	movlw	0
  2820  002640  0100               	movlb	0	; () banked
  2821  002642  6F69               	movwf	putSTRINGU1@cont& (0+255),b
  2822  002644  0E00               	movlw	0
  2823  002646  0100               	movlb	0	; () banked
  2824  002648  6F68               	movwf	putSTRINGU1@last& (0+255),b
  2825  00264A  D025               	goto	l3362
  2826  00264C                     l3356:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;UART1.c: 22: if(dato[cont]!='\0') last=cont;
  2830  00264C  0100               	movlb	0	; () banked
  2831  00264E  5169               	movf	putSTRINGU1@cont& (0+255),w,b
  2832  002650  0D01               	mullw	1
  2833  002652  0100               	movlb	0	; () banked
  2834  002654  C062  F066         	movff	putSTRINGU1@dato,??_putSTRINGU1
  2835  002658  0100               	movlb	0	; () banked
  2836  00265A  C063  F067         	movff	putSTRINGU1@dato+1,??_putSTRINGU1+1
  2837  00265E  50F3               	movf	prodl,w,c
  2838  002660  0100               	movlb	0	; () banked
  2839  002662  2766               	addwf	??_putSTRINGU1& (0+255),f,b
  2840  002664  50F4               	movf	prodh,w,c
  2841  002666  0100               	movlb	0	; () banked
  2842  002668  2367               	addwfc	(??_putSTRINGU1+1)& (0+255),f,b
  2843  00266A  C066  FFF6         	movff	??_putSTRINGU1,tblptrl
  2844  00266E  C067  FFF7         	movff	??_putSTRINGU1+1,tblptrh
  2845  002672  6AF8               	clrf	tblptru,c
  2846  002674  0E07               	movlw	(high __ramtop+-1)
  2847  002676  64F7               	cpfsgt	tblptrh,c
  2848  002678  D003               	bra	u3157
  2849  00267A  0008               	tblrd		*
  2850  00267C  50F5               	movf	tablat,w,c
  2851  00267E  D005               	bra	u3150
  2852  002680                     u3157:
  2853  002680  CFF6 FFE9          	movff	tblptrl,fsr0l
  2854  002684  CFF7 FFEA          	movff	tblptrh,fsr0h
  2855  002688  50EF               	movf	indf0,w,c
  2856  00268A                     u3150:
  2857  00268A  0900               	iorlw	0
  2858  00268C  A4D8               	btfss	status,2,c
  2859  00268E  C069  F068         	movff	putSTRINGU1@cont,putSTRINGU1@last
  2860  002692  0100               	movlb	0	; () banked
  2861  002694  2B69               	incf	putSTRINGU1@cont& (0+255),f,b
  2862  002696                     l3362:
  2863                           
  2864                           ; BSR set to: 0
  2865  002696  0100               	movlb	0	; () banked
  2866  002698  5169               	movf	putSTRINGU1@cont& (0+255),w,b
  2867  00269A  0100               	movlb	0	; () banked
  2868  00269C  6F66               	movwf	??_putSTRINGU1& (0+255),b
  2869  00269E  6B67               	clrf	(??_putSTRINGU1+1)& (0+255),b
  2870  0026A0  0100               	movlb	0	; () banked
  2871  0026A2  5164               	movf	putSTRINGU1@total& (0+255),w,b
  2872  0026A4  0100               	movlb	0	; () banked
  2873  0026A6  5D66               	subwf	??_putSTRINGU1& (0+255),w,b
  2874  0026A8  0100               	movlb	0	; () banked
  2875  0026AA  5165               	movf	(putSTRINGU1@total+1)& (0+255),w,b
  2876  0026AC  0100               	movlb	0	; () banked
  2877  0026AE  5967               	subwfb	(??_putSTRINGU1+1)& (0+255),w,b
  2878  0026B0  A0D8               	btfss	status,0,c
  2879  0026B2  D7CC               	goto	l3356
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;UART1.c: 23: }
  2883                           ;UART1.c: 25: for (cont=0;cont<=last;cont++){
  2884                           
  2885                           ; BSR set to: 0
  2886  0026B4  0E00               	movlw	0
  2887  0026B6  0100               	movlb	0	; () banked
  2888  0026B8  6F69               	movwf	putSTRINGU1@cont& (0+255),b
  2889  0026BA  D019               	goto	l3372
  2890  0026BC                     l3366:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;UART1.c: 26: putcTxU1(*dato++);
  2894  0026BC  0100               	movlb	0	; () banked
  2895  0026BE  C062  FFF6         	movff	putSTRINGU1@dato,tblptrl
  2896  0026C2  0100               	movlb	0	; () banked
  2897  0026C4  C063  FFF7         	movff	putSTRINGU1@dato+1,tblptrh
  2898  0026C8  6AF8               	clrf	tblptru,c
  2899  0026CA  0E07               	movlw	(high __ramtop+-1)
  2900  0026CC  64F7               	cpfsgt	tblptrh,c
  2901  0026CE  D003               	bra	u3187
  2902  0026D0  0008               	tblrd		*
  2903  0026D2  50F5               	movf	tablat,w,c
  2904  0026D4  D005               	bra	u3180
  2905  0026D6                     u3187:
  2906  0026D6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2907  0026DA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2908  0026DE  50EF               	movf	indf0,w,c
  2909  0026E0                     u3180:
  2910  0026E0  EC83  F01A         	call	_putcTxU1
  2911  0026E4  0100               	movlb	0	; () banked
  2912  0026E6  4B62               	infsnz	putSTRINGU1@dato& (0+255),f,b
  2913  0026E8  2B63               	incf	(putSTRINGU1@dato+1)& (0+255),f,b
  2914                           
  2915                           ; BSR set to: 0
  2916  0026EA  0100               	movlb	0	; () banked
  2917  0026EC  2B69               	incf	putSTRINGU1@cont& (0+255),f,b
  2918  0026EE                     l3372:
  2919                           
  2920                           ; BSR set to: 0
  2921  0026EE  0100               	movlb	0	; () banked
  2922  0026F0  5169               	movf	putSTRINGU1@cont& (0+255),w,b
  2923  0026F2  0100               	movlb	0	; () banked
  2924  0026F4  5D68               	subwf	putSTRINGU1@last& (0+255),w,b
  2925  0026F6  A0D8               	btfss	status,0,c
  2926                           
  2927                           ; BSR set to: 0
  2928                           
  2929                           ; BSR set to: 0
  2930  0026F8  0012               	return	
  2931  0026FA  D7E0               	goto	l3366
  2932  0026FC                     __end_of_putSTRINGU1:
  2933                           	opt stack 0
  2934                           tblptru	equ	0xFF8
  2935                           tblptrh	equ	0xFF7
  2936                           tblptrl	equ	0xFF6
  2937                           tablat	equ	0xFF5
  2938                           prodh	equ	0xFF4
  2939                           prodl	equ	0xFF3
  2940                           intcon	equ	0xFF2
  2941                           intcon2	equ	0xFF1
  2942                           intcon3	equ	0xFF0
  2943                           indf0	equ	0xFEF
  2944                           postinc0	equ	0xFEE
  2945                           fsr0h	equ	0xFEA
  2946                           fsr0l	equ	0xFE9
  2947                           wreg	equ	0xFE8
  2948                           postinc1	equ	0xFE6
  2949                           postdec1	equ	0xFE5
  2950                           fsr1l	equ	0xFE1
  2951                           postinc2	equ	0xFDE
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _putcTxU1 *****************
  2955 ;; Defined at:
  2956 ;;		line 12 in file "UART1.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  character       1    wreg     unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  character       1    1[BANK0 ] unsigned char 
  2961 ;; Return value:  Size  Location     Type
  2962 ;;		None               void
  2963 ;; Registers used:
  2964 ;;		wreg, status,2, cstack
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2970 ;;      Params:         0       0       0       0       0       0       0       0       0
  2971 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2973 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2974 ;;Total ram usage:        1 bytes
  2975 ;; Hardware stack levels used:    1
  2976 ;; Hardware stack levels required when called:    5
  2977 ;; This function calls:
  2978 ;;		_WriteUSART
  2979 ;; This function is called by:
  2980 ;;		_putSTRINGU1
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text11
  2985  003506                     __ptext11:
  2986                           	opt stack 0
  2987  003506                     _putcTxU1:
  2988                           	opt stack 21
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;incstack = 0
  2992                           ;putcTxU1@character stored from wreg
  2993  003506  0100               	movlb	0	; () banked
  2994  003508  6F61               	movwf	putcTxU1@character& (0+255),b
  2995                           
  2996                           ; BSR set to: 0
  2997                           ;UART1.c: 14: WriteUSART(character);
  2998  00350A  0100               	movlb	0	; () banked
  2999  00350C  5161               	movf	putcTxU1@character& (0+255),w,b
  3000  00350E  EC70  F01A         	call	_WriteUSART
  3001  003512                     l229:
  3002  003512  B2AC               	btfsc	4012,1,c	;volatile
  3003  003514  0012               	return	
  3004  003516  D7FD               	goto	l229
  3005  003518                     __end_of_putcTxU1:
  3006                           	opt stack 0
  3007                           tblptru	equ	0xFF8
  3008                           tblptrh	equ	0xFF7
  3009                           tblptrl	equ	0xFF6
  3010                           tablat	equ	0xFF5
  3011                           prodh	equ	0xFF4
  3012                           prodl	equ	0xFF3
  3013                           intcon	equ	0xFF2
  3014                           intcon2	equ	0xFF1
  3015                           intcon3	equ	0xFF0
  3016                           indf0	equ	0xFEF
  3017                           postinc0	equ	0xFEE
  3018                           fsr0h	equ	0xFEA
  3019                           fsr0l	equ	0xFE9
  3020                           wreg	equ	0xFE8
  3021                           postinc1	equ	0xFE6
  3022                           postdec1	equ	0xFE5
  3023                           fsr1l	equ	0xFE1
  3024                           postinc2	equ	0xFDE
  3025                           status	equ	0xFD8
  3026                           
  3027 ;; *************** function _Pause_seg *****************
  3028 ;; Defined at:
  3029 ;;		line 18 in file "Retardos.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  x               1    wreg     unsigned char 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  x               1    5[BANK0 ] unsigned char 
  3034 ;;  i               1    6[BANK0 ] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;		None               void
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3044 ;;      Params:         0       0       0       0       0       0       0       0       0
  3045 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3047 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3048 ;;Total ram usage:        2 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    5
  3051 ;; This function calls:
  3052 ;;		_Pause_ms
  3053 ;; This function is called by:
  3054 ;;		_BT_Init
  3055 ;;		_Inicializa_Driveby
  3056 ;;		_EstadoBluetooth
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text12
  3061  002F34                     __ptext12:
  3062                           	opt stack 0
  3063  002F34                     _Pause_seg:
  3064                           	opt stack 24
  3065                           
  3066                           ;incstack = 0
  3067                           ;Pause_seg@x stored from wreg
  3068  002F34  0100               	movlb	0	; () banked
  3069  002F36  6F65               	movwf	Pause_seg@x& (0+255),b
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;Retardos.c: 19: unsigned char i=0;
  3073  002F38  0E00               	movlw	0
  3074  002F3A  0100               	movlb	0	; () banked
  3075  002F3C  6F66               	movwf	Pause_seg@i& (0+255),b
  3076                           
  3077                           ;Retardos.c: 20: for(i=0;i<=x;i++){
  3078  002F3E  0E00               	movlw	0
  3079  002F40  0100               	movlb	0	; () banked
  3080  002F42  6F66               	movwf	Pause_seg@i& (0+255),b
  3081  002F44  D022               	goto	l3752
  3082  002F46                     l3748:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;Retardos.c: 21: Pause_ms(250);Pause_ms(250);
  3086  002F46  0E00               	movlw	0
  3087  002F48  0100               	movlb	0	; () banked
  3088  002F4A  6F61               	movwf	(Pause_ms@x+1)& (0+255),b
  3089  002F4C  0EFA               	movlw	250
  3090  002F4E  0100               	movlb	0	; () banked
  3091  002F50  6F60               	movwf	Pause_ms@x& (0+255),b
  3092  002F52  EC3C  F018         	call	_Pause_ms	;wreg free
  3093  002F56  0E00               	movlw	0
  3094  002F58  0100               	movlb	0	; () banked
  3095  002F5A  6F61               	movwf	(Pause_ms@x+1)& (0+255),b
  3096  002F5C  0EFA               	movlw	250
  3097  002F5E  0100               	movlb	0	; () banked
  3098  002F60  6F60               	movwf	Pause_ms@x& (0+255),b
  3099  002F62  EC3C  F018         	call	_Pause_ms	;wreg free
  3100                           
  3101                           ;Retardos.c: 22: Pause_ms(250);Pause_ms(250);
  3102  002F66  0E00               	movlw	0
  3103  002F68  0100               	movlb	0	; () banked
  3104  002F6A  6F61               	movwf	(Pause_ms@x+1)& (0+255),b
  3105  002F6C  0EFA               	movlw	250
  3106  002F6E  0100               	movlb	0	; () banked
  3107  002F70  6F60               	movwf	Pause_ms@x& (0+255),b
  3108  002F72  EC3C  F018         	call	_Pause_ms	;wreg free
  3109  002F76  0E00               	movlw	0
  3110  002F78  0100               	movlb	0	; () banked
  3111  002F7A  6F61               	movwf	(Pause_ms@x+1)& (0+255),b
  3112  002F7C  0EFA               	movlw	250
  3113  002F7E  0100               	movlb	0	; () banked
  3114  002F80  6F60               	movwf	Pause_ms@x& (0+255),b
  3115  002F82  EC3C  F018         	call	_Pause_ms	;wreg free
  3116  002F86  0100               	movlb	0	; () banked
  3117  002F88  2B66               	incf	Pause_seg@i& (0+255),f,b
  3118  002F8A                     l3752:
  3119                           
  3120                           ; BSR set to: 0
  3121  002F8A  0100               	movlb	0	; () banked
  3122  002F8C  5166               	movf	Pause_seg@i& (0+255),w,b
  3123  002F8E  0100               	movlb	0	; () banked
  3124  002F90  5D65               	subwf	Pause_seg@x& (0+255),w,b
  3125  002F92  A0D8               	btfss	status,0,c
  3126                           
  3127                           ; BSR set to: 0
  3128                           
  3129                           ; BSR set to: 0
  3130  002F94  0012               	return	
  3131  002F96  D7D7               	goto	l3748
  3132  002F98                     __end_of_Pause_seg:
  3133                           	opt stack 0
  3134                           tblptru	equ	0xFF8
  3135                           tblptrh	equ	0xFF7
  3136                           tblptrl	equ	0xFF6
  3137                           tablat	equ	0xFF5
  3138                           prodh	equ	0xFF4
  3139                           prodl	equ	0xFF3
  3140                           intcon	equ	0xFF2
  3141                           intcon2	equ	0xFF1
  3142                           intcon3	equ	0xFF0
  3143                           indf0	equ	0xFEF
  3144                           postinc0	equ	0xFEE
  3145                           fsr0h	equ	0xFEA
  3146                           fsr0l	equ	0xFE9
  3147                           wreg	equ	0xFE8
  3148                           postinc1	equ	0xFE6
  3149                           postdec1	equ	0xFE5
  3150                           fsr1l	equ	0xFE1
  3151                           postinc2	equ	0xFDE
  3152                           status	equ	0xFD8
  3153                           
  3154 ;; *************** function _Pause_ms *****************
  3155 ;; Defined at:
  3156 ;;		line 11 in file "Retardos.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  x               2    0[BANK0 ] unsigned int 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  i               2    3[BANK0 ] unsigned int 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;		None               void
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3170 ;;      Params:         0       2       0       0       0       0       0       0       0
  3171 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3172 ;;      Temps:          0       1       0       0       0       0       0       0       0
  3173 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3174 ;;Total ram usage:        5 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    4
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_Pause_seg
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text13
  3185  003078                     __ptext13:
  3186                           	opt stack 0
  3187  003078                     _Pause_ms:
  3188                           	opt stack 24
  3189                           
  3190                           ;Retardos.c: 12: unsigned int i=0;
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;incstack = 0
  3194  003078  0E00               	movlw	0
  3195  00307A  0100               	movlb	0	; () banked
  3196  00307C  6F64               	movwf	(Pause_ms@i+1)& (0+255),b
  3197  00307E  0E00               	movlw	0
  3198  003080  0100               	movlb	0	; () banked
  3199  003082  6F63               	movwf	Pause_ms@i& (0+255),b
  3200                           
  3201                           ;Retardos.c: 13: for(i=0;i<=x;i++){
  3202  003084  0E00               	movlw	0
  3203  003086  0100               	movlb	0	; () banked
  3204  003088  6F64               	movwf	(Pause_ms@i+1)& (0+255),b
  3205  00308A  0E00               	movlw	0
  3206  00308C  0100               	movlb	0	; () banked
  3207  00308E  6F63               	movwf	Pause_ms@i& (0+255),b
  3208  003090  D00B               	goto	l208
  3209  003092                     l3376:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;Retardos.c: 14: _delay((unsigned long)((1)*(8000000/4000.0)));
  3213  003092  0E03               	movlw	3
  3214  003094  0100               	movlb	0	; () banked
  3215  003096  6F62               	movwf	??_Pause_ms& (0+255),b
  3216  003098  0E98               	movlw	152
  3217  00309A                     u5317:
  3218  00309A  2EE8               	decfsz	wreg,f,c
  3219  00309C  D7FE               	goto	u5317
  3220  00309E  2F62               	decfsz	??_Pause_ms& (0+255),f,b
  3221  0030A0  D7FC               	goto	u5317
  3222  0030A2  0100               	movlb	0	; () banked
  3223  0030A4  4B63               	infsnz	Pause_ms@i& (0+255),f,b
  3224  0030A6  2B64               	incf	(Pause_ms@i+1)& (0+255),f,b
  3225  0030A8                     l208:
  3226                           
  3227                           ; BSR set to: 0
  3228  0030A8  0100               	movlb	0	; () banked
  3229  0030AA  5163               	movf	Pause_ms@i& (0+255),w,b
  3230  0030AC  0100               	movlb	0	; () banked
  3231  0030AE  5D60               	subwf	Pause_ms@x& (0+255),w,b
  3232  0030B0  0100               	movlb	0	; () banked
  3233  0030B2  5164               	movf	(Pause_ms@i+1)& (0+255),w,b
  3234  0030B4  0100               	movlb	0	; () banked
  3235  0030B6  5961               	subwfb	(Pause_ms@x+1)& (0+255),w,b
  3236  0030B8  A0D8               	btfss	status,0,c
  3237                           
  3238                           ; BSR set to: 0
  3239                           
  3240                           ; BSR set to: 0
  3241  0030BA  0012               	return	
  3242  0030BC  D7EA               	goto	l3376
  3243  0030BE                     __end_of_Pause_ms:
  3244                           	opt stack 0
  3245                           tblptru	equ	0xFF8
  3246                           tblptrh	equ	0xFF7
  3247                           tblptrl	equ	0xFF6
  3248                           tablat	equ	0xFF5
  3249                           prodh	equ	0xFF4
  3250                           prodl	equ	0xFF3
  3251                           intcon	equ	0xFF2
  3252                           intcon2	equ	0xFF1
  3253                           intcon3	equ	0xFF0
  3254                           indf0	equ	0xFEF
  3255                           postinc0	equ	0xFEE
  3256                           fsr0h	equ	0xFEA
  3257                           fsr0l	equ	0xFE9
  3258                           wreg	equ	0xFE8
  3259                           postinc1	equ	0xFE6
  3260                           postdec1	equ	0xFE5
  3261                           fsr1l	equ	0xFE1
  3262                           postinc2	equ	0xFDE
  3263                           status	equ	0xFD8
  3264                           
  3265 ;; *************** function _Comando_Tablet *****************
  3266 ;; Defined at:
  3267 ;;		line 128 in file "Funciones_Db.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;		None
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  sensed          2  135[BANK0 ] int 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;		None               void
  3274 ;; Registers used:
  3275 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3281 ;;      Params:         0       0       0       0       0       0       0       0       0
  3282 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3284 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3285 ;;Total ram usage:        2 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    9
  3288 ;; This function calls:
  3289 ;;		_Lcd_Clear
  3290 ;;		_Lcd_Set_Cursor
  3291 ;;		_Lcd_Write_Integer
  3292 ;;		_Lcd_Write_String
  3293 ;;		_PWM_DutyCycle1
  3294 ;;		_PWM_DutyCycle2
  3295 ;;		_clrBufferUSART
  3296 ;;		_getCNY70Value
  3297 ;;		_putcBluetoothInt
  3298 ;;		_putcBluetoothString
  3299 ;; This function is called by:
  3300 ;;		_main
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text14
  3305  001B04                     __ptext14:
  3306                           	opt stack 0
  3307  001B04                     _Comando_Tablet:
  3308                           	opt stack 21
  3309                           
  3310                           ;Funciones_Db.c: 130: int sensed=0;
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;incstack = 0
  3314  001B04  0E00               	movlw	0
  3315  001B06  0100               	movlb	0	; () banked
  3316  001B08  6FE8               	movwf	(Comando_Tablet@sensed+1)& (0+255),b
  3317  001B0A  0E00               	movlw	0
  3318  001B0C  0100               	movlb	0	; () banked
  3319  001B0E  6FE7               	movwf	Comando_Tablet@sensed& (0+255),b
  3320                           
  3321                           ;Funciones_Db.c: 131: switch (BluetoothDato[1]) {
  3322  001B10  D092               	goto	l4608
  3323  001B12                     l4558:
  3324                           
  3325                           ;Funciones_Db.c: 133: Lcd_Clear();
  3326  001B12  EC8C  F01A         	call	_Lcd_Clear	;wreg free
  3327                           
  3328                           ;Funciones_Db.c: 134: Lcd_Set_Cursor(1, 1);
  3329  001B16  0E01               	movlw	1
  3330  001B18  0100               	movlb	0	; () banked
  3331  001B1A  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3332  001B1C  0E01               	movlw	1
  3333  001B1E  ECC3  F016         	call	_Lcd_Set_Cursor
  3334                           
  3335                           ;Funciones_Db.c: 135: Lcd_Write_String("1");
  3336  001B22  0E7F               	movlw	high (STR_20+15)
  3337  001B24  0100               	movlb	0	; () banked
  3338  001B26  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3339  001B28  0E45               	movlw	low (STR_20+15)
  3340  001B2A  0100               	movlb	0	; () banked
  3341  001B2C  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3342  001B2E  EC7C  F014         	call	_Lcd_Write_String	;wreg free
  3343                           
  3344                           ;Funciones_Db.c: 136: break;
  3345  001B32  D093               	goto	l4610
  3346  001B34                     l4564:
  3347                           
  3348                           ;Funciones_Db.c: 138: Lcd_Clear();
  3349  001B34  EC8C  F01A         	call	_Lcd_Clear	;wreg free
  3350                           
  3351                           ;Funciones_Db.c: 139: Lcd_Set_Cursor(1, 1);
  3352  001B38  0E01               	movlw	1
  3353  001B3A  0100               	movlb	0	; () banked
  3354  001B3C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3355  001B3E  0E01               	movlw	1
  3356  001B40  ECC3  F016         	call	_Lcd_Set_Cursor
  3357                           
  3358                           ;Funciones_Db.c: 140: Lcd_Write_String("2");
  3359  001B44  0E7F               	movlw	high (STR_21+15)
  3360  001B46  0100               	movlb	0	; () banked
  3361  001B48  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3362  001B4A  0E56               	movlw	low (STR_21+15)
  3363  001B4C  0100               	movlb	0	; () banked
  3364  001B4E  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3365  001B50  EC7C  F014         	call	_Lcd_Write_String	;wreg free
  3366                           
  3367                           ;Funciones_Db.c: 141: break;
  3368  001B54  D082               	goto	l4610
  3369  001B56                     l4570:
  3370                           
  3371                           ;Funciones_Db.c: 144: Lcd_Clear();
  3372  001B56  EC8C  F01A         	call	_Lcd_Clear	;wreg free
  3373                           
  3374                           ;Funciones_Db.c: 145: Lcd_Set_Cursor(1, 1);
  3375  001B5A  0E01               	movlw	1
  3376  001B5C  0100               	movlb	0	; () banked
  3377  001B5E  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3378  001B60  0E01               	movlw	1
  3379  001B62  ECC3  F016         	call	_Lcd_Set_Cursor
  3380                           
  3381                           ;Funciones_Db.c: 147: Lcd_Write_String("3");
  3382  001B66  0E7F               	movlw	high STR_14
  3383  001B68  0100               	movlb	0	; () banked
  3384  001B6A  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3385  001B6C  0EFD               	movlw	low STR_14
  3386  001B6E  0100               	movlb	0	; () banked
  3387  001B70  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3388  001B72  EC7C  F014         	call	_Lcd_Write_String	;wreg free
  3389                           
  3390                           ;Funciones_Db.c: 148: break;
  3391  001B76  D071               	goto	l4610
  3392  001B78                     l194:
  3393                           
  3394                           ; BSR set to: 1
  3395                           ;Funciones_Db.c: 153: PORTAbits.RA1 = ~ PORTAbits.RA1;
  3396  001B78  7280               	btg	3968,1,c	;volatile
  3397                           
  3398                           ; BSR set to: 1
  3399                           ;Funciones_Db.c: 154: sensed = getCNY70Value();
  3400  001B7A  EC5A  F012         	call	_getCNY70Value	;wreg free
  3401  001B7E  0100               	movlb	0	; () banked
  3402  001B80  C060  F0E7         	movff	?_getCNY70Value,Comando_Tablet@sensed
  3403  001B84  0100               	movlb	0	; () banked
  3404  001B86  C061  F0E8         	movff	?_getCNY70Value+1,Comando_Tablet@sensed+1
  3405                           
  3406                           ;Funciones_Db.c: 155: Lcd_Clear();
  3407  001B8A  EC8C  F01A         	call	_Lcd_Clear	;wreg free
  3408                           
  3409                           ;Funciones_Db.c: 156: Lcd_Set_Cursor(1,1);
  3410  001B8E  0E01               	movlw	1
  3411  001B90  0100               	movlb	0	; () banked
  3412  001B92  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3413  001B94  0E01               	movlw	1
  3414  001B96  ECC3  F016         	call	_Lcd_Set_Cursor
  3415                           
  3416                           ;Funciones_Db.c: 157: Lcd_Write_Integer(sensed);
  3417  001B9A  C0E7  F0CF         	movff	Comando_Tablet@sensed,Lcd_Write_Integer@a
  3418  001B9E  C0E8  F0D0         	movff	Comando_Tablet@sensed+1,Lcd_Write_Integer@a+1
  3419  001BA2  ECC6  F018         	call	_Lcd_Write_Integer	;wreg free
  3420                           
  3421                           ;Funciones_Db.c: 158: putcBluetoothInt(sensed);
  3422  001BA6  C0E7  F0CF         	movff	Comando_Tablet@sensed,putcBluetoothInt@a
  3423  001BAA  C0E8  F0D0         	movff	Comando_Tablet@sensed+1,putcBluetoothInt@a+1
  3424  001BAE  EC0C  F015         	call	_putcBluetoothInt	;wreg free
  3425                           
  3426                           ;Funciones_Db.c: 159: putcBluetoothString("\n");
  3427  001BB2  0E7F               	movlw	high (STR_2+13)
  3428  001BB4  0100               	movlb	0	; () banked
  3429  001BB6  6F68               	movwf	(putcBluetoothString@a+1)& (0+255),b
  3430  001BB8  0E75               	movlw	low (STR_2+13)
  3431  001BBA  0100               	movlb	0	; () banked
  3432  001BBC  6F67               	movwf	putcBluetoothString@a& (0+255),b
  3433  001BBE  ECC8  F014         	call	_putcBluetoothString	;wreg free
  3434                           
  3435                           ;Funciones_Db.c: 160: break;
  3436  001BC2  D04B               	goto	l4610
  3437  001BC4                     l195:
  3438                           
  3439                           ; BSR set to: 1
  3440                           ;Funciones_Db.c: 162: PORTAbits.RA0 = ~ PORTAbits.RA0;
  3441  001BC4  7080               	btg	3968,0,c	;volatile
  3442                           
  3443                           ; BSR set to: 1
  3444                           ;Funciones_Db.c: 163: Lcd_Clear();
  3445  001BC6  EC8C  F01A         	call	_Lcd_Clear	;wreg free
  3446                           
  3447                           ;Funciones_Db.c: 164: Lcd_Set_Cursor(1, 1);
  3448  001BCA  0E01               	movlw	1
  3449  001BCC  0100               	movlb	0	; () banked
  3450  001BCE  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3451  001BD0  0E01               	movlw	1
  3452  001BD2  ECC3  F016         	call	_Lcd_Set_Cursor
  3453                           
  3454                           ;Funciones_Db.c: 165: Lcd_Write_Integer(BluetoothDato[3]);
  3455  001BD6  0101               	movlb	1	; () banked
  3456  001BD8  0100               	movlb	0	; () banked
  3457  001BDA  C12B  F0CF         	movff	_BluetoothDato+3,Lcd_Write_Integer@a
  3458  001BDE  0100               	movlb	0	; () banked
  3459  001BE0  6BD0               	clrf	(Lcd_Write_Integer@a+1)& (0+255),b
  3460  001BE2  ECC6  F018         	call	_Lcd_Write_Integer	;wreg free
  3461                           
  3462                           ;Funciones_Db.c: 166: Lcd_Set_Cursor(2, 1);
  3463  001BE6  0E01               	movlw	1
  3464  001BE8  0100               	movlb	0	; () banked
  3465  001BEA  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3466  001BEC  0E02               	movlw	2
  3467  001BEE  ECC3  F016         	call	_Lcd_Set_Cursor
  3468                           
  3469                           ;Funciones_Db.c: 167: Lcd_Write_Integer(BluetoothDato[4]);
  3470  001BF2  0101               	movlb	1	; () banked
  3471  001BF4  0100               	movlb	0	; () banked
  3472  001BF6  C12C  F0CF         	movff	_BluetoothDato+4,Lcd_Write_Integer@a
  3473  001BFA  0100               	movlb	0	; () banked
  3474  001BFC  6BD0               	clrf	(Lcd_Write_Integer@a+1)& (0+255),b
  3475  001BFE  ECC6  F018         	call	_Lcd_Write_Integer	;wreg free
  3476                           
  3477                           ;Funciones_Db.c: 170: PWM_DutyCycle1(BluetoothDato[3]);
  3478  001C02  0101               	movlb	1	; () banked
  3479  001C04  512B               	movf	(_BluetoothDato+3)& (0+255),w,b
  3480  001C06  EC0C  F016         	call	_PWM_DutyCycle1
  3481                           
  3482                           ;Funciones_Db.c: 171: PWM_DutyCycle2(BluetoothDato[4]);
  3483  001C0A  0101               	movlb	1	; () banked
  3484  001C0C  512C               	movf	(_BluetoothDato+4)& (0+255),w,b
  3485  001C0E  ECCE  F015         	call	_PWM_DutyCycle2
  3486                           
  3487                           ;Funciones_Db.c: 172: break;
  3488  001C12  D023               	goto	l4610
  3489  001C14                     l4600:
  3490                           
  3491                           ;Funciones_Db.c: 174: Lcd_Clear();
  3492  001C14  EC8C  F01A         	call	_Lcd_Clear	;wreg free
  3493                           
  3494                           ;Funciones_Db.c: 175: Lcd_Set_Cursor(1, 1);
  3495  001C18  0E01               	movlw	1
  3496  001C1A  0100               	movlb	0	; () banked
  3497  001C1C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3498  001C1E  0E01               	movlw	1
  3499  001C20  ECC3  F016         	call	_Lcd_Set_Cursor
  3500                           
  3501                           ;Funciones_Db.c: 176: Lcd_Write_String("Default");
  3502  001C24  0E7F               	movlw	high STR_16
  3503  001C26  0100               	movlb	0	; () banked
  3504  001C28  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3505  001C2A  0EE7               	movlw	low STR_16
  3506  001C2C  0100               	movlb	0	; () banked
  3507  001C2E  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  3508  001C30  EC7C  F014         	call	_Lcd_Write_String	;wreg free
  3509                           
  3510                           ;Funciones_Db.c: 177: break;
  3511  001C34  D012               	goto	l4610
  3512  001C36                     l4608:
  3513  001C36  0101               	movlb	1	; () banked
  3514  001C38  5129               	movf	(_BluetoothDato+1)& (0+255),w,b
  3515                           
  3516                           ; Switch size 1, requested type "space"
  3517                           ; Number of cases is 5, Range of values is 1 to 5
  3518                           ; switch strategies available:
  3519                           ; Name         Instructions Cycles
  3520                           ; simple_byte           16     9 (average)
  3521                           ;	Chosen strategy is simple_byte
  3522  001C3A  0A01               	xorlw	1	; case 1
  3523  001C3C  B4D8               	btfsc	status,2,c
  3524  001C3E  D769               	goto	l4558
  3525  001C40  0A03               	xorlw	3	; case 2
  3526  001C42  B4D8               	btfsc	status,2,c
  3527  001C44  D777               	goto	l4564
  3528  001C46  0A01               	xorlw	1	; case 3
  3529  001C48  B4D8               	btfsc	status,2,c
  3530  001C4A  D785               	goto	l4570
  3531  001C4C  0A07               	xorlw	7	; case 4
  3532  001C4E  B4D8               	btfsc	status,2,c
  3533  001C50  D793               	goto	l194
  3534  001C52  0A01               	xorlw	1	; case 5
  3535  001C54  B4D8               	btfsc	status,2,c
  3536  001C56  D7B6               	goto	l195
  3537  001C58  D7DD               	goto	l4600
  3538  001C5A                     l4610:
  3539                           
  3540                           ;Funciones_Db.c: 179: clrBufferUSART();
  3541  001C5A  ECA4  F018         	call	_clrBufferUSART	;wreg free
  3542                           
  3543                           ;Funciones_Db.c: 180: return;
  3544  001C5E  0012               	return	
  3545  001C60                     __end_of_Comando_Tablet:
  3546                           	opt stack 0
  3547                           tblptru	equ	0xFF8
  3548                           tblptrh	equ	0xFF7
  3549                           tblptrl	equ	0xFF6
  3550                           tablat	equ	0xFF5
  3551                           prodh	equ	0xFF4
  3552                           prodl	equ	0xFF3
  3553                           intcon	equ	0xFF2
  3554                           intcon2	equ	0xFF1
  3555                           intcon3	equ	0xFF0
  3556                           indf0	equ	0xFEF
  3557                           postinc0	equ	0xFEE
  3558                           fsr0h	equ	0xFEA
  3559                           fsr0l	equ	0xFE9
  3560                           wreg	equ	0xFE8
  3561                           postinc1	equ	0xFE6
  3562                           postdec1	equ	0xFE5
  3563                           fsr1l	equ	0xFE1
  3564                           postinc2	equ	0xFDE
  3565                           status	equ	0xFD8
  3566                           
  3567 ;; *************** function _putcBluetoothString *****************
  3568 ;; Defined at:
  3569 ;;		line 90 in file "Bluetooth.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  a               2    7[BANK0 ] PTR unsigned char 
  3572 ;;		 -> STR_15(2), 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;  i               2   11[BANK0 ] int 
  3575 ;; Return value:  Size  Location     Type
  3576 ;;		None               void
  3577 ;; Registers used:
  3578 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3584 ;;      Params:         0       2       0       0       0       0       0       0       0
  3585 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3586 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3587 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3588 ;;Total ram usage:        6 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; Hardware stack levels required when called:    6
  3591 ;; This function calls:
  3592 ;;		_UART1_Init
  3593 ;;		_WriteUSART
  3594 ;; This function is called by:
  3595 ;;		_Comando_Tablet
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text15
  3600  002990                     __ptext15:
  3601                           	opt stack 0
  3602  002990                     _putcBluetoothString:
  3603                           	opt stack 23
  3604                           
  3605                           ;Bluetooth.c: 92: int i;
  3606                           ;Bluetooth.c: 93: UART1_Init(51);
  3607                           
  3608                           ;incstack = 0
  3609  002990  0E33               	movlw	51
  3610  002992  EC5B  F01A         	call	_UART1_Init
  3611                           
  3612                           ;Bluetooth.c: 95: for (i = 0; a[i] != '\0'; i++){
  3613  002996  0E00               	movlw	0
  3614  002998  0100               	movlb	0	; () banked
  3615  00299A  6F6C               	movwf	(putcBluetoothString@i+1)& (0+255),b
  3616  00299C  0E00               	movlw	0
  3617  00299E  0100               	movlb	0	; () banked
  3618  0029A0  6F6B               	movwf	putcBluetoothString@i& (0+255),b
  3619  0029A2  D01C               	goto	l4118
  3620  0029A4                     l4114:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;Bluetooth.c: 96: WriteUSART(a[i]);
  3624  0029A4  0100               	movlb	0	; () banked
  3625  0029A6  C067  F069         	movff	putcBluetoothString@a,??_putcBluetoothString
  3626  0029AA  0100               	movlb	0	; () banked
  3627  0029AC  C068  F06A         	movff	putcBluetoothString@a+1,??_putcBluetoothString+1
  3628  0029B0  0100               	movlb	0	; () banked
  3629  0029B2  516B               	movf	putcBluetoothString@i& (0+255),w,b
  3630  0029B4  0100               	movlb	0	; () banked
  3631  0029B6  2769               	addwf	??_putcBluetoothString& (0+255),f,b
  3632  0029B8  0100               	movlb	0	; () banked
  3633  0029BA  516C               	movf	(putcBluetoothString@i+1)& (0+255),w,b
  3634  0029BC  0100               	movlb	0	; () banked
  3635  0029BE  236A               	addwfc	(??_putcBluetoothString+1)& (0+255),f,b
  3636  0029C0  C069  FFF6         	movff	??_putcBluetoothString,tblptrl
  3637  0029C4  C06A  FFF7         	movff	??_putcBluetoothString+1,tblptrh
  3638  0029C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3639  0029C8  6AF8               	clrf	tblptru,c
  3640  0029CA                     	endif
  3641  0029CA                     	if	0	;tblptru may be non-zero
  3642  0029CA                     	endif
  3643  0029CA  0008               	tblrd		*
  3644  0029CC  50F5               	movf	tablat,w,c
  3645  0029CE  EC70  F01A         	call	_WriteUSART
  3646  0029D2                     l59:
  3647  0029D2  A2AC               	btfss	4012,1,c	;volatile
  3648  0029D4  D7FE               	goto	l59
  3649  0029D6  0100               	movlb	0	; () banked
  3650  0029D8  4B6B               	infsnz	putcBluetoothString@i& (0+255),f,b
  3651  0029DA  2B6C               	incf	(putcBluetoothString@i+1)& (0+255),f,b
  3652  0029DC                     l4118:
  3653                           
  3654                           ; BSR set to: 0
  3655  0029DC  0100               	movlb	0	; () banked
  3656  0029DE  C067  F069         	movff	putcBluetoothString@a,??_putcBluetoothString
  3657  0029E2  0100               	movlb	0	; () banked
  3658  0029E4  C068  F06A         	movff	putcBluetoothString@a+1,??_putcBluetoothString+1
  3659  0029E8  0100               	movlb	0	; () banked
  3660  0029EA  516B               	movf	putcBluetoothString@i& (0+255),w,b
  3661  0029EC  0100               	movlb	0	; () banked
  3662  0029EE  2769               	addwf	??_putcBluetoothString& (0+255),f,b
  3663  0029F0  0100               	movlb	0	; () banked
  3664  0029F2  516C               	movf	(putcBluetoothString@i+1)& (0+255),w,b
  3665  0029F4  0100               	movlb	0	; () banked
  3666  0029F6  236A               	addwfc	(??_putcBluetoothString+1)& (0+255),f,b
  3667  0029F8  C069  FFF6         	movff	??_putcBluetoothString,tblptrl
  3668  0029FC  C06A  FFF7         	movff	??_putcBluetoothString+1,tblptrh
  3669  002A00                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3670  002A00  6AF8               	clrf	tblptru,c
  3671  002A02                     	endif
  3672  002A02                     	if	0	;tblptru may be non-zero
  3673  002A02                     	endif
  3674  002A02  0008               	tblrd		*
  3675  002A04  50F5               	movf	tablat,w,c
  3676  002A06  0900               	iorlw	0
  3677  002A08  A4D8               	btfss	status,2,c
  3678  002A0A  D7CC               	goto	l4114
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;Bluetooth.c: 98: }
  3682                           ;Bluetooth.c: 99: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  3683                           
  3684                           ; BSR set to: 0
  3685  002A0C  0E4F               	movlw	79
  3686  002A0E  16AB               	andwf	4011,f,c	;volatile
  3687                           
  3688                           ; BSR set to: 0
  3689  002A10  9AAC               	bcf	4012,5,c	;volatile
  3690  002A12  0ECF               	movlw	207
  3691  002A14  169D               	andwf	3997,f,c	;volatile
  3692                           
  3693                           ; BSR set to: 0
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;Bluetooth.c: 100: return;
  3697  002A16  0012               	return	
  3698  002A18                     __end_of_putcBluetoothString:
  3699                           	opt stack 0
  3700                           tblptru	equ	0xFF8
  3701                           tblptrh	equ	0xFF7
  3702                           tblptrl	equ	0xFF6
  3703                           tablat	equ	0xFF5
  3704                           prodh	equ	0xFF4
  3705                           prodl	equ	0xFF3
  3706                           intcon	equ	0xFF2
  3707                           intcon2	equ	0xFF1
  3708                           intcon3	equ	0xFF0
  3709                           indf0	equ	0xFEF
  3710                           postinc0	equ	0xFEE
  3711                           fsr0h	equ	0xFEA
  3712                           fsr0l	equ	0xFE9
  3713                           wreg	equ	0xFE8
  3714                           postinc1	equ	0xFE6
  3715                           postdec1	equ	0xFE5
  3716                           fsr1l	equ	0xFE1
  3717                           postinc2	equ	0xFDE
  3718                           status	equ	0xFD8
  3719                           
  3720 ;; *************** function _putcBluetoothInt *****************
  3721 ;; Defined at:
  3722 ;;		line 102 in file "Bluetooth.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  a               2  111[BANK0 ] int 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  s              20  113[BANK0 ] unsigned char [20]
  3727 ;;  i               2  133[BANK0 ] int 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;		None               void
  3730 ;; Registers used:
  3731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3737 ;;      Params:         0       2       0       0       0       0       0       0       0
  3738 ;;      Locals:         0      22       0       0       0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3740 ;;      Totals:         0      24       0       0       0       0       0       0       0
  3741 ;;Total ram usage:       24 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    8
  3744 ;; This function calls:
  3745 ;;		_UART1_Init
  3746 ;;		_WriteUSART
  3747 ;;		_sprintf
  3748 ;; This function is called by:
  3749 ;;		_Comando_Tablet
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text16
  3754  002A18                     __ptext16:
  3755                           	opt stack 0
  3756  002A18                     _putcBluetoothInt:
  3757                           	opt stack 21
  3758                           
  3759                           ;Bluetooth.c: 104: int i;
  3760                           ;Bluetooth.c: 105: unsigned char s[20];
  3761                           ;Bluetooth.c: 106: UART1_Init(51);
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;incstack = 0
  3765  002A18  0E33               	movlw	51
  3766  002A1A  EC5B  F01A         	call	_UART1_Init
  3767                           
  3768                           ;Bluetooth.c: 108: sprintf(s,"%d",a);
  3769  002A1E  0100               	movlb	0	; () banked
  3770  002A20  0E00               	movlw	high putcBluetoothInt@s
  3771  002A22  0100               	movlb	0	; () banked
  3772  002A24  6FA0               	movwf	(sprintf@sp+1)& (0+255),b
  3773  002A26  0100               	movlb	0	; () banked
  3774  002A28  0ED1               	movlw	low putcBluetoothInt@s
  3775  002A2A  0100               	movlb	0	; () banked
  3776  002A2C  6F9F               	movwf	sprintf@sp& (0+255),b
  3777  002A2E  0E7F               	movlw	high (STR_18+10)
  3778  002A30  0100               	movlb	0	; () banked
  3779  002A32  6FA2               	movwf	(sprintf@f+1)& (0+255),b
  3780  002A34  0EB9               	movlw	low (STR_18+10)
  3781  002A36  0100               	movlb	0	; () banked
  3782  002A38  6FA1               	movwf	sprintf@f& (0+255),b
  3783  002A3A  C0CF  F0A3         	movff	putcBluetoothInt@a,?_sprintf+4
  3784  002A3E  C0D0  F0A4         	movff	putcBluetoothInt@a+1,?_sprintf+5
  3785  002A42  EC0E  F000         	call	_sprintf	;wreg free
  3786                           
  3787                           ;Bluetooth.c: 109: for (i = 0; s[i] != '\0'; i++){
  3788  002A46  0E00               	movlw	0
  3789  002A48  0100               	movlb	0	; () banked
  3790  002A4A  6FE6               	movwf	(putcBluetoothInt@i+1)& (0+255),b
  3791  002A4C  0E00               	movlw	0
  3792  002A4E  0100               	movlb	0	; () banked
  3793  002A50  6FE5               	movwf	putcBluetoothInt@i& (0+255),b
  3794  002A52  D012               	goto	l4136
  3795  002A54                     l4132:
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;Bluetooth.c: 110: WriteUSART(s[i]);
  3799  002A54  0100               	movlb	0	; () banked
  3800  002A56  0ED1               	movlw	low putcBluetoothInt@s
  3801  002A58  0100               	movlb	0	; () banked
  3802  002A5A  25E5               	addwf	putcBluetoothInt@i& (0+255),w,b
  3803  002A5C  6ED9               	movwf	fsr2l,c
  3804  002A5E  0100               	movlb	0	; () banked
  3805  002A60  0E00               	movlw	high putcBluetoothInt@s
  3806  002A62  0100               	movlb	0	; () banked
  3807  002A64  21E6               	addwfc	(putcBluetoothInt@i+1)& (0+255),w,b
  3808  002A66  6EDA               	movwf	fsr2h,c
  3809  002A68  50DF               	movf	indf2,w,c
  3810  002A6A  EC70  F01A         	call	_WriteUSART
  3811  002A6E                     l68:
  3812  002A6E  A2AC               	btfss	4012,1,c	;volatile
  3813  002A70  D7FE               	goto	l68
  3814  002A72  0100               	movlb	0	; () banked
  3815  002A74  4BE5               	infsnz	putcBluetoothInt@i& (0+255),f,b
  3816  002A76  2BE6               	incf	(putcBluetoothInt@i+1)& (0+255),f,b
  3817  002A78                     l4136:
  3818                           
  3819                           ; BSR set to: 0
  3820  002A78  0100               	movlb	0	; () banked
  3821  002A7A  0ED1               	movlw	low putcBluetoothInt@s
  3822  002A7C  0100               	movlb	0	; () banked
  3823  002A7E  25E5               	addwf	putcBluetoothInt@i& (0+255),w,b
  3824  002A80  6ED9               	movwf	fsr2l,c
  3825  002A82  0100               	movlb	0	; () banked
  3826  002A84  0E00               	movlw	high putcBluetoothInt@s
  3827  002A86  0100               	movlb	0	; () banked
  3828  002A88  21E6               	addwfc	(putcBluetoothInt@i+1)& (0+255),w,b
  3829  002A8A  6EDA               	movwf	fsr2h,c
  3830  002A8C  50DF               	movf	indf2,w,c
  3831  002A8E  A4D8               	btfss	status,2,c
  3832  002A90  D7E1               	goto	l4132
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;Bluetooth.c: 112: }
  3836                           ;Bluetooth.c: 113: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  3837                           
  3838                           ; BSR set to: 0
  3839  002A92  0E4F               	movlw	79
  3840  002A94  16AB               	andwf	4011,f,c	;volatile
  3841                           
  3842                           ; BSR set to: 0
  3843  002A96  9AAC               	bcf	4012,5,c	;volatile
  3844  002A98  0ECF               	movlw	207
  3845  002A9A  169D               	andwf	3997,f,c	;volatile
  3846                           
  3847                           ; BSR set to: 0
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;Bluetooth.c: 114: return;
  3851  002A9C  0012               	return	
  3852  002A9E                     __end_of_putcBluetoothInt:
  3853                           	opt stack 0
  3854                           tblptru	equ	0xFF8
  3855                           tblptrh	equ	0xFF7
  3856                           tblptrl	equ	0xFF6
  3857                           tablat	equ	0xFF5
  3858                           prodh	equ	0xFF4
  3859                           prodl	equ	0xFF3
  3860                           intcon	equ	0xFF2
  3861                           intcon2	equ	0xFF1
  3862                           intcon3	equ	0xFF0
  3863                           indf0	equ	0xFEF
  3864                           postinc0	equ	0xFEE
  3865                           fsr0h	equ	0xFEA
  3866                           fsr0l	equ	0xFE9
  3867                           wreg	equ	0xFE8
  3868                           postinc1	equ	0xFE6
  3869                           postdec1	equ	0xFE5
  3870                           fsr1l	equ	0xFE1
  3871                           indf2	equ	0xFDF
  3872                           postinc2	equ	0xFDE
  3873                           fsr2h	equ	0xFDA
  3874                           fsr2l	equ	0xFD9
  3875                           status	equ	0xFD8
  3876                           
  3877 ;; *************** function _WriteUSART *****************
  3878 ;; Defined at:
  3879 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  data            1    wreg     unsigned char 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  data            1    0[BANK0 ] unsigned char 
  3884 ;; Return value:  Size  Location     Type
  3885 ;;		None               void
  3886 ;; Registers used:
  3887 ;;		wreg
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3893 ;;      Params:         0       0       0       0       0       0       0       0       0
  3894 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3896 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3897 ;;Total ram usage:        1 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    4
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_putcBluetoothString
  3904 ;;		_putcBluetoothInt
  3905 ;;		_putcTxU1
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text17
  3910  0034E0                     __ptext17:
  3911                           	opt stack 0
  3912  0034E0                     _WriteUSART:
  3913                           	opt stack 21
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;incstack = 0
  3917                           ;WriteUSART@data stored from wreg
  3918  0034E0  0100               	movlb	0	; () banked
  3919  0034E2  6F60               	movwf	WriteUSART@data& (0+255),b
  3920                           
  3921                           ; BSR set to: 0
  3922  0034E4  ACAC               	btfss	4012,6,c	;volatile
  3923  0034E6  D003               	goto	l3096
  3924                           
  3925                           ; BSR set to: 0
  3926  0034E8  90AC               	bcf	4012,0,c	;volatile
  3927  0034EA  B254               	btfsc	_USART_Status,1,c
  3928                           
  3929                           ; BSR set to: 0
  3930  0034EC  80AC               	bsf	4012,0,c	;volatile
  3931  0034EE                     l3096:
  3932                           
  3933                           ; BSR set to: 0
  3934  0034EE  C060  FFAD         	movff	WriteUSART@data,4013	;volatile
  3935                           
  3936                           ; BSR set to: 0
  3937  0034F2  0012               	return	
  3938  0034F4                     __end_of_WriteUSART:
  3939                           	opt stack 0
  3940                           tblptru	equ	0xFF8
  3941                           tblptrh	equ	0xFF7
  3942                           tblptrl	equ	0xFF6
  3943                           tablat	equ	0xFF5
  3944                           prodh	equ	0xFF4
  3945                           prodl	equ	0xFF3
  3946                           intcon	equ	0xFF2
  3947                           intcon2	equ	0xFF1
  3948                           intcon3	equ	0xFF0
  3949                           indf0	equ	0xFEF
  3950                           postinc0	equ	0xFEE
  3951                           fsr0h	equ	0xFEA
  3952                           fsr0l	equ	0xFE9
  3953                           wreg	equ	0xFE8
  3954                           postinc1	equ	0xFE6
  3955                           postdec1	equ	0xFE5
  3956                           fsr1l	equ	0xFE1
  3957                           indf2	equ	0xFDF
  3958                           postinc2	equ	0xFDE
  3959                           fsr2h	equ	0xFDA
  3960                           fsr2l	equ	0xFD9
  3961                           status	equ	0xFD8
  3962                           
  3963 ;; *************** function _UART1_Init *****************
  3964 ;; Defined at:
  3965 ;;		line 5 in file "UART1.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  bdr             1    wreg     unsigned char 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  bdr             1    6[BANK0 ] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;		None               void
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, cstack
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3979 ;;      Params:         0       0       0       0       0       0       0       0       0
  3980 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3982 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3983 ;;Total ram usage:        1 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    5
  3986 ;; This function calls:
  3987 ;;		_OpenUSART
  3988 ;; This function is called by:
  3989 ;;		_BT_Init
  3990 ;;		_putcBluetoothString
  3991 ;;		_putcBluetoothInt
  3992 ;;		_main
  3993 ;;		_EstadoBluetooth
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text18
  3998  0034B6                     __ptext18:
  3999                           	opt stack 0
  4000  0034B6                     _UART1_Init:
  4001                           	opt stack 25
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;incstack = 0
  4005                           ;UART1_Init@bdr stored from wreg
  4006  0034B6  0100               	movlb	0	; () banked
  4007  0034B8  6F66               	movwf	UART1_Init@bdr& (0+255),b
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;UART1.c: 8: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111 & 
      +                          0b11111111,bdr);
  4011  0034BA  0100               	movlb	0	; () banked
  4012  0034BC  C066  F060         	movff	UART1_Init@bdr,OpenUSART@spbrg
  4013  0034C0  0100               	movlb	0	; () banked
  4014  0034C2  6B61               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  4015  0034C4  0E7C               	movlw	124
  4016  0034C6  EC4F  F015         	call	_OpenUSART
  4017  0034CA  0012               	return	
  4018  0034CC                     __end_of_UART1_Init:
  4019                           	opt stack 0
  4020                           tblptru	equ	0xFF8
  4021                           tblptrh	equ	0xFF7
  4022                           tblptrl	equ	0xFF6
  4023                           tablat	equ	0xFF5
  4024                           prodh	equ	0xFF4
  4025                           prodl	equ	0xFF3
  4026                           intcon	equ	0xFF2
  4027                           intcon2	equ	0xFF1
  4028                           intcon3	equ	0xFF0
  4029                           indf0	equ	0xFEF
  4030                           postinc0	equ	0xFEE
  4031                           fsr0h	equ	0xFEA
  4032                           fsr0l	equ	0xFE9
  4033                           wreg	equ	0xFE8
  4034                           postinc1	equ	0xFE6
  4035                           postdec1	equ	0xFE5
  4036                           fsr1l	equ	0xFE1
  4037                           indf2	equ	0xFDF
  4038                           postinc2	equ	0xFDE
  4039                           fsr2h	equ	0xFDA
  4040                           fsr2l	equ	0xFD9
  4041                           status	equ	0xFD8
  4042                           
  4043 ;; *************** function _OpenUSART *****************
  4044 ;; Defined at:
  4045 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  config          1    wreg     unsigned char 
  4048 ;;  spbrg           2    0[BANK0 ] unsigned int 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  config          1    5[BANK0 ] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;		None               void
  4053 ;; Registers used:
  4054 ;;		wreg, status,2
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4060 ;;      Params:         0       2       0       0       0       0       0       0       0
  4061 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4062 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4063 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4064 ;;Total ram usage:        6 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    4
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_UART1_Init
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text19
  4075  002A9E                     __ptext19:
  4076                           	opt stack 0
  4077  002A9E                     _OpenUSART:
  4078                           	opt stack 25
  4079                           
  4080                           ;incstack = 0
  4081                           ;OpenUSART@config stored from wreg
  4082  002A9E  0100               	movlb	0	; () banked
  4083  002AA0  6F65               	movwf	OpenUSART@config& (0+255),b
  4084                           
  4085                           ; BSR set to: 0
  4086  002AA2  0E00               	movlw	0
  4087  002AA4  6EAC               	movwf	4012,c	;volatile
  4088  002AA6  0E00               	movlw	0
  4089  002AA8  6EAB               	movwf	4011,c	;volatile
  4090                           
  4091                           ; BSR set to: 0
  4092  002AAA  0100               	movlb	0	; () banked
  4093  002AAC  B165               	btfsc	OpenUSART@config& (0+255),0,b
  4094                           
  4095                           ; BSR set to: 0
  4096  002AAE  88AC               	bsf	4012,4,c	;volatile
  4097                           
  4098                           ; BSR set to: 0
  4099                           
  4100                           ; BSR set to: 0
  4101  002AB0  0100               	movlb	0	; () banked
  4102  002AB2  A365               	btfss	OpenUSART@config& (0+255),1,b
  4103  002AB4  D002               	goto	l3390
  4104                           
  4105                           ; BSR set to: 0
  4106  002AB6  8CAC               	bsf	4012,6,c	;volatile
  4107  002AB8  8CAB               	bsf	4011,6,c	;volatile
  4108  002ABA                     l3390:
  4109                           
  4110                           ; BSR set to: 0
  4111  002ABA  0100               	movlb	0	; () banked
  4112  002ABC  B565               	btfsc	OpenUSART@config& (0+255),2,b
  4113                           
  4114                           ; BSR set to: 0
  4115  002ABE  8EAC               	bsf	4012,7,c	;volatile
  4116                           
  4117                           ; BSR set to: 0
  4118                           
  4119                           ; BSR set to: 0
  4120  002AC0  0100               	movlb	0	; () banked
  4121  002AC2  A765               	btfss	OpenUSART@config& (0+255),3,b
  4122  002AC4  D002               	goto	l625
  4123                           
  4124                           ; BSR set to: 0
  4125  002AC6  88AB               	bsf	4011,4,c	;volatile
  4126  002AC8  D001               	goto	l3398
  4127  002ACA                     l625:
  4128                           
  4129                           ; BSR set to: 0
  4130  002ACA  8AAB               	bsf	4011,5,c	;volatile
  4131  002ACC                     l3398:
  4132                           
  4133                           ; BSR set to: 0
  4134  002ACC  0100               	movlb	0	; () banked
  4135  002ACE  B965               	btfsc	OpenUSART@config& (0+255),4,b
  4136                           
  4137                           ; BSR set to: 0
  4138  002AD0  84AC               	bsf	4012,2,c	;volatile
  4139                           
  4140                           ; BSR set to: 0
  4141  002AD2  989E               	bcf	3998,4,c	;volatile
  4142                           
  4143                           ; BSR set to: 0
  4144  002AD4  0100               	movlb	0	; () banked
  4145  002AD6  BB65               	btfsc	OpenUSART@config& (0+255),5,b
  4146                           
  4147                           ; BSR set to: 0
  4148  002AD8  86AB               	bsf	4011,3,c	;volatile
  4149                           
  4150                           ; BSR set to: 0
  4151                           
  4152                           ; BSR set to: 0
  4153  002ADA  0100               	movlb	0	; () banked
  4154  002ADC  AD65               	btfss	OpenUSART@config& (0+255),6,b
  4155  002ADE  D002               	goto	l629
  4156                           
  4157                           ; BSR set to: 0
  4158  002AE0  8A9D               	bsf	3997,5,c	;volatile
  4159  002AE2  D001               	goto	l630
  4160  002AE4                     l629:
  4161                           
  4162                           ; BSR set to: 0
  4163  002AE4  9A9D               	bcf	3997,5,c	;volatile
  4164  002AE6                     l630:
  4165                           
  4166                           ; BSR set to: 0
  4167  002AE6  9A9E               	bcf	3998,5,c	;volatile
  4168                           
  4169                           ; BSR set to: 0
  4170  002AE8  0100               	movlb	0	; () banked
  4171  002AEA  AF65               	btfss	OpenUSART@config& (0+255),7,b
  4172  002AEC  D002               	goto	l631
  4173                           
  4174                           ; BSR set to: 0
  4175  002AEE  889D               	bsf	3997,4,c	;volatile
  4176  002AF0  D001               	goto	l632
  4177  002AF2                     l631:
  4178                           
  4179                           ; BSR set to: 0
  4180  002AF2  989D               	bcf	3997,4,c	;volatile
  4181  002AF4                     l632:
  4182                           
  4183                           ; BSR set to: 0
  4184  002AF4  C060  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4185                           
  4186                           ; BSR set to: 0
  4187  002AF8  0100               	movlb	0	; () banked
  4188  002AFA  C061  F062         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4189  002AFE  C062  F063         	movff	??_OpenUSART,??_OpenUSART+1
  4190  002B02  0100               	movlb	0	; () banked
  4191  002B04  6B64               	clrf	(??_OpenUSART+2)& (0+255),b
  4192  002B06  0100               	movlb	0	; () banked
  4193  002B08  5163               	movf	(??_OpenUSART+1)& (0+255),w,b
  4194  002B0A  6EB0               	movwf	4016,c	;volatile
  4195                           
  4196                           ; BSR set to: 0
  4197  002B0C  8AAC               	bsf	4012,5,c	;volatile
  4198                           
  4199                           ; BSR set to: 0
  4200  002B0E  8EAB               	bsf	4011,7,c	;volatile
  4201                           
  4202                           ; BSR set to: 0
  4203  002B10  9C94               	bcf	3988,6,c	;volatile
  4204                           
  4205                           ; BSR set to: 0
  4206  002B12  8E94               	bsf	3988,7,c	;volatile
  4207                           
  4208                           ; BSR set to: 0
  4209  002B14  B8AC               	btfsc	4012,4,c	;volatile
  4210                           
  4211                           ; BSR set to: 0
  4212  002B16  BEAC               	btfsc	4012,7,c	;volatile
  4213  002B18  D001               	goto	l634
  4214                           
  4215                           ; BSR set to: 0
  4216  002B1A  8C94               	bsf	3988,6,c	;volatile
  4217  002B1C                     l634:
  4218                           
  4219                           ; BSR set to: 0
  4220  002B1C  0012               	return	
  4221  002B1E                     __end_of_OpenUSART:
  4222                           	opt stack 0
  4223                           tblptru	equ	0xFF8
  4224                           tblptrh	equ	0xFF7
  4225                           tblptrl	equ	0xFF6
  4226                           tablat	equ	0xFF5
  4227                           prodh	equ	0xFF4
  4228                           prodl	equ	0xFF3
  4229                           intcon	equ	0xFF2
  4230                           intcon2	equ	0xFF1
  4231                           intcon3	equ	0xFF0
  4232                           indf0	equ	0xFEF
  4233                           postinc0	equ	0xFEE
  4234                           fsr0h	equ	0xFEA
  4235                           fsr0l	equ	0xFE9
  4236                           wreg	equ	0xFE8
  4237                           postinc1	equ	0xFE6
  4238                           postdec1	equ	0xFE5
  4239                           fsr1l	equ	0xFE1
  4240                           indf2	equ	0xFDF
  4241                           postinc2	equ	0xFDE
  4242                           fsr2h	equ	0xFDA
  4243                           fsr2l	equ	0xFD9
  4244                           status	equ	0xFD8
  4245                           
  4246 ;; *************** function _getCNY70Value *****************
  4247 ;; Defined at:
  4248 ;;		line 3 in file "cny70.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  2    0[BANK0 ] int 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4262 ;;      Params:         0       2       0       0       0       0       0       0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4265 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4266 ;;Total ram usage:        2 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    4
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_Comando_Tablet
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text20
  4277  0024B4                     __ptext20:
  4278                           	opt stack 0
  4279  0024B4                     _getCNY70Value:
  4280                           	opt stack 25
  4281                           
  4282                           ;cny70.c: 5: if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 1 && PORTBbits.RB2 == 0 && PORTBb
      +                          its.RB3 == 1 && PORTBbits.RB4 == 1)
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;incstack = 0
  4286  0024B4  B081               	btfsc	3969,0,c	;volatile
  4287  0024B6  A281               	btfss	3969,1,c	;volatile
  4288  0024B8  D005               	goto	l448
  4289  0024BA  A481               	btfss	3969,2,c	;volatile
  4290  0024BC  A681               	btfss	3969,3,c	;volatile
  4291  0024BE  D002               	goto	l448
  4292  0024C0  B881               	btfsc	3969,4,c	;volatile
  4293  0024C2  D054               	goto	l4320
  4294  0024C4                     l448:
  4295                           
  4296                           ;cny70.c: 7: else if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 0 && PORTBbits.RB2 == 1 && P
      +                          ORTBbits.RB3 == 1 && PORTBbits.RB4 == 1)
  4297  0024C4  B081               	btfsc	3969,0,c	;volatile
  4298  0024C6  B281               	btfsc	3969,1,c	;volatile
  4299  0024C8  D005               	goto	l451
  4300  0024CA  B481               	btfsc	3969,2,c	;volatile
  4301  0024CC  A681               	btfss	3969,3,c	;volatile
  4302  0024CE  D002               	goto	l451
  4303  0024D0  B881               	btfsc	3969,4,c	;volatile
  4304  0024D2  D03A               	goto	u4730
  4305  0024D4                     l451:
  4306                           
  4307                           ;cny70.c: 9: else if(PORTBbits.RB0 == 0 && PORTBbits.RB1 == 1 && PORTBbits.RB2 == 1 && P
      +                          ORTBbits.RB3 == 1 && PORTBbits.RB4 == 1)
  4308  0024D4  A081               	btfss	3969,0,c	;volatile
  4309  0024D6  A281               	btfss	3969,1,c	;volatile
  4310  0024D8  D00A               	goto	l453
  4311  0024DA  B481               	btfsc	3969,2,c	;volatile
  4312  0024DC  A681               	btfss	3969,3,c	;volatile
  4313  0024DE  D007               	goto	l453
  4314  0024E0  A881               	btfss	3969,4,c	;volatile
  4315  0024E2  D005               	goto	l453
  4316  0024E4                     
  4317                           ;cny70.c: 10: return -2;
  4318  0024E4  0EFF               	movlw	255
  4319  0024E6  0100               	movlb	0	; () banked
  4320  0024E8  6F61               	movwf	(?_getCNY70Value+1)& (0+255),b
  4321  0024EA  0EFE               	movlw	254
  4322  0024EC  D043               	goto	L5
  4323  0024EE                     l453:
  4324                           
  4325                           ;cny70.c: 11: else if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 1 && PORTBbits.RB2 == 1 && 
      +                          PORTBbits.RB3 == 0 && PORTBbits.RB4 == 1)
  4326  0024EE  B081               	btfsc	3969,0,c	;volatile
  4327  0024F0  A281               	btfss	3969,1,c	;volatile
  4328  0024F2  D005               	goto	l455
  4329  0024F4  B481               	btfsc	3969,2,c	;volatile
  4330  0024F6  B681               	btfsc	3969,3,c	;volatile
  4331  0024F8  D002               	goto	l455
  4332  0024FA  B881               	btfsc	3969,4,c	;volatile
  4333  0024FC  D032               	goto	u4780
  4334  0024FE                     l455:
  4335                           
  4336                           ;cny70.c: 13: else if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 1 && PORTBbits.RB2 == 1 && 
      +                          PORTBbits.RB3 == 1 && PORTBbits.RB4 == 0)
  4337  0024FE  B081               	btfsc	3969,0,c	;volatile
  4338  002500  A281               	btfss	3969,1,c	;volatile
  4339  002502  D005               	goto	l457
  4340  002504  B481               	btfsc	3969,2,c	;volatile
  4341  002506  A681               	btfss	3969,3,c	;volatile
  4342  002508  D002               	goto	l457
  4343  00250A  A881               	btfss	3969,4,c	;volatile
  4344  00250C  D008               	goto	u4630
  4345  00250E                     l457:
  4346                           
  4347                           ;cny70.c: 15: else if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 1 && PORTBbits.RB2 == 1 && 
      +                          PORTBbits.RB3 == 0 && PORTBbits.RB4 == 0)
  4348  00250E  B081               	btfsc	3969,0,c	;volatile
  4349  002510  A281               	btfss	3969,1,c	;volatile
  4350  002512  D00A               	goto	l459
  4351  002514  B481               	btfsc	3969,2,c	;volatile
  4352  002516  B681               	btfsc	3969,3,c	;volatile
  4353  002518  D007               	goto	l459
  4354  00251A  B881               	btfsc	3969,4,c	;volatile
  4355  00251C  D005               	goto	l459
  4356  00251E                     u4630:
  4357                           
  4358                           ;cny70.c: 16: return 2;
  4359  00251E  0E00               	movlw	0
  4360  002520  0100               	movlb	0	; () banked
  4361  002522  6F61               	movwf	(?_getCNY70Value+1)& (0+255),b
  4362  002524  0E02               	movlw	2
  4363  002526  D026               	goto	L5
  4364  002528                     l459:
  4365                           
  4366                           ;cny70.c: 17: else if(PORTBbits.RB0 == 0 && PORTBbits.RB1 == 0 && PORTBbits.RB2 == 1 && 
      +                          PORTBbits.RB3 == 1 && PORTBbits.RB4 == 1)
  4367  002528  A081               	btfss	3969,0,c	;volatile
  4368  00252A  B281               	btfsc	3969,1,c	;volatile
  4369  00252C  D005               	goto	l461
  4370  00252E  B481               	btfsc	3969,2,c	;volatile
  4371  002530  A681               	btfss	3969,3,c	;volatile
  4372  002532  D002               	goto	l461
  4373  002534  B881               	btfsc	3969,4,c	;volatile
  4374  002536  D7D6               	goto	L6
  4375  002538                     l461:
  4376                           
  4377                           ;cny70.c: 19: else if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 0 && PORTBbits.RB2 == 0 && 
      +                          PORTBbits.RB3 == 1 && PORTBbits.RB4 == 1)
  4378  002538  B081               	btfsc	3969,0,c	;volatile
  4379  00253A  B281               	btfsc	3969,1,c	;volatile
  4380  00253C  D00A               	goto	l463
  4381  00253E  A481               	btfss	3969,2,c	;volatile
  4382  002540  A681               	btfss	3969,3,c	;volatile
  4383  002542  D007               	goto	l463
  4384  002544  A881               	btfss	3969,4,c	;volatile
  4385  002546  D005               	goto	l463
  4386  002548                     u4730:
  4387                           
  4388                           ;cny70.c: 20: return -1;
  4389  002548  0100               	movlb	0	; () banked
  4390  00254A  6960               	setf	?_getCNY70Value& (0+255),b
  4391  00254C  0100               	movlb	0	; () banked
  4392  00254E  6961               	setf	(?_getCNY70Value+1)& (0+255),b
  4393  002550  D013               	goto	l449
  4394  002552                     l463:
  4395                           
  4396                           ;cny70.c: 21: else if(PORTBbits.RB0 == 1 && PORTBbits.RB1 == 1 && PORTBbits.RB2 == 0 && 
      +                          PORTBbits.RB3 == 0 && PORTBbits.RB4 == 1)
  4397  002552  B081               	btfsc	3969,0,c	;volatile
  4398  002554  A281               	btfss	3969,1,c	;volatile
  4399  002556  D00A               	goto	l4320
  4400  002558  A481               	btfss	3969,2,c	;volatile
  4401  00255A  B681               	btfsc	3969,3,c	;volatile
  4402  00255C  D007               	goto	l4320
  4403  00255E  A881               	btfss	3969,4,c	;volatile
  4404  002560  D005               	goto	l4320
  4405  002562                     u4780:
  4406                           
  4407                           ;cny70.c: 22: return 1;
  4408  002562  0E00               	movlw	0
  4409  002564  0100               	movlb	0	; () banked
  4410  002566  6F61               	movwf	(?_getCNY70Value+1)& (0+255),b
  4411  002568  0E01               	movlw	1
  4412  00256A  D004               	goto	L5
  4413  00256C                     l4320:
  4414                           
  4415                           ;cny70.c: 23: else
  4416                           ;cny70.c: 24: return 0;
  4417  00256C  0E00               	movlw	0
  4418  00256E  0100               	movlb	0	; () banked
  4419  002570  6F61               	movwf	(?_getCNY70Value+1)& (0+255),b
  4420  002572  0E00               	movlw	0
  4421  002574                     L5:
  4422  002574  0100               	movlb	0	; () banked
  4423  002576  6F60               	movwf	?_getCNY70Value& (0+255),b
  4424  002578                     l449:
  4425                           
  4426                           ; BSR set to: 0
  4427  002578  0012               	return	
  4428  00257A                     __end_of_getCNY70Value:
  4429                           	opt stack 0
  4430                           tblptru	equ	0xFF8
  4431                           tblptrh	equ	0xFF7
  4432                           tblptrl	equ	0xFF6
  4433                           tablat	equ	0xFF5
  4434                           prodh	equ	0xFF4
  4435                           prodl	equ	0xFF3
  4436                           intcon	equ	0xFF2
  4437                           intcon2	equ	0xFF1
  4438                           intcon3	equ	0xFF0
  4439                           indf0	equ	0xFEF
  4440                           postinc0	equ	0xFEE
  4441                           fsr0h	equ	0xFEA
  4442                           fsr0l	equ	0xFE9
  4443                           wreg	equ	0xFE8
  4444                           postinc1	equ	0xFE6
  4445                           postdec1	equ	0xFE5
  4446                           fsr1l	equ	0xFE1
  4447                           indf2	equ	0xFDF
  4448                           postinc2	equ	0xFDE
  4449                           fsr2h	equ	0xFDA
  4450                           fsr2l	equ	0xFD9
  4451                           status	equ	0xFD8
  4452                           
  4453 ;; *************** function _clrBufferUSART *****************
  4454 ;; Defined at:
  4455 ;;		line 68 in file "Bluetooth.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;  i               2    0[BANK0 ] int 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;		None               void
  4462 ;; Registers used:
  4463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0
  4470 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4472 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4473 ;;Total ram usage:        2 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    4
  4476 ;; This function calls:
  4477 ;;		Nothing
  4478 ;; This function is called by:
  4479 ;;		_Inicializa_Driveby
  4480 ;;		_Comando_Tablet
  4481 ;;		_main
  4482 ;;		_CheckTX
  4483 ;;		_EstadoBluetooth
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text21
  4488  003148                     __ptext21:
  4489                           	opt stack 0
  4490  003148                     _clrBufferUSART:
  4491                           	opt stack 26
  4492                           
  4493                           ;Bluetooth.c: 69: int i;
  4494                           ;Bluetooth.c: 70: for (i = 0; i < 20; i++) {
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;incstack = 0
  4498  003148  0E00               	movlw	0
  4499  00314A  0100               	movlb	0	; () banked
  4500  00314C  6F61               	movwf	(clrBufferUSART@i+1)& (0+255),b
  4501  00314E  0E00               	movlw	0
  4502  003150  0100               	movlb	0	; () banked
  4503  003152  6F60               	movwf	clrBufferUSART@i& (0+255),b
  4504  003154                     
  4505                           ; BSR set to: 0
  4506  003154  0100               	movlb	0	; () banked
  4507  003156  5161               	movf	(clrBufferUSART@i+1)& (0+255),w,b
  4508  003158  0A80               	xorlw	128
  4509  00315A  0F80               	addlw	-128
  4510  00315C  0E14               	movlw	20
  4511  00315E  B4D8               	btfsc	status,2,c
  4512  003160  5D60               	subwf	clrBufferUSART@i& (0+255),w,b
  4513  003162  B0D8               	btfsc	status,0,c
  4514  003164  D012               	goto	l54
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;Bluetooth.c: 71: BluetoothDato[i] = 0;
  4518                           
  4519                           ; BSR set to: 0
  4520                           
  4521                           ; BSR set to: 0
  4522  003166  0101               	movlb	1	; () banked
  4523  003168  0E28               	movlw	low _BluetoothDato
  4524  00316A  0100               	movlb	0	; () banked
  4525  00316C  2560               	addwf	clrBufferUSART@i& (0+255),w,b
  4526  00316E  6ED9               	movwf	fsr2l,c
  4527  003170  0101               	movlb	1	; () banked
  4528  003172  0E01               	movlw	high _BluetoothDato
  4529  003174  0100               	movlb	0	; () banked
  4530  003176  2161               	addwfc	(clrBufferUSART@i+1)& (0+255),w,b
  4531  003178  6EDA               	movwf	fsr2h,c
  4532  00317A  0E00               	movlw	0
  4533  00317C  6EDF               	movwf	indf2,c
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;Bluetooth.c: 72: cad = 0;
  4537  00317E  0E00               	movlw	0
  4538  003180  6E55               	movwf	_cad,c
  4539                           
  4540                           ; BSR set to: 0
  4541  003182  0100               	movlb	0	; () banked
  4542  003184  4B60               	infsnz	clrBufferUSART@i& (0+255),f,b
  4543  003186  2B61               	incf	(clrBufferUSART@i+1)& (0+255),f,b
  4544  003188  D7E5               	goto	L7
  4545  00318A                     l54:
  4546                           
  4547                           ; BSR set to: 0
  4548  00318A  0012               	return	
  4549  00318C                     __end_of_clrBufferUSART:
  4550                           	opt stack 0
  4551                           tblptru	equ	0xFF8
  4552                           tblptrh	equ	0xFF7
  4553                           tblptrl	equ	0xFF6
  4554                           tablat	equ	0xFF5
  4555                           prodh	equ	0xFF4
  4556                           prodl	equ	0xFF3
  4557                           intcon	equ	0xFF2
  4558                           intcon2	equ	0xFF1
  4559                           intcon3	equ	0xFF0
  4560                           indf0	equ	0xFEF
  4561                           postinc0	equ	0xFEE
  4562                           fsr0h	equ	0xFEA
  4563                           fsr0l	equ	0xFE9
  4564                           wreg	equ	0xFE8
  4565                           postinc1	equ	0xFE6
  4566                           postdec1	equ	0xFE5
  4567                           fsr1l	equ	0xFE1
  4568                           indf2	equ	0xFDF
  4569                           postinc2	equ	0xFDE
  4570                           fsr2h	equ	0xFDA
  4571                           fsr2l	equ	0xFD9
  4572                           status	equ	0xFD8
  4573                           
  4574 ;; *************** function _PWM_DutyCycle2 *****************
  4575 ;; Defined at:
  4576 ;;		line 55 in file "pwm.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  percentageDu    1    wreg     unsigned char 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  percentageDu    1   63[BANK0 ] unsigned char 
  4581 ;;  DC              2   64[BANK0 ] unsigned int 
  4582 ;;  DutyCycle       2   61[BANK0 ] unsigned int 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;		None               void
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0, cstack
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4592 ;;      Params:         0       0       0       0       0       0       0       0       0
  4593 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4594 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4595 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4596 ;;Total ram usage:        9 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; Hardware stack levels required when called:    6
  4599 ;; This function calls:
  4600 ;;		_SetDCPWM2
  4601 ;;		___ftmul
  4602 ;;		___fttol
  4603 ;;		___lbtoft
  4604 ;; This function is called by:
  4605 ;;		_Comando_Tablet
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           	psect	text22
  4610  002B9C                     __ptext22:
  4611                           	opt stack 0
  4612  002B9C                     _PWM_DutyCycle2:
  4613                           	opt stack 23
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;incstack = 0
  4617                           ;PWM_DutyCycle2@percentageDuty stored from wreg
  4618  002B9C  0100               	movlb	0	; () banked
  4619  002B9E  6F9F               	movwf	PWM_DutyCycle2@percentageDuty& (0+255),b
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
  4623  002BA0  0E00               	movlw	0
  4624  002BA2  0100               	movlb	0	; () banked
  4625  002BA4  6FA1               	movwf	(PWM_DutyCycle2@DC+1)& (0+255),b
  4626  002BA6  0E00               	movlw	0
  4627  002BA8  0100               	movlb	0	; () banked
  4628  002BAA  6FA0               	movwf	PWM_DutyCycle2@DC& (0+255),b
  4629  002BAC  0E00               	movlw	0
  4630  002BAE  0100               	movlb	0	; () banked
  4631  002BB0  6F9E               	movwf	(PWM_DutyCycle2@DutyCycle+1)& (0+255),b
  4632  002BB2  0E00               	movlw	0
  4633  002BB4  0100               	movlb	0	; () banked
  4634  002BB6  6F9D               	movwf	PWM_DutyCycle2@DutyCycle& (0+255),b
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
  4638  002BB8  0EAE               	movlw	174
  4639  002BBA  0100               	movlb	0	; () banked
  4640  002BBC  6F77               	movwf	___ftmul@f2& (0+255),b
  4641  002BBE  0E23               	movlw	35
  4642  002BC0  0100               	movlb	0	; () banked
  4643  002BC2  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4644  002BC4  0E41               	movlw	65
  4645  002BC6  0100               	movlb	0	; () banked
  4646  002BC8  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4647  002BCA  0100               	movlb	0	; () banked
  4648  002BCC  519F               	movf	PWM_DutyCycle2@percentageDuty& (0+255),w,b
  4649  002BCE  EC8F  F019         	call	___lbtoft
  4650  002BD2  C068  F074         	movff	?___lbtoft,___ftmul@f1
  4651  002BD6  C069  F075         	movff	?___lbtoft+1,___ftmul@f1+1
  4652  002BDA  C06A  F076         	movff	?___lbtoft+2,___ftmul@f1+2
  4653  002BDE  ECD0  F00C         	call	___ftmul	;wreg free
  4654  002BE2  C074  F08A         	movff	?___ftmul,___fttol@f1
  4655  002BE6  C075  F08B         	movff	?___ftmul+1,___fttol@f1+1
  4656  002BEA  C076  F08C         	movff	?___ftmul+2,___fttol@f1+2
  4657  002BEE  EC30  F00E         	call	___fttol	;wreg free
  4658  002BF2  C08A  F099         	movff	?___fttol,??_PWM_DutyCycle2
  4659  002BF6  C08B  F09A         	movff	?___fttol+1,??_PWM_DutyCycle2+1
  4660  002BFA  C08C  F09B         	movff	?___fttol+2,??_PWM_DutyCycle2+2
  4661  002BFE  C08D  F09C         	movff	?___fttol+3,??_PWM_DutyCycle2+3
  4662  002C02  C099  F0A0         	movff	??_PWM_DutyCycle2,PWM_DutyCycle2@DC
  4663  002C06  C09A  F0A1         	movff	??_PWM_DutyCycle2+1,PWM_DutyCycle2@DC+1
  4664                           
  4665                           ;pwm.c: 60: SetDCPWM2(DC);
  4666  002C0A  C0A0  F060         	movff	PWM_DutyCycle2@DC,SetDCPWM2@dutycycle
  4667  002C0E  C0A1  F061         	movff	PWM_DutyCycle2@DC+1,SetDCPWM2@dutycycle+1
  4668  002C12  ECF4  F017         	call	_SetDCPWM2	;wreg free
  4669                           
  4670                           ;pwm.c: 61: return;
  4671  002C16  0012               	return	
  4672  002C18                     __end_of_PWM_DutyCycle2:
  4673                           	opt stack 0
  4674                           tblptru	equ	0xFF8
  4675                           tblptrh	equ	0xFF7
  4676                           tblptrl	equ	0xFF6
  4677                           tablat	equ	0xFF5
  4678                           prodh	equ	0xFF4
  4679                           prodl	equ	0xFF3
  4680                           intcon	equ	0xFF2
  4681                           intcon2	equ	0xFF1
  4682                           intcon3	equ	0xFF0
  4683                           indf0	equ	0xFEF
  4684                           postinc0	equ	0xFEE
  4685                           fsr0h	equ	0xFEA
  4686                           fsr0l	equ	0xFE9
  4687                           wreg	equ	0xFE8
  4688                           postinc1	equ	0xFE6
  4689                           postdec1	equ	0xFE5
  4690                           fsr1l	equ	0xFE1
  4691                           indf2	equ	0xFDF
  4692                           postinc2	equ	0xFDE
  4693                           fsr2h	equ	0xFDA
  4694                           fsr2l	equ	0xFD9
  4695                           status	equ	0xFD8
  4696                           
  4697 ;; *************** function _SetDCPWM2 *****************
  4698 ;; Defined at:
  4699 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  4704 ;; Return value:  Size  Location     Type
  4705 ;;		None               void
  4706 ;; Registers used:
  4707 ;;		wreg, status,2, status,0
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4713 ;;      Params:         0       2       0       0       0       0       0       0       0
  4714 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4715 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4716 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4717 ;;Total ram usage:        6 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    4
  4720 ;; This function calls:
  4721 ;;		Nothing
  4722 ;; This function is called by:
  4723 ;;		_PWM_DutyCycle2
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text23
  4728  002FE8                     __ptext23:
  4729                           	opt stack 0
  4730  002FE8                     _SetDCPWM2:
  4731                           	opt stack 24
  4732                           
  4733                           ;incstack = 0
  4734  002FE8  0100               	movlb	0	; () banked
  4735  002FEA  C060  F062         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  4736  002FEE  0100               	movlb	0	; () banked
  4737  002FF0  C061  F063         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  4738  002FF4  0E06               	movlw	6
  4739  002FF6                     u4135:
  4740  002FF6  90D8               	bcf	status,0,c
  4741  002FF8  0100               	movlb	0	; () banked
  4742  002FFA  3762               	rlcf	??_SetDCPWM2& (0+255),f,b
  4743  002FFC  3763               	rlcf	(??_SetDCPWM2+1)& (0+255),f,b
  4744  002FFE  2EE8               	decfsz	wreg,f,c
  4745  003000  D7FA               	goto	u4135
  4746  003002  C062  F064         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  4747  003006  C063  F065         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  4748                           
  4749                           ; BSR set to: 0
  4750  00300A  C065  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  4751  00300E  C064  F062         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  4752  003012  0100               	movlb	0	; () banked
  4753  003014  90D8               	bcf	status,0,c
  4754  003016  3362               	rrcf	??_SetDCPWM2& (0+255),f,b
  4755  003018  0100               	movlb	0	; () banked
  4756  00301A  90D8               	bcf	status,0,c
  4757  00301C  3362               	rrcf	??_SetDCPWM2& (0+255),f,b
  4758  00301E  0E30               	movlw	48
  4759  003020  0100               	movlb	0	; () banked
  4760  003022  1762               	andwf	??_SetDCPWM2& (0+255),f,b
  4761  003024  50BA               	movf	4026,w,c	;volatile
  4762  003026  0BCF               	andlw	207
  4763  003028  0100               	movlb	0	; () banked
  4764  00302A  1162               	iorwf	??_SetDCPWM2& (0+255),w,b
  4765  00302C  6EBA               	movwf	4026,c	;volatile
  4766                           
  4767                           ; BSR set to: 0
  4768  00302E  0012               	return	
  4769  003030                     __end_of_SetDCPWM2:
  4770                           	opt stack 0
  4771                           tblptru	equ	0xFF8
  4772                           tblptrh	equ	0xFF7
  4773                           tblptrl	equ	0xFF6
  4774                           tablat	equ	0xFF5
  4775                           prodh	equ	0xFF4
  4776                           prodl	equ	0xFF3
  4777                           intcon	equ	0xFF2
  4778                           intcon2	equ	0xFF1
  4779                           intcon3	equ	0xFF0
  4780                           indf0	equ	0xFEF
  4781                           postinc0	equ	0xFEE
  4782                           fsr0h	equ	0xFEA
  4783                           fsr0l	equ	0xFE9
  4784                           wreg	equ	0xFE8
  4785                           postinc1	equ	0xFE6
  4786                           postdec1	equ	0xFE5
  4787                           fsr1l	equ	0xFE1
  4788                           indf2	equ	0xFDF
  4789                           postinc2	equ	0xFDE
  4790                           fsr2h	equ	0xFDA
  4791                           fsr2l	equ	0xFD9
  4792                           status	equ	0xFD8
  4793                           
  4794 ;; *************** function _PWM_DutyCycle1 *****************
  4795 ;; Defined at:
  4796 ;;		line 33 in file "pwm.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  percentageDu    1    wreg     unsigned char 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  percentageDu    1   63[BANK0 ] unsigned char 
  4801 ;;  DC              2   64[BANK0 ] unsigned int 
  4802 ;;  DutyCycle       2   61[BANK0 ] unsigned int 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;		None               void
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0
  4813 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4814 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4815 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4816 ;;Total ram usage:        9 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:    6
  4819 ;; This function calls:
  4820 ;;		_SetDCPWM1
  4821 ;;		___ftmul
  4822 ;;		___fttol
  4823 ;;		___lbtoft
  4824 ;; This function is called by:
  4825 ;;		_Comando_Tablet
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           	psect	text24
  4830  002C18                     __ptext24:
  4831                           	opt stack 0
  4832  002C18                     _PWM_DutyCycle1:
  4833                           	opt stack 23
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;incstack = 0
  4837                           ;PWM_DutyCycle1@percentageDuty stored from wreg
  4838  002C18  0100               	movlb	0	; () banked
  4839  002C1A  6F9F               	movwf	PWM_DutyCycle1@percentageDuty& (0+255),b
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
  4843  002C1C  0E00               	movlw	0
  4844  002C1E  0100               	movlb	0	; () banked
  4845  002C20  6FA1               	movwf	(PWM_DutyCycle1@DC+1)& (0+255),b
  4846  002C22  0E00               	movlw	0
  4847  002C24  0100               	movlb	0	; () banked
  4848  002C26  6FA0               	movwf	PWM_DutyCycle1@DC& (0+255),b
  4849  002C28  0E00               	movlw	0
  4850  002C2A  0100               	movlb	0	; () banked
  4851  002C2C  6F9E               	movwf	(PWM_DutyCycle1@DutyCycle+1)& (0+255),b
  4852  002C2E  0E00               	movlw	0
  4853  002C30  0100               	movlb	0	; () banked
  4854  002C32  6F9D               	movwf	PWM_DutyCycle1@DutyCycle& (0+255),b
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
  4858  002C34  0EAE               	movlw	174
  4859  002C36  0100               	movlb	0	; () banked
  4860  002C38  6F77               	movwf	___ftmul@f2& (0+255),b
  4861  002C3A  0E23               	movlw	35
  4862  002C3C  0100               	movlb	0	; () banked
  4863  002C3E  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  4864  002C40  0E41               	movlw	65
  4865  002C42  0100               	movlb	0	; () banked
  4866  002C44  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  4867  002C46  0100               	movlb	0	; () banked
  4868  002C48  519F               	movf	PWM_DutyCycle1@percentageDuty& (0+255),w,b
  4869  002C4A  EC8F  F019         	call	___lbtoft
  4870  002C4E  C068  F074         	movff	?___lbtoft,___ftmul@f1
  4871  002C52  C069  F075         	movff	?___lbtoft+1,___ftmul@f1+1
  4872  002C56  C06A  F076         	movff	?___lbtoft+2,___ftmul@f1+2
  4873  002C5A  ECD0  F00C         	call	___ftmul	;wreg free
  4874  002C5E  C074  F08A         	movff	?___ftmul,___fttol@f1
  4875  002C62  C075  F08B         	movff	?___ftmul+1,___fttol@f1+1
  4876  002C66  C076  F08C         	movff	?___ftmul+2,___fttol@f1+2
  4877  002C6A  EC30  F00E         	call	___fttol	;wreg free
  4878  002C6E  C08A  F099         	movff	?___fttol,??_PWM_DutyCycle1
  4879  002C72  C08B  F09A         	movff	?___fttol+1,??_PWM_DutyCycle1+1
  4880  002C76  C08C  F09B         	movff	?___fttol+2,??_PWM_DutyCycle1+2
  4881  002C7A  C08D  F09C         	movff	?___fttol+3,??_PWM_DutyCycle1+3
  4882  002C7E  C099  F0A0         	movff	??_PWM_DutyCycle1,PWM_DutyCycle1@DC
  4883  002C82  C09A  F0A1         	movff	??_PWM_DutyCycle1+1,PWM_DutyCycle1@DC+1
  4884                           
  4885                           ;pwm.c: 38: SetDCPWM1(DC);
  4886  002C86  C0A0  F060         	movff	PWM_DutyCycle1@DC,SetDCPWM1@dutycycle
  4887  002C8A  C0A1  F061         	movff	PWM_DutyCycle1@DC+1,SetDCPWM1@dutycycle+1
  4888  002C8E  EC18  F018         	call	_SetDCPWM1	;wreg free
  4889                           
  4890                           ;pwm.c: 39: return;
  4891  002C92  0012               	return	
  4892  002C94                     __end_of_PWM_DutyCycle1:
  4893                           	opt stack 0
  4894                           tblptru	equ	0xFF8
  4895                           tblptrh	equ	0xFF7
  4896                           tblptrl	equ	0xFF6
  4897                           tablat	equ	0xFF5
  4898                           prodh	equ	0xFF4
  4899                           prodl	equ	0xFF3
  4900                           intcon	equ	0xFF2
  4901                           intcon2	equ	0xFF1
  4902                           intcon3	equ	0xFF0
  4903                           indf0	equ	0xFEF
  4904                           postinc0	equ	0xFEE
  4905                           fsr0h	equ	0xFEA
  4906                           fsr0l	equ	0xFE9
  4907                           wreg	equ	0xFE8
  4908                           postinc1	equ	0xFE6
  4909                           postdec1	equ	0xFE5
  4910                           fsr1l	equ	0xFE1
  4911                           indf2	equ	0xFDF
  4912                           postinc2	equ	0xFDE
  4913                           fsr2h	equ	0xFDA
  4914                           fsr2l	equ	0xFD9
  4915                           status	equ	0xFD8
  4916                           
  4917 ;; *************** function ___lbtoft *****************
  4918 ;; Defined at:
  4919 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  c               1    wreg     unsigned char 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  c               1   11[BANK0 ] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  3    8[BANK0 ] float 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4933 ;;      Params:         0       3       0       0       0       0       0       0       0
  4934 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4936 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4937 ;;Total ram usage:        4 bytes
  4938 ;; Hardware stack levels used:    1
  4939 ;; Hardware stack levels required when called:    5
  4940 ;; This function calls:
  4941 ;;		___ftpack
  4942 ;; This function is called by:
  4943 ;;		_PWM_DutyCycle1
  4944 ;;		_PWM_DutyCycle2
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text25
  4949  00331E                     __ptext25:
  4950                           	opt stack 0
  4951  00331E                     ___lbtoft:
  4952                           	opt stack 23
  4953                           
  4954                           ;incstack = 0
  4955                           ;___lbtoft@c stored from wreg
  4956  00331E  0100               	movlb	0	; () banked
  4957  003320  6F6B               	movwf	___lbtoft@c& (0+255),b
  4958                           
  4959                           ; BSR set to: 0
  4960  003322  0100               	movlb	0	; () banked
  4961  003324  516B               	movf	___lbtoft@c& (0+255),w,b
  4962  003326  0100               	movlb	0	; () banked
  4963  003328  6F60               	movwf	___ftpack@arg& (0+255),b
  4964  00332A  0100               	movlb	0	; () banked
  4965  00332C  6B61               	clrf	(___ftpack@arg+1)& (0+255),b
  4966  00332E  0100               	movlb	0	; () banked
  4967  003330  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  4968  003332  0E8E               	movlw	142
  4969  003334  0100               	movlb	0	; () banked
  4970  003336  6F63               	movwf	___ftpack@exp& (0+255),b
  4971  003338  0E00               	movlw	0
  4972  00333A  0100               	movlb	0	; () banked
  4973  00333C  6F64               	movwf	___ftpack@sign& (0+255),b
  4974  00333E  ECD5  F00E         	call	___ftpack	;wreg free
  4975  003342  C060  F068         	movff	?___ftpack,?___lbtoft
  4976  003346  C061  F069         	movff	?___ftpack+1,?___lbtoft+1
  4977  00334A  C062  F06A         	movff	?___ftpack+2,?___lbtoft+2
  4978  00334E  0012               	return	
  4979  003350                     __end_of___lbtoft:
  4980                           	opt stack 0
  4981                           tblptru	equ	0xFF8
  4982                           tblptrh	equ	0xFF7
  4983                           tblptrl	equ	0xFF6
  4984                           tablat	equ	0xFF5
  4985                           prodh	equ	0xFF4
  4986                           prodl	equ	0xFF3
  4987                           intcon	equ	0xFF2
  4988                           intcon2	equ	0xFF1
  4989                           intcon3	equ	0xFF0
  4990                           indf0	equ	0xFEF
  4991                           postinc0	equ	0xFEE
  4992                           fsr0h	equ	0xFEA
  4993                           fsr0l	equ	0xFE9
  4994                           wreg	equ	0xFE8
  4995                           postinc1	equ	0xFE6
  4996                           postdec1	equ	0xFE5
  4997                           fsr1l	equ	0xFE1
  4998                           indf2	equ	0xFDF
  4999                           postinc2	equ	0xFDE
  5000                           fsr2h	equ	0xFDA
  5001                           fsr2l	equ	0xFD9
  5002                           status	equ	0xFD8
  5003                           
  5004 ;; *************** function _SetDCPWM1 *****************
  5005 ;; Defined at:
  5006 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  5011 ;; Return value:  Size  Location     Type
  5012 ;;		None               void
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5020 ;;      Params:         0       2       0       0       0       0       0       0       0
  5021 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5022 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5023 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5024 ;;Total ram usage:        6 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    4
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_PWM_DutyCycle1
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text26
  5035  003030                     __ptext26:
  5036                           	opt stack 0
  5037  003030                     _SetDCPWM1:
  5038                           	opt stack 24
  5039                           
  5040                           ;incstack = 0
  5041  003030  0100               	movlb	0	; () banked
  5042  003032  C060  F062         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  5043  003036  0100               	movlb	0	; () banked
  5044  003038  C061  F063         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  5045  00303C  0E06               	movlw	6
  5046  00303E                     u4105:
  5047  00303E  90D8               	bcf	status,0,c
  5048  003040  0100               	movlb	0	; () banked
  5049  003042  3762               	rlcf	??_SetDCPWM1& (0+255),f,b
  5050  003044  3763               	rlcf	(??_SetDCPWM1+1)& (0+255),f,b
  5051  003046  2EE8               	decfsz	wreg,f,c
  5052  003048  D7FA               	goto	u4105
  5053  00304A  C062  F064         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  5054  00304E  C063  F065         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  5055                           
  5056                           ; BSR set to: 0
  5057  003052  C065  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  5058  003056  C064  F062         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  5059  00305A  0100               	movlb	0	; () banked
  5060  00305C  90D8               	bcf	status,0,c
  5061  00305E  3362               	rrcf	??_SetDCPWM1& (0+255),f,b
  5062  003060  0100               	movlb	0	; () banked
  5063  003062  90D8               	bcf	status,0,c
  5064  003064  3362               	rrcf	??_SetDCPWM1& (0+255),f,b
  5065  003066  0E30               	movlw	48
  5066  003068  0100               	movlb	0	; () banked
  5067  00306A  1762               	andwf	??_SetDCPWM1& (0+255),f,b
  5068  00306C  50BD               	movf	4029,w,c	;volatile
  5069  00306E  0BCF               	andlw	207
  5070  003070  0100               	movlb	0	; () banked
  5071  003072  1162               	iorwf	??_SetDCPWM1& (0+255),w,b
  5072  003074  6EBD               	movwf	4029,c	;volatile
  5073                           
  5074                           ; BSR set to: 0
  5075  003076  0012               	return	
  5076  003078                     __end_of_SetDCPWM1:
  5077                           	opt stack 0
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           prodh	equ	0xFF4
  5083                           prodl	equ	0xFF3
  5084                           intcon	equ	0xFF2
  5085                           intcon2	equ	0xFF1
  5086                           intcon3	equ	0xFF0
  5087                           indf0	equ	0xFEF
  5088                           postinc0	equ	0xFEE
  5089                           fsr0h	equ	0xFEA
  5090                           fsr0l	equ	0xFE9
  5091                           wreg	equ	0xFE8
  5092                           postinc1	equ	0xFE6
  5093                           postdec1	equ	0xFE5
  5094                           fsr1l	equ	0xFE1
  5095                           indf2	equ	0xFDF
  5096                           postinc2	equ	0xFDE
  5097                           fsr2h	equ	0xFDA
  5098                           fsr2l	equ	0xFD9
  5099                           status	equ	0xFD8
  5100                           
  5101 ;; *************** function _Lcd_Write_Integer *****************
  5102 ;; Defined at:
  5103 ;;		line 113 in file "lcd.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  a               2  111[BANK0 ] int 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  s              20  113[BANK0 ] unsigned char [20]
  5108 ;; Return value:  Size  Location     Type
  5109 ;;		None               void
  5110 ;; Registers used:
  5111 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5117 ;;      Params:         0       2       0       0       0       0       0       0       0
  5118 ;;      Locals:         0      20       0       0       0       0       0       0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5120 ;;      Totals:         0      22       0       0       0       0       0       0       0
  5121 ;;Total ram usage:       22 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    8
  5124 ;; This function calls:
  5125 ;;		_Lcd_Write_String
  5126 ;;		_sprintf
  5127 ;; This function is called by:
  5128 ;;		_Comando_Tablet
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text27
  5133  00318C                     __ptext27:
  5134                           	opt stack 0
  5135  00318C                     _Lcd_Write_Integer:
  5136                           	opt stack 21
  5137                           
  5138                           ;lcd.c: 114: unsigned char s[20];
  5139                           ;lcd.c: 115: sprintf(s, "Integer = %d", a);
  5140                           
  5141                           ; BSR set to: 0
  5142                           ;incstack = 0
  5143  00318C  0100               	movlb	0	; () banked
  5144  00318E  0E00               	movlw	high Lcd_Write_Integer@s
  5145  003190  0100               	movlb	0	; () banked
  5146  003192  6FA0               	movwf	(sprintf@sp+1)& (0+255),b
  5147  003194  0100               	movlb	0	; () banked
  5148  003196  0ED1               	movlw	low Lcd_Write_Integer@s
  5149  003198  0100               	movlb	0	; () banked
  5150  00319A  6F9F               	movwf	sprintf@sp& (0+255),b
  5151  00319C  0E7F               	movlw	high STR_18
  5152  00319E  0100               	movlb	0	; () banked
  5153  0031A0  6FA2               	movwf	(sprintf@f+1)& (0+255),b
  5154  0031A2  0EAF               	movlw	low STR_18
  5155  0031A4  0100               	movlb	0	; () banked
  5156  0031A6  6FA1               	movwf	sprintf@f& (0+255),b
  5157  0031A8  C0CF  F0A3         	movff	Lcd_Write_Integer@a,?_sprintf+4
  5158  0031AC  C0D0  F0A4         	movff	Lcd_Write_Integer@a+1,?_sprintf+5
  5159  0031B0  EC0E  F000         	call	_sprintf	;wreg free
  5160                           
  5161                           ;lcd.c: 117: Lcd_Write_String(s);
  5162  0031B4  0100               	movlb	0	; () banked
  5163  0031B6  0E00               	movlw	high Lcd_Write_Integer@s
  5164  0031B8  0100               	movlb	0	; () banked
  5165  0031BA  6F65               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  5166  0031BC  0100               	movlb	0	; () banked
  5167  0031BE  0ED1               	movlw	low Lcd_Write_Integer@s
  5168  0031C0  0100               	movlb	0	; () banked
  5169  0031C2  6F64               	movwf	Lcd_Write_String@a& (0+255),b
  5170  0031C4  EC7C  F014         	call	_Lcd_Write_String	;wreg free
  5171  0031C8  0012               	return	
  5172  0031CA                     __end_of_Lcd_Write_Integer:
  5173                           	opt stack 0
  5174                           tblptru	equ	0xFF8
  5175                           tblptrh	equ	0xFF7
  5176                           tblptrl	equ	0xFF6
  5177                           tablat	equ	0xFF5
  5178                           prodh	equ	0xFF4
  5179                           prodl	equ	0xFF3
  5180                           intcon	equ	0xFF2
  5181                           intcon2	equ	0xFF1
  5182                           intcon3	equ	0xFF0
  5183                           indf0	equ	0xFEF
  5184                           postinc0	equ	0xFEE
  5185                           fsr0h	equ	0xFEA
  5186                           fsr0l	equ	0xFE9
  5187                           wreg	equ	0xFE8
  5188                           postinc1	equ	0xFE6
  5189                           postdec1	equ	0xFE5
  5190                           fsr1l	equ	0xFE1
  5191                           indf2	equ	0xFDF
  5192                           postinc2	equ	0xFDE
  5193                           fsr2h	equ	0xFDA
  5194                           fsr2l	equ	0xFD9
  5195                           status	equ	0xFD8
  5196                           
  5197 ;; *************** function _sprintf *****************
  5198 ;; Defined at:
  5199 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\doprnt.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;  sp              2   63[BANK0 ] PTR unsigned char 
  5202 ;;		 -> Lcd_Write_Integer@s(20), Lcd_Write_Float@s(20), putcBluetoothInt@s(20), 
  5203 ;;  f               2   65[BANK0 ] PTR const unsigned char 
  5204 ;;		 -> STR_18(13), STR_17(11), STR_5(3), 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  vd              4   83[BANK0 ] unsigned long 
  5207 ;;  vd              4   87[BANK0 ] unsigned long 
  5208 ;;  _val            5  100[BANK0 ] struct .
  5209 ;;  fval            3  107[BANK0 ] struct .
  5210 ;;  integ           3   95[BANK0 ] struct .
  5211 ;;  ival            3    0        struct .
  5212 ;;  exp             2  105[BANK0 ] int 
  5213 ;;  prec            2   98[BANK0 ] int 
  5214 ;;  flag            2   93[BANK0 ] unsigned short 
  5215 ;;  ap              2   91[BANK0 ] PTR void [1]
  5216 ;;		 -> ?_sprintf(2), 
  5217 ;;  width           2    0        int 
  5218 ;;  c               1  110[BANK0 ] char 
  5219 ;;  d               1    0        unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  2   63[BANK0 ] int 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5229 ;;      Params:         0       7       0       0       0       0       0       0       0
  5230 ;;      Locals:         0      35       0       0       0       0       0       0       0
  5231 ;;      Temps:          0       6       0       0       0       0       0       0       0
  5232 ;;      Totals:         0      48       0       0       0       0       0       0       0
  5233 ;;Total ram usage:       48 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    7
  5236 ;; This function calls:
  5237 ;;		___awdiv
  5238 ;;		___ftadd
  5239 ;;		___ftge
  5240 ;;		___ftmul
  5241 ;;		___ftneg
  5242 ;;		___ftsub
  5243 ;;		___fttol
  5244 ;;		___lldiv
  5245 ;;		___llmod
  5246 ;;		___lltoft
  5247 ;;		___wmul
  5248 ;;		__div_to_l_
  5249 ;;		__tdiv_to_l_
  5250 ;;		_fround
  5251 ;;		_scale
  5252 ;; This function is called by:
  5253 ;;		_putcBluetoothInt
  5254 ;;		_Lcd_Write_Integer
  5255 ;;		_Lcd_Write_Float
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text28
  5260  00001C                     __ptext28:
  5261                           	opt stack 0
  5262  00001C                     _sprintf:
  5263                           	opt stack 21
  5264                           
  5265                           ;doprnt.c: 494: va_list ap;
  5266                           ;doprnt.c: 499: signed char c;
  5267                           ;doprnt.c: 501: int width;
  5268                           ;doprnt.c: 504: int prec;
  5269                           ;doprnt.c: 508: unsigned short flag;
  5270                           ;doprnt.c: 515: char d;
  5271                           ;doprnt.c: 516: double fval, integ;
  5272                           ;doprnt.c: 517: int exp;
  5273                           ;doprnt.c: 518: double ival;
  5274                           ;doprnt.c: 519: union {
  5275                           ;doprnt.c: 520: unsigned long _val;
  5276                           ;doprnt.c: 521: struct {
  5277                           ;doprnt.c: 522: const char * _cp;
  5278                           ;doprnt.c: 523: unsigned _len;
  5279                           ;doprnt.c: 524: } _str;
  5280                           ;doprnt.c: 525: } _val;
  5281                           ;doprnt.c: 542: *ap = __va_start();
  5282                           
  5283                           ;incstack = 0
  5284  00001C  0100               	movlb	0	; () banked
  5285  00001E  0E00               	movlw	high (?_sprintf+4)
  5286  000020  0100               	movlb	0	; () banked
  5287  000022  6FBC               	movwf	(sprintf@ap+1)& (0+255),b
  5288  000024  0100               	movlb	0	; () banked
  5289  000026  0EA3               	movlw	low (?_sprintf+4)
  5290  000028  0100               	movlb	0	; () banked
  5291  00002A  6FBB               	movwf	sprintf@ap& (0+255),b
  5292                           
  5293                           ;doprnt.c: 545: while(c = *f++) {
  5294  00002C  EFB4  F004         	goto	l3962
  5295  000030                     l3760:
  5296                           
  5297                           ; BSR set to: 0
  5298                           ;doprnt.c: 547: if(c != '%')
  5299  000030  0100               	movlb	0	; () banked
  5300  000032  51CE               	movf	sprintf@c& (0+255),w,b
  5301  000034  0A25               	xorlw	37
  5302  000036  B4D8               	btfsc	status,2,c
  5303  000038  D00C               	goto	l3766
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;doprnt.c: 549: {
  5307                           ;doprnt.c: 550: ((*sp++ = (c)));
  5308  00003A  C09F  FFD9         	movff	sprintf@sp,fsr2l
  5309  00003E  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  5310  000042  0100               	movlb	0	; () banked
  5311  000044  C0CE  FFDF         	movff	sprintf@c,indf2
  5312                           
  5313                           ; BSR set to: 0
  5314  000048  0100               	movlb	0	; () banked
  5315  00004A  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  5316  00004C  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  5317                           
  5318                           ;doprnt.c: 551: continue;
  5319  00004E  EFB4  F004         	goto	l3962
  5320  000052                     l3766:
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;doprnt.c: 552: }
  5324                           ;doprnt.c: 557: flag = 0;
  5325  000052  0E00               	movlw	0
  5326  000054  0100               	movlb	0	; () banked
  5327  000056  6FBE               	movwf	(sprintf@flag+1)& (0+255),b
  5328  000058  0E00               	movlw	0
  5329  00005A  0100               	movlb	0	; () banked
  5330  00005C  6FBD               	movwf	sprintf@flag& (0+255),b
  5331                           
  5332                           ;doprnt.c: 644: switch(c = *f++) {
  5333  00005E  D003               	goto	l3772
  5334  000060                     l3768:
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;doprnt.c: 672: flag |= 0x400;
  5338  000060  0100               	movlb	0	; () banked
  5339  000062  85BE               	bsf	(sprintf@flag+1)& (0+255),2,b
  5340                           
  5341                           ;doprnt.c: 673: break;
  5342  000064  D01E               	goto	l3774
  5343  000066                     l3772:
  5344                           
  5345                           ; BSR set to: 0
  5346  000066  0100               	movlb	0	; () banked
  5347  000068  C0A1  FFF6         	movff	sprintf@f,tblptrl
  5348  00006C  0100               	movlb	0	; () banked
  5349  00006E  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  5350  000072  0100               	movlb	0	; () banked
  5351  000074  4BA1               	infsnz	sprintf@f& (0+255),f,b
  5352  000076  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  5353  000078                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5354  000078  6AF8               	clrf	tblptru,c
  5355  00007A                     	endif
  5356  00007A                     	if	0	;tblptru may be non-zero
  5357  00007A                     	endif
  5358  00007A  0008               	tblrd		*
  5359  00007C  0100               	movlb	0	; () banked
  5360  00007E  CFF5 F0CE          	movff	tablat,sprintf@c
  5361  000082  0100               	movlb	0	; () banked
  5362  000084  51CE               	movf	sprintf@c& (0+255),w,b
  5363                           
  5364                           ; Switch size 1, requested type "space"
  5365                           ; Number of cases is 4, Range of values is 0 to 105
  5366                           ; switch strategies available:
  5367                           ; Name         Instructions Cycles
  5368                           ; simple_byte           13     7 (average)
  5369                           ;	Chosen strategy is simple_byte
  5370  000086  0A00               	xorlw	0	; case 0
  5371  000088  B4D8               	btfsc	status,2,c
  5372  00008A  EFC6  F004         	goto	l3964
  5373  00008E  0A64               	xorlw	100	; case 100
  5374  000090  B4D8               	btfsc	status,2,c
  5375  000092  D007               	goto	l3774
  5376  000094  0A02               	xorlw	2	; case 102
  5377  000096  B4D8               	btfsc	status,2,c
  5378  000098  D7E3               	goto	l3768
  5379  00009A  0A0F               	xorlw	15	; case 105
  5380  00009C  A4D8               	btfss	status,2,c
  5381  00009E  EFB4  F004         	goto	l3962
  5382  0000A2                     l3774:
  5383                           
  5384                           ; BSR set to: 0
  5385                           ;doprnt.c: 834: if(flag & (0x700)) {
  5386  0000A2  0E07               	movlw	7
  5387  0000A4  0100               	movlb	0	; () banked
  5388  0000A6  15BE               	andwf	(sprintf@flag+1)& (0+255),w,b
  5389  0000A8  B4D8               	btfsc	status,2,c
  5390  0000AA  D36D               	goto	l3922
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;doprnt.c: 838: prec = 6;
  5394  0000AC  0E00               	movlw	0
  5395  0000AE  0100               	movlb	0	; () banked
  5396  0000B0  6FC3               	movwf	(sprintf@prec+1)& (0+255),b
  5397  0000B2  0E06               	movlw	6
  5398  0000B4  0100               	movlb	0	; () banked
  5399  0000B6  6FC2               	movwf	sprintf@prec& (0+255),b
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5403  0000B8  C0BB  FFD9         	movff	sprintf@ap,fsr2l
  5404  0000BC  C0BC  FFDA         	movff	sprintf@ap+1,fsr2h
  5405  0000C0  0100               	movlb	0	; () banked
  5406  0000C2  CFDE F0CB          	movff	postinc2,sprintf@fval
  5407  0000C6  0100               	movlb	0	; () banked
  5408  0000C8  CFDE F0CC          	movff	postinc2,sprintf@fval+1
  5409  0000CC  0100               	movlb	0	; () banked
  5410  0000CE  CFDD F0CD          	movff	postdec2,sprintf@fval+2
  5411                           
  5412                           ; BSR set to: 0
  5413  0000D2  0E03               	movlw	3
  5414  0000D4  0100               	movlb	0	; () banked
  5415  0000D6  27BB               	addwf	sprintf@ap& (0+255),f,b
  5416  0000D8  0E00               	movlw	0
  5417  0000DA  0100               	movlb	0	; () banked
  5418  0000DC  23BC               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;doprnt.c: 840: if(fval < 0.0) {
  5422  0000DE  0100               	movlb	0	; () banked
  5423  0000E0  51CD               	movf	(sprintf@fval+2)& (0+255),w,b
  5424  0000E2  0A80               	xorlw	128
  5425  0000E4  0F80               	addlw	128
  5426  0000E6  E107               	bnz	u3785
  5427  0000E8  0E00               	movlw	0
  5428  0000EA  0100               	movlb	0	; () banked
  5429  0000EC  5DCC               	subwf	(sprintf@fval+1)& (0+255),w,b
  5430  0000EE  E103               	bnz	u3785
  5431  0000F0  0E00               	movlw	0
  5432  0000F2  0100               	movlb	0	; () banked
  5433  0000F4  5DCB               	subwf	sprintf@fval& (0+255),w,b
  5434  0000F6                     u3785:
  5435  0000F6  B0D8               	btfsc	status,0,c
  5436  0000F8  D011               	goto	l3788
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;doprnt.c: 841: fval = -fval;
  5440  0000FA  C0CB  F060         	movff	sprintf@fval,___ftneg@f1
  5441  0000FE  C0CC  F061         	movff	sprintf@fval+1,___ftneg@f1+1
  5442  000102  C0CD  F062         	movff	sprintf@fval+2,___ftneg@f1+2
  5443  000106  ECA8  F019         	call	___ftneg	;wreg free
  5444  00010A  C060  F0CB         	movff	?___ftneg,sprintf@fval
  5445  00010E  C061  F0CC         	movff	?___ftneg+1,sprintf@fval+1
  5446  000112  C062  F0CD         	movff	?___ftneg+2,sprintf@fval+2
  5447                           
  5448                           ;doprnt.c: 842: flag |= 0x03;
  5449  000116  0E03               	movlw	3
  5450  000118  0100               	movlb	0	; () banked
  5451  00011A  13BD               	iorwf	sprintf@flag& (0+255),f,b
  5452  00011C                     l3788:
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;doprnt.c: 843: }
  5456                           ;doprnt.c: 844: exp = 0;
  5457  00011C  0E00               	movlw	0
  5458  00011E  0100               	movlb	0	; () banked
  5459  000120  6FCA               	movwf	(sprintf@exp+1)& (0+255),b
  5460  000122  0E00               	movlw	0
  5461  000124  0100               	movlb	0	; () banked
  5462  000126  6FC9               	movwf	sprintf@exp& (0+255),b
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;doprnt.c: 845: if( fval!=0) {
  5466  000128  0E7F               	movlw	127
  5467  00012A  0100               	movlb	0	; () banked
  5468  00012C  15CD               	andwf	(sprintf@fval+2)& (0+255),w,b
  5469  00012E  0100               	movlb	0	; () banked
  5470  000130  11CC               	iorwf	(sprintf@fval+1)& (0+255),w,b
  5471  000132  0100               	movlb	0	; () banked
  5472  000134  11CB               	iorwf	sprintf@fval& (0+255),w,b
  5473  000136  B4D8               	btfsc	status,2,c
  5474  000138  D0AA               	goto	l3816
  5475                           
  5476                           ; BSR set to: 0
  5477                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  5478  00013A  0E82               	movlw	130
  5479  00013C  0100               	movlb	0	; () banked
  5480  00013E  6FA6               	movwf	??_sprintf& (0+255),b
  5481  000140  0EFF               	movlw	255
  5482  000142  6FA7               	movwf	(??_sprintf+1)& (0+255),b
  5483  000144  0100               	movlb	0	; () banked
  5484  000146  C0CB  F0A8         	movff	sprintf@fval,??_sprintf+2
  5485  00014A  0100               	movlb	0	; () banked
  5486  00014C  C0CC  F0A9         	movff	sprintf@fval+1,??_sprintf+3
  5487  000150  0100               	movlb	0	; () banked
  5488  000152  C0CD  F0AA         	movff	sprintf@fval+2,??_sprintf+4
  5489  000156  0100               	movlb	0	; () banked
  5490  000158  C0CE  F0AB         	movff	sprintf@fval+3,??_sprintf+5
  5491  00015C  0E10               	movlw	16
  5492  00015E  D006               	goto	u3800
  5493  000160                     u3805:
  5494  000160  0100               	movlb	0	; () banked
  5495  000162  90D8               	bcf	status,0,c
  5496  000164  33AB               	rrcf	(??_sprintf+5)& (0+255),f,b
  5497  000166  33AA               	rrcf	(??_sprintf+4)& (0+255),f,b
  5498  000168  33A9               	rrcf	(??_sprintf+3)& (0+255),f,b
  5499  00016A  33A8               	rrcf	(??_sprintf+2)& (0+255),f,b
  5500  00016C                     u3800:
  5501  00016C  2EE8               	decfsz	wreg,f,c
  5502  00016E  D7F8               	goto	u3805
  5503  000170  0100               	movlb	0	; () banked
  5504  000172  51A8               	movf	(??_sprintf+2)& (0+255),w,b
  5505  000174  0100               	movlb	0	; () banked
  5506  000176  25A6               	addwf	??_sprintf& (0+255),w,b
  5507  000178  0100               	movlb	0	; () banked
  5508  00017A  6FC9               	movwf	sprintf@exp& (0+255),b
  5509  00017C  0E00               	movlw	0
  5510  00017E  0100               	movlb	0	; () banked
  5511  000180  21A7               	addwfc	(??_sprintf+1)& (0+255),w,b
  5512  000182  0100               	movlb	0	; () banked
  5513  000184  6FCA               	movwf	(sprintf@exp+1)& (0+255),b
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;doprnt.c: 847: exp--;
  5517  000186  0100               	movlb	0	; () banked
  5518  000188  07C9               	decf	sprintf@exp& (0+255),f,b
  5519  00018A  A0D8               	btfss	status,0,c
  5520  00018C  07CA               	decf	(sprintf@exp+1)& (0+255),f,b
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;doprnt.c: 848: exp *= 3;
  5524  00018E  C0C9  F06E         	movff	sprintf@exp,___wmul@multiplier
  5525  000192  C0CA  F06F         	movff	sprintf@exp+1,___wmul@multiplier+1
  5526  000196  0E00               	movlw	0
  5527  000198  0100               	movlb	0	; () banked
  5528  00019A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5529  00019C  0E03               	movlw	3
  5530  00019E  0100               	movlb	0	; () banked
  5531  0001A0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  5532  0001A2  EC59  F019         	call	___wmul	;wreg free
  5533  0001A6  0100               	movlb	0	; () banked
  5534  0001A8  C06E  F0C9         	movff	?___wmul,sprintf@exp
  5535  0001AC  0100               	movlb	0	; () banked
  5536  0001AE  C06F  F0CA         	movff	?___wmul+1,sprintf@exp+1
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;doprnt.c: 849: exp /= 10;
  5540  0001B2  C0C9  F066         	movff	sprintf@exp,___awdiv@dividend
  5541  0001B6  C0CA  F067         	movff	sprintf@exp+1,___awdiv@dividend+1
  5542  0001BA  0E00               	movlw	0
  5543  0001BC  0100               	movlb	0	; () banked
  5544  0001BE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  5545  0001C0  0E0A               	movlw	10
  5546  0001C2  0100               	movlb	0	; () banked
  5547  0001C4  6F68               	movwf	___awdiv@divisor& (0+255),b
  5548  0001C6  EC44  F010         	call	___awdiv	;wreg free
  5549  0001CA  0100               	movlb	0	; () banked
  5550  0001CC  C066  F0C9         	movff	?___awdiv,sprintf@exp
  5551  0001D0  0100               	movlb	0	; () banked
  5552  0001D2  C067  F0CA         	movff	?___awdiv+1,sprintf@exp+1
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;doprnt.c: 850: if(exp < 0)
  5556  0001D6  0100               	movlb	0	; () banked
  5557  0001D8  51CA               	movf	(sprintf@exp+1)& (0+255),w,b
  5558  0001DA  0A80               	xorlw	128
  5559  0001DC  6EF3               	movwf	prodl,c
  5560  0001DE  0E80               	movlw	128
  5561  0001E0  5CF3               	subwf	prodl,w,c
  5562  0001E2  0E00               	movlw	0
  5563  0001E4  B4D8               	btfsc	status,2,c
  5564  0001E6  5DC9               	subwf	sprintf@exp& (0+255),w,b
  5565  0001E8  B0D8               	btfsc	status,0,c
  5566  0001EA  D004               	goto	l3804
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;doprnt.c: 851: exp--;
  5570  0001EC  0100               	movlb	0	; () banked
  5571  0001EE  07C9               	decf	sprintf@exp& (0+255),f,b
  5572  0001F0  A0D8               	btfss	status,0,c
  5573  0001F2  07CA               	decf	(sprintf@exp+1)& (0+255),f,b
  5574  0001F4                     l3804:
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;doprnt.c: 855: integ = scale(-exp);
  5578  0001F4  0100               	movlb	0	; () banked
  5579  0001F6  51C9               	movf	sprintf@exp& (0+255),w,b
  5580  0001F8  0800               	sublw	0
  5581  0001FA  ECCD  F004         	call	_scale
  5582  0001FE  C083  F0BF         	movff	?_scale,sprintf@integ
  5583  000202  C084  F0C0         	movff	?_scale+1,sprintf@integ+1
  5584  000206  C085  F0C1         	movff	?_scale+2,sprintf@integ+2
  5585                           
  5586                           ;doprnt.c: 856: integ *= fval;
  5587  00020A  C0BF  F074         	movff	sprintf@integ,___ftmul@f1
  5588  00020E  C0C0  F075         	movff	sprintf@integ+1,___ftmul@f1+1
  5589  000212  C0C1  F076         	movff	sprintf@integ+2,___ftmul@f1+2
  5590  000216  C0CB  F077         	movff	sprintf@fval,___ftmul@f2
  5591  00021A  C0CC  F078         	movff	sprintf@fval+1,___ftmul@f2+1
  5592  00021E  C0CD  F079         	movff	sprintf@fval+2,___ftmul@f2+2
  5593  000222  ECD0  F00C         	call	___ftmul	;wreg free
  5594  000226  C074  F0BF         	movff	?___ftmul,sprintf@integ
  5595  00022A  C075  F0C0         	movff	?___ftmul+1,sprintf@integ+1
  5596  00022E  C076  F0C1         	movff	?___ftmul+2,sprintf@integ+2
  5597                           
  5598                           ;doprnt.c: 857: if(integ < 1.0)
  5599  000232  C0BF  F060         	movff	sprintf@integ,___ftge@ff1
  5600  000236  C0C0  F061         	movff	sprintf@integ+1,___ftge@ff1+1
  5601  00023A  C0C1  F062         	movff	sprintf@integ+2,___ftge@ff1+2
  5602  00023E  0E00               	movlw	0
  5603  000240  0100               	movlb	0	; () banked
  5604  000242  6F63               	movwf	___ftge@ff2& (0+255),b
  5605  000244  0E80               	movlw	128
  5606  000246  0100               	movlb	0	; () banked
  5607  000248  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  5608  00024A  0E3F               	movlw	63
  5609  00024C  0100               	movlb	0	; () banked
  5610  00024E  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  5611  000250  EC1F  F011         	call	___ftge	;wreg free
  5612  000254  B0D8               	btfsc	status,0,c
  5613  000256  D005               	goto	l3812
  5614                           
  5615                           ;doprnt.c: 858: exp--;
  5616  000258  0100               	movlb	0	; () banked
  5617  00025A  07C9               	decf	sprintf@exp& (0+255),f,b
  5618  00025C  A0D8               	btfss	status,0,c
  5619  00025E  07CA               	decf	(sprintf@exp+1)& (0+255),f,b
  5620  000260  D016               	goto	l3816
  5621  000262                     l3812:
  5622                           
  5623                           ;doprnt.c: 859: else if(integ >= 10.0)
  5624  000262  C0BF  F060         	movff	sprintf@integ,___ftge@ff1
  5625  000266  C0C0  F061         	movff	sprintf@integ+1,___ftge@ff1+1
  5626  00026A  C0C1  F062         	movff	sprintf@integ+2,___ftge@ff1+2
  5627  00026E  0E00               	movlw	0
  5628  000270  0100               	movlb	0	; () banked
  5629  000272  6F63               	movwf	___ftge@ff2& (0+255),b
  5630  000274  0E20               	movlw	32
  5631  000276  0100               	movlb	0	; () banked
  5632  000278  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  5633  00027A  0E41               	movlw	65
  5634  00027C  0100               	movlb	0	; () banked
  5635  00027E  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  5636  000280  EC1F  F011         	call	___ftge	;wreg free
  5637  000284  A0D8               	btfss	status,0,c
  5638  000286  D003               	goto	l3816
  5639                           
  5640                           ;doprnt.c: 860: exp++;
  5641  000288  0100               	movlb	0	; () banked
  5642  00028A  4BC9               	infsnz	sprintf@exp& (0+255),f,b
  5643  00028C  2BCA               	incf	(sprintf@exp+1)& (0+255),f,b
  5644  00028E                     l3816:
  5645                           
  5646                           ;doprnt.c: 861: }
  5647                           ;doprnt.c: 1121: if(prec <= 12)
  5648  00028E  0100               	movlb	0	; () banked
  5649  000290  51C3               	movf	(sprintf@prec+1)& (0+255),w,b
  5650  000292  0A80               	xorlw	128
  5651  000294  6EF3               	movwf	prodl,c
  5652  000296  0E80               	movlw	128
  5653  000298  5CF3               	subwf	prodl,w,c
  5654  00029A  0E0D               	movlw	13
  5655  00029C  B4D8               	btfsc	status,2,c
  5656  00029E  5DC2               	subwf	sprintf@prec& (0+255),w,b
  5657  0002A0  B0D8               	btfsc	status,0,c
  5658  0002A2  D018               	goto	l3820
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;doprnt.c: 1122: fval += fround(prec);
  5662  0002A4  C0CB  F08D         	movff	sprintf@fval,___ftadd@f1
  5663  0002A8  C0CC  F08E         	movff	sprintf@fval+1,___ftadd@f1+1
  5664  0002AC  C0CD  F08F         	movff	sprintf@fval+2,___ftadd@f1+2
  5665  0002B0  0100               	movlb	0	; () banked
  5666  0002B2  51C2               	movf	sprintf@prec& (0+255),w,b
  5667  0002B4  EC8B  F007         	call	_fround
  5668  0002B8  C083  F090         	movff	?_fround,___ftadd@f2
  5669  0002BC  C084  F091         	movff	?_fround+1,___ftadd@f2+1
  5670  0002C0  C085  F092         	movff	?_fround+2,___ftadd@f2+2
  5671  0002C4  EC15  F009         	call	___ftadd	;wreg free
  5672  0002C8  C08D  F0CB         	movff	?___ftadd,sprintf@fval
  5673  0002CC  C08E  F0CC         	movff	?___ftadd+1,sprintf@fval+1
  5674  0002D0  C08F  F0CD         	movff	?___ftadd+2,sprintf@fval+2
  5675  0002D4                     l3820:
  5676                           
  5677                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  5678  0002D4  0100               	movlb	0	; () banked
  5679  0002D6  51CA               	movf	(sprintf@exp+1)& (0+255),w,b
  5680  0002D8  0A80               	xorlw	128
  5681  0002DA  6EF3               	movwf	prodl,c
  5682  0002DC  0E80               	movlw	128
  5683  0002DE  5CF3               	subwf	prodl,w,c
  5684  0002E0  0E0A               	movlw	10
  5685  0002E2  B4D8               	btfsc	status,2,c
  5686  0002E4  5DC9               	subwf	sprintf@exp& (0+255),w,b
  5687  0002E6  B0D8               	btfsc	status,0,c
  5688  0002E8  D029               	goto	l3828
  5689                           
  5690                           ; BSR set to: 0
  5691  0002EA  0E7F               	movlw	127
  5692  0002EC  0100               	movlb	0	; () banked
  5693  0002EE  15CD               	andwf	(sprintf@fval+2)& (0+255),w,b
  5694  0002F0  0100               	movlb	0	; () banked
  5695  0002F2  11CC               	iorwf	(sprintf@fval+1)& (0+255),w,b
  5696  0002F4  0100               	movlb	0	; () banked
  5697  0002F6  11CB               	iorwf	sprintf@fval& (0+255),w,b
  5698  0002F8  B4D8               	btfsc	status,2,c
  5699  0002FA  D06F               	goto	l3844
  5700                           
  5701                           ; BSR set to: 0
  5702  0002FC  C0CB  F08A         	movff	sprintf@fval,___fttol@f1
  5703  000300  C0CC  F08B         	movff	sprintf@fval+1,___fttol@f1+1
  5704  000304  C0CD  F08C         	movff	sprintf@fval+2,___fttol@f1+2
  5705  000308  EC30  F00E         	call	___fttol	;wreg free
  5706  00030C  C08A  F0A6         	movff	?___fttol,??_sprintf
  5707  000310  C08B  F0A7         	movff	?___fttol+1,??_sprintf+1
  5708  000314  C08C  F0A8         	movff	?___fttol+2,??_sprintf+2
  5709  000318  C08D  F0A9         	movff	?___fttol+3,??_sprintf+3
  5710  00031C  0100               	movlb	0	; () banked
  5711  00031E  51A9               	movf	(??_sprintf+3)& (0+255),w,b
  5712  000320  11A6               	iorwf	??_sprintf& (0+255),w,b
  5713  000322  11A7               	iorwf	(??_sprintf+1)& (0+255),w,b
  5714  000324  11A8               	iorwf	(??_sprintf+2)& (0+255),w,b
  5715  000326  A4D8               	btfss	status,2,c
  5716  000328  D058               	goto	l3844
  5717                           
  5718                           ; BSR set to: 0
  5719  00032A  0100               	movlb	0	; () banked
  5720  00032C  51CA               	movf	(sprintf@exp+1)& (0+255),w,b
  5721  00032E  0A80               	xorlw	128
  5722  000330  0F80               	addlw	-128
  5723  000332  0E02               	movlw	2
  5724  000334  B4D8               	btfsc	status,2,c
  5725  000336  5DC9               	subwf	sprintf@exp& (0+255),w,b
  5726  000338  A0D8               	btfss	status,0,c
  5727  00033A  D04F               	goto	l3844
  5728  00033C                     l3828:
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;doprnt.c: 1129: if(integ < 4.294967296){
  5732  00033C  C0BF  F060         	movff	sprintf@integ,___ftge@ff1
  5733  000340  C0C0  F061         	movff	sprintf@integ+1,___ftge@ff1+1
  5734  000344  C0C1  F062         	movff	sprintf@integ+2,___ftge@ff1+2
  5735  000348  0E70               	movlw	112
  5736  00034A  0100               	movlb	0	; () banked
  5737  00034C  6F63               	movwf	___ftge@ff2& (0+255),b
  5738  00034E  0E89               	movlw	137
  5739  000350  0100               	movlb	0	; () banked
  5740  000352  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  5741  000354  0E40               	movlw	64
  5742  000356  0100               	movlb	0	; () banked
  5743  000358  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  5744  00035A  EC1F  F011         	call	___ftge	;wreg free
  5745  00035E  B0D8               	btfsc	status,0,c
  5746  000360  D003               	goto	l3832
  5747                           
  5748                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5749  000362  0100               	movlb	0	; () banked
  5750  000364  0EF7               	movlw	247
  5751  000366  D002               	goto	L8
  5752  000368                     l3832:
  5753                           
  5754                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5755  000368  0100               	movlb	0	; () banked
  5756  00036A  0EF8               	movlw	248
  5757  00036C                     L8:
  5758  00036C  0100               	movlb	0	; () banked
  5759  00036E  27C9               	addwf	sprintf@exp& (0+255),f,b
  5760  000370  0EFF               	movlw	255
  5761  000372  0100               	movlb	0	; () banked
  5762  000374  23CA               	addwfc	(sprintf@exp+1)& (0+255),f,b
  5763                           
  5764                           ; BSR set to: 0
  5765                           ;doprnt.c: 1133: }
  5766                           ;doprnt.c: 1134: integ = scale(exp);
  5767                           
  5768                           ; BSR set to: 0
  5769  000376  0100               	movlb	0	; () banked
  5770  000378  51C9               	movf	sprintf@exp& (0+255),w,b
  5771  00037A  ECCD  F004         	call	_scale
  5772  00037E  C083  F0BF         	movff	?_scale,sprintf@integ
  5773  000382  C084  F0C0         	movff	?_scale+1,sprintf@integ+1
  5774  000386  C085  F0C1         	movff	?_scale+2,sprintf@integ+2
  5775                           
  5776                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  5777  00038A  C0CB  F060         	movff	sprintf@fval,__tdiv_to_l_@f1
  5778  00038E  C0CC  F061         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  5779  000392  C0CD  F062         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  5780  000396  C0BF  F063         	movff	sprintf@integ,__tdiv_to_l_@f2
  5781  00039A  C0C0  F064         	movff	sprintf@integ+1,__tdiv_to_l_@f2+1
  5782  00039E  C0C1  F065         	movff	sprintf@integ+2,__tdiv_to_l_@f2+2
  5783  0003A2  EC44  F00B         	call	__tdiv_to_l_	;wreg free
  5784  0003A6  C060  F0AF         	movff	?__tdiv_to_l_,_sprintf$1737
  5785  0003AA  C061  F0B0         	movff	?__tdiv_to_l_+1,_sprintf$1737+1
  5786  0003AE  C062  F0B1         	movff	?__tdiv_to_l_+2,_sprintf$1737+2
  5787  0003B2  C063  F0B2         	movff	?__tdiv_to_l_+3,_sprintf$1737+3
  5788  0003B6  C0AF  F0C4         	movff	_sprintf$1737,sprintf@_val
  5789  0003BA  C0B0  F0C5         	movff	_sprintf$1737+1,sprintf@_val+1
  5790  0003BE  C0B1  F0C6         	movff	_sprintf$1737+2,sprintf@_val+2
  5791  0003C2  C0B2  F0C7         	movff	_sprintf$1737+3,sprintf@_val+3
  5792                           
  5793                           ;doprnt.c: 1138: fval = 0.0;
  5794  0003C6  0E00               	movlw	0
  5795  0003C8  0100               	movlb	0	; () banked
  5796  0003CA  6FCB               	movwf	sprintf@fval& (0+255),b
  5797  0003CC  0E00               	movlw	0
  5798  0003CE  0100               	movlb	0	; () banked
  5799  0003D0  6FCC               	movwf	(sprintf@fval+1)& (0+255),b
  5800  0003D2  0E00               	movlw	0
  5801  0003D4  0100               	movlb	0	; () banked
  5802  0003D6  6FCD               	movwf	(sprintf@fval+2)& (0+255),b
  5803                           
  5804                           ;doprnt.c: 1139: } else {
  5805  0003D8  D034               	goto	l3848
  5806  0003DA                     l3844:
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  5810  0003DA  C0CB  F08A         	movff	sprintf@fval,___fttol@f1
  5811  0003DE  C0CC  F08B         	movff	sprintf@fval+1,___fttol@f1+1
  5812  0003E2  C0CD  F08C         	movff	sprintf@fval+2,___fttol@f1+2
  5813  0003E6  EC30  F00E         	call	___fttol	;wreg free
  5814  0003EA  C08A  F0C4         	movff	?___fttol,sprintf@_val
  5815  0003EE  C08B  F0C5         	movff	?___fttol+1,sprintf@_val+1
  5816  0003F2  C08C  F0C6         	movff	?___fttol+2,sprintf@_val+2
  5817  0003F6  C08D  F0C7         	movff	?___fttol+3,sprintf@_val+3
  5818                           
  5819                           ;doprnt.c: 1141: fval -= (double)_val._val;
  5820  0003FA  C0CB  F099         	movff	sprintf@fval,___ftsub@f1
  5821  0003FE  C0CC  F09A         	movff	sprintf@fval+1,___ftsub@f1+1
  5822  000402  C0CD  F09B         	movff	sprintf@fval+2,___ftsub@f1+2
  5823  000406  C0C4  F068         	movff	sprintf@_val,___lltoft@c
  5824  00040A  C0C5  F069         	movff	sprintf@_val+1,___lltoft@c+1
  5825  00040E  C0C6  F06A         	movff	sprintf@_val+2,___lltoft@c+2
  5826  000412  C0C7  F06B         	movff	sprintf@_val+3,___lltoft@c+3
  5827  000416  EC8F  F015         	call	___lltoft	;wreg free
  5828  00041A  C068  F09C         	movff	?___lltoft,___ftsub@f2
  5829  00041E  C069  F09D         	movff	?___lltoft+1,___ftsub@f2+1
  5830  000422  C06A  F09E         	movff	?___lltoft+2,___ftsub@f2+2
  5831  000426  ECE5  F018         	call	___ftsub	;wreg free
  5832  00042A  C099  F0CB         	movff	?___ftsub,sprintf@fval
  5833  00042E  C09A  F0CC         	movff	?___ftsub+1,sprintf@fval+1
  5834  000432  C09B  F0CD         	movff	?___ftsub+2,sprintf@fval+2
  5835                           
  5836                           ;doprnt.c: 1142: exp = 0;
  5837  000436  0E00               	movlw	0
  5838  000438  0100               	movlb	0	; () banked
  5839  00043A  6FCA               	movwf	(sprintf@exp+1)& (0+255),b
  5840  00043C  0E00               	movlw	0
  5841  00043E  0100               	movlb	0	; () banked
  5842  000440  6FC9               	movwf	sprintf@exp& (0+255),b
  5843  000442                     l3848:
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;doprnt.c: 1143: }
  5847                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  5848  000442  0E01               	movlw	1
  5849  000444  0100               	movlb	0	; () banked
  5850  000446  6FCE               	movwf	sprintf@c& (0+255),b
  5851  000448                     
  5852                           ; BSR set to: 0
  5853  000448  0100               	movlb	0	; () banked
  5854  00044A  51CE               	movf	sprintf@c& (0+255),w,b
  5855  00044C  0A0A               	xorlw	10
  5856  00044E  B4D8               	btfsc	status,2,c
  5857  000450  D021               	goto	l3862
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  5861                           
  5862                           ; BSR set to: 0
  5863                           
  5864                           ; BSR set to: 0
  5865  000452  0100               	movlb	0	; () banked
  5866  000454  51CE               	movf	sprintf@c& (0+255),w,b
  5867  000456  0D04               	mullw	4
  5868  000458  0E9D               	movlw	low _dpowers
  5869  00045A  24F3               	addwf	prodl,w,c
  5870  00045C  6EF6               	movwf	tblptrl,c
  5871  00045E  0E7E               	movlw	high _dpowers
  5872  000460  20F4               	addwfc	prodh,w,c
  5873  000462  6EF7               	movwf	tblptrh,c
  5874  000464                     	if	1	;There are 3 active tblptr bytes
  5875  000464  6AF8               	clrf	tblptru,c
  5876  000466  0E00               	movlw	low (__mediumconst shr (0+16))
  5877  000468  22F8               	addwfc	tblptru,f,c
  5878  00046A                     	endif
  5879  00046A  0009               	tblrd		*+
  5880  00046C  50F5               	movf	tablat,w,c
  5881  00046E  0100               	movlb	0	; () banked
  5882  000470  5DC4               	subwf	sprintf@_val& (0+255),w,b
  5883  000472  0009               	tblrd		*+
  5884  000474  50F5               	movf	tablat,w,c
  5885  000476  0100               	movlb	0	; () banked
  5886  000478  59C5               	subwfb	(sprintf@_val+1)& (0+255),w,b
  5887  00047A  0009               	tblrd		*+
  5888  00047C  50F5               	movf	tablat,w,c
  5889  00047E  0100               	movlb	0	; () banked
  5890  000480  59C6               	subwfb	(sprintf@_val+2)& (0+255),w,b
  5891  000482  0009               	tblrd		*+
  5892  000484  50F5               	movf	tablat,w,c
  5893  000486  0100               	movlb	0	; () banked
  5894  000488  59C7               	subwfb	(sprintf@_val+3)& (0+255),w,b
  5895  00048A  A0D8               	btfss	status,0,c
  5896  00048C  D003               	goto	l3862
  5897                           
  5898                           ; BSR set to: 0
  5899                           
  5900                           ; BSR set to: 0
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;doprnt.c: 1147: break;
  5904  00048E  0100               	movlb	0	; () banked
  5905  000490  2BCE               	incf	sprintf@c& (0+255),f,b
  5906  000492  D7DA               	goto	L9
  5907  000494                     l3862:
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;doprnt.c: 1184: {
  5911                           ;doprnt.c: 1197: if(flag & 0x03)
  5912  000494  0E03               	movlw	3
  5913  000496  0100               	movlb	0	; () banked
  5914  000498  15BD               	andwf	sprintf@flag& (0+255),w,b
  5915  00049A  0100               	movlb	0	; () banked
  5916  00049C  6FA6               	movwf	??_sprintf& (0+255),b
  5917  00049E  0E00               	movlw	0
  5918  0004A0  0100               	movlb	0	; () banked
  5919  0004A2  15BE               	andwf	(sprintf@flag+1)& (0+255),w,b
  5920  0004A4  0100               	movlb	0	; () banked
  5921  0004A6  6FA7               	movwf	(??_sprintf+1)& (0+255),b
  5922  0004A8  0100               	movlb	0	; () banked
  5923  0004AA  51A7               	movf	(??_sprintf+1)& (0+255),w,b
  5924  0004AC  11A6               	iorwf	??_sprintf& (0+255),w,b
  5925  0004AE  B4D8               	btfsc	status,2,c
  5926  0004B0  D05D               	goto	l3876
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;doprnt.c: 1199: ((*sp++ = ('-')));
  5930  0004B2  C09F  FFD9         	movff	sprintf@sp,fsr2l
  5931  0004B6  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  5932  0004BA  0E2D               	movlw	45
  5933  0004BC  D053               	goto	L10
  5934  0004BE                     l3868:
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;doprnt.c: 1209: {
  5938                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  5939  0004BE  C0C4  F060         	movff	sprintf@_val,___lldiv@dividend
  5940  0004C2  C0C5  F061         	movff	sprintf@_val+1,___lldiv@dividend+1
  5941  0004C6  C0C6  F062         	movff	sprintf@_val+2,___lldiv@dividend+2
  5942  0004CA  C0C7  F063         	movff	sprintf@_val+3,___lldiv@dividend+3
  5943  0004CE  0100               	movlb	0	; () banked
  5944  0004D0  51CE               	movf	sprintf@c& (0+255),w,b
  5945  0004D2  0D04               	mullw	4
  5946  0004D4  0E9D               	movlw	low _dpowers
  5947  0004D6  24F3               	addwf	prodl,w,c
  5948  0004D8  6EF6               	movwf	tblptrl,c
  5949  0004DA  0E7E               	movlw	high _dpowers
  5950  0004DC  20F4               	addwfc	prodh,w,c
  5951  0004DE  6EF7               	movwf	tblptrh,c
  5952  0004E0                     	if	1	;There are 3 active tblptr bytes
  5953  0004E0  6AF8               	clrf	tblptru,c
  5954  0004E2  0E00               	movlw	low (__mediumconst shr (0+16))
  5955  0004E4  22F8               	addwfc	tblptru,f,c
  5956  0004E6                     	endif
  5957  0004E6  0009               	tblrd		*+
  5958  0004E8  0100               	movlb	0	; () banked
  5959  0004EA  CFF5 F064          	movff	tablat,___lldiv@divisor
  5960  0004EE  0009               	tblrd		*+
  5961  0004F0  0100               	movlb	0	; () banked
  5962  0004F2  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  5963  0004F6  0009               	tblrd		*+
  5964  0004F8  0100               	movlb	0	; () banked
  5965  0004FA  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  5966  0004FE  000A               	tblrd		*-
  5967  000500  0100               	movlb	0	; () banked
  5968  000502  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  5969  000506  ECB5  F010         	call	___lldiv	;wreg free
  5970  00050A  C060  F0B3         	movff	?___lldiv,sprintf@vd
  5971  00050E  C061  F0B4         	movff	?___lldiv+1,sprintf@vd+1
  5972  000512  C062  F0B5         	movff	?___lldiv+2,sprintf@vd+2
  5973  000516  C063  F0B6         	movff	?___lldiv+3,sprintf@vd+3
  5974                           
  5975                           ;doprnt.c: 1211: vd %= 10;
  5976  00051A  C0B3  F06D         	movff	sprintf@vd,___llmod@dividend
  5977  00051E  C0B4  F06E         	movff	sprintf@vd+1,___llmod@dividend+1
  5978  000522  C0B5  F06F         	movff	sprintf@vd+2,___llmod@dividend+2
  5979  000526  C0B6  F070         	movff	sprintf@vd+3,___llmod@dividend+3
  5980  00052A  0E0A               	movlw	10
  5981  00052C  0100               	movlb	0	; () banked
  5982  00052E  6F71               	movwf	___llmod@divisor& (0+255),b
  5983  000530  0E00               	movlw	0
  5984  000532  0100               	movlb	0	; () banked
  5985  000534  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  5986  000536  0E00               	movlw	0
  5987  000538  0100               	movlb	0	; () banked
  5988  00053A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  5989  00053C  0E00               	movlw	0
  5990  00053E  0100               	movlb	0	; () banked
  5991  000540  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  5992  000542  EC2A  F014         	call	___llmod	;wreg free
  5993  000546  C06D  F0B3         	movff	?___llmod,sprintf@vd
  5994  00054A  C06E  F0B4         	movff	?___llmod+1,sprintf@vd+1
  5995  00054E  C06F  F0B5         	movff	?___llmod+2,sprintf@vd+2
  5996  000552  C070  F0B6         	movff	?___llmod+3,sprintf@vd+3
  5997                           
  5998                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
  5999  000556  0100               	movlb	0	; () banked
  6000  000558  51B3               	movf	sprintf@vd& (0+255),w,b
  6001  00055A  0F30               	addlw	48
  6002  00055C  C09F  FFD9         	movff	sprintf@sp,fsr2l
  6003  000560  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  6004  000564                     L10:
  6005  000564  6EDF               	movwf	indf2,c
  6006                           
  6007                           ; BSR set to: 0
  6008  000566  0100               	movlb	0	; () banked
  6009  000568  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  6010  00056A  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  6011  00056C                     l3876:
  6012                           
  6013                           ; BSR set to: 0
  6014  00056C  0100               	movlb	0	; () banked
  6015  00056E  07CE               	decf	sprintf@c& (0+255),f,b
  6016  000570  0100               	movlb	0	; () banked
  6017  000572  29CE               	incf	sprintf@c& (0+255),w,b
  6018  000574  B4D8               	btfsc	status,2,c
  6019  000576  D00E               	goto	l3884
  6020  000578  D7A2               	goto	l3868
  6021  00057A                     l3878:
  6022                           
  6023                           ; BSR set to: 0
  6024                           ;doprnt.c: 1217: ((*sp++ = ('0')));
  6025  00057A  C09F  FFD9         	movff	sprintf@sp,fsr2l
  6026  00057E  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  6027  000582  0E30               	movlw	48
  6028  000584  6EDF               	movwf	indf2,c
  6029                           
  6030                           ; BSR set to: 0
  6031  000586  0100               	movlb	0	; () banked
  6032  000588  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  6033  00058A  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;doprnt.c: 1218: exp--;
  6037  00058C  0100               	movlb	0	; () banked
  6038  00058E  07C9               	decf	sprintf@exp& (0+255),f,b
  6039  000590  A0D8               	btfss	status,0,c
  6040  000592  07CA               	decf	(sprintf@exp+1)& (0+255),f,b
  6041  000594                     l3884:
  6042                           
  6043                           ; BSR set to: 0
  6044  000594  0100               	movlb	0	; () banked
  6045  000596  51CA               	movf	(sprintf@exp+1)& (0+255),w,b
  6046  000598  0A80               	xorlw	128
  6047  00059A  6EF3               	movwf	prodl,c
  6048  00059C  0E80               	movlw	128
  6049  00059E  5CF3               	subwf	prodl,w,c
  6050  0005A0  0E01               	movlw	1
  6051  0005A2  B4D8               	btfsc	status,2,c
  6052  0005A4  5DC9               	subwf	sprintf@exp& (0+255),w,b
  6053  0005A6  B0D8               	btfsc	status,0,c
  6054  0005A8  D7E8               	goto	l3878
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;doprnt.c: 1219: }
  6058                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6059                           
  6060                           ; BSR set to: 0
  6061  0005AA  0100               	movlb	0	; () banked
  6062  0005AC  51C3               	movf	(sprintf@prec+1)& (0+255),w,b
  6063  0005AE  0A80               	xorlw	128
  6064  0005B0  0F80               	addlw	-128
  6065  0005B2  0E09               	movlw	9
  6066  0005B4  B4D8               	btfsc	status,2,c
  6067  0005B6  5DC2               	subwf	sprintf@prec& (0+255),w,b
  6068  0005B8  A0D8               	btfss	status,0,c
  6069  0005BA  D004               	goto	l538
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6073  0005BC  0E08               	movlw	8
  6074  0005BE  0100               	movlb	0	; () banked
  6075  0005C0  6FCE               	movwf	sprintf@c& (0+255),b
  6076  0005C2  D002               	goto	l3890
  6077  0005C4                     l538:
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;doprnt.c: 1222: else
  6081                           ;doprnt.c: 1223: c = prec;
  6082  0005C4  C0C2  F0CE         	movff	sprintf@prec,sprintf@c
  6083  0005C8                     l3890:
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;doprnt.c: 1224: prec -= c;
  6087  0005C8  0100               	movlb	0	; () banked
  6088  0005CA  51CE               	movf	sprintf@c& (0+255),w,b
  6089  0005CC  0100               	movlb	0	; () banked
  6090  0005CE  5FC2               	subwf	sprintf@prec& (0+255),f,b
  6091  0005D0  0E00               	movlw	0
  6092  0005D2  0100               	movlb	0	; () banked
  6093  0005D4  BFCE               	btfsc	sprintf@c& (0+255),7,b
  6094  0005D6  0EFF               	movlw	255
  6095  0005D8  0100               	movlb	0	; () banked
  6096  0005DA  5BC3               	subwfb	(sprintf@prec+1)& (0+255),f,b
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;doprnt.c: 1228: if(c)
  6100  0005DC  0100               	movlb	0	; () banked
  6101  0005DE  51CE               	movf	sprintf@c& (0+255),w,b
  6102  0005E0  B4D8               	btfsc	status,2,c
  6103  0005E2  D009               	goto	l3898
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;doprnt.c: 1230: ((*sp++ = ('.')));
  6107  0005E4  C09F  FFD9         	movff	sprintf@sp,fsr2l
  6108  0005E8  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  6109  0005EC  0E2E               	movlw	46
  6110  0005EE  6EDF               	movwf	indf2,c
  6111                           
  6112                           ; BSR set to: 0
  6113  0005F0  0100               	movlb	0	; () banked
  6114  0005F2  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  6115  0005F4  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  6116  0005F6                     l3898:
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  6120  0005F6  0100               	movlb	0	; () banked
  6121  0005F8  51CE               	movf	sprintf@c& (0+255),w,b
  6122  0005FA  ECCD  F004         	call	_scale
  6123  0005FE  C083  F0AC         	movff	?_scale,_sprintf$2762
  6124  000602  C084  F0AD         	movff	?_scale+1,_sprintf$2762+1
  6125  000606  C085  F0AE         	movff	?_scale+2,_sprintf$2762+2
  6126                           
  6127                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  6128  00060A  C0CB  F077         	movff	sprintf@fval,___ftmul@f2
  6129  00060E  C0CC  F078         	movff	sprintf@fval+1,___ftmul@f2+1
  6130  000612  C0CD  F079         	movff	sprintf@fval+2,___ftmul@f2+2
  6131  000616  C0AC  F074         	movff	_sprintf$2762,___ftmul@f1
  6132  00061A  C0AD  F075         	movff	_sprintf$2762+1,___ftmul@f1+1
  6133  00061E  C0AE  F076         	movff	_sprintf$2762+2,___ftmul@f1+2
  6134  000622  ECD0  F00C         	call	___ftmul	;wreg free
  6135  000626  C074  F08A         	movff	?___ftmul,___fttol@f1
  6136  00062A  C075  F08B         	movff	?___ftmul+1,___fttol@f1+1
  6137  00062E  C076  F08C         	movff	?___ftmul+2,___fttol@f1+2
  6138  000632  EC30  F00E         	call	___fttol	;wreg free
  6139  000636  C08A  F0C4         	movff	?___fttol,sprintf@_val
  6140  00063A  C08B  F0C5         	movff	?___fttol+1,sprintf@_val+1
  6141  00063E  C08C  F0C6         	movff	?___fttol+2,sprintf@_val+2
  6142  000642  C08D  F0C7         	movff	?___fttol+3,sprintf@_val+3
  6143                           
  6144                           ;doprnt.c: 1237: while(c--) {
  6145  000646  D085               	goto	l3912
  6146  000648                     l3902:
  6147                           
  6148                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  6149  000648  C0C4  F060         	movff	sprintf@_val,___lldiv@dividend
  6150  00064C  C0C5  F061         	movff	sprintf@_val+1,___lldiv@dividend+1
  6151  000650  C0C6  F062         	movff	sprintf@_val+2,___lldiv@dividend+2
  6152  000654  C0C7  F063         	movff	sprintf@_val+3,___lldiv@dividend+3
  6153  000658  0100               	movlb	0	; () banked
  6154  00065A  51CE               	movf	sprintf@c& (0+255),w,b
  6155  00065C  0D04               	mullw	4
  6156  00065E  0E9D               	movlw	low _dpowers
  6157  000660  24F3               	addwf	prodl,w,c
  6158  000662  6EF6               	movwf	tblptrl,c
  6159  000664  0E7E               	movlw	high _dpowers
  6160  000666  20F4               	addwfc	prodh,w,c
  6161  000668  6EF7               	movwf	tblptrh,c
  6162  00066A                     	if	1	;There are 3 active tblptr bytes
  6163  00066A  6AF8               	clrf	tblptru,c
  6164  00066C  0E00               	movlw	low (__mediumconst shr (0+16))
  6165  00066E  22F8               	addwfc	tblptru,f,c
  6166  000670                     	endif
  6167  000670  0009               	tblrd		*+
  6168  000672  0100               	movlb	0	; () banked
  6169  000674  CFF5 F064          	movff	tablat,___lldiv@divisor
  6170  000678  0009               	tblrd		*+
  6171  00067A  0100               	movlb	0	; () banked
  6172  00067C  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  6173  000680  0009               	tblrd		*+
  6174  000682  0100               	movlb	0	; () banked
  6175  000684  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  6176  000688  000A               	tblrd		*-
  6177  00068A  0100               	movlb	0	; () banked
  6178  00068C  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  6179  000690  ECB5  F010         	call	___lldiv	;wreg free
  6180  000694  C060  F0B7         	movff	?___lldiv,sprintf@vd_1739
  6181  000698  C061  F0B8         	movff	?___lldiv+1,sprintf@vd_1739+1
  6182  00069C  C062  F0B9         	movff	?___lldiv+2,sprintf@vd_1739+2
  6183  0006A0  C063  F0BA         	movff	?___lldiv+3,sprintf@vd_1739+3
  6184                           
  6185                           ;doprnt.c: 1239: vd %= 10;
  6186  0006A4  C0B7  F06D         	movff	sprintf@vd_1739,___llmod@dividend
  6187  0006A8  C0B8  F06E         	movff	sprintf@vd_1739+1,___llmod@dividend+1
  6188  0006AC  C0B9  F06F         	movff	sprintf@vd_1739+2,___llmod@dividend+2
  6189  0006B0  C0BA  F070         	movff	sprintf@vd_1739+3,___llmod@dividend+3
  6190  0006B4  0E0A               	movlw	10
  6191  0006B6  0100               	movlb	0	; () banked
  6192  0006B8  6F71               	movwf	___llmod@divisor& (0+255),b
  6193  0006BA  0E00               	movlw	0
  6194  0006BC  0100               	movlb	0	; () banked
  6195  0006BE  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  6196  0006C0  0E00               	movlw	0
  6197  0006C2  0100               	movlb	0	; () banked
  6198  0006C4  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  6199  0006C6  0E00               	movlw	0
  6200  0006C8  0100               	movlb	0	; () banked
  6201  0006CA  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  6202  0006CC  EC2A  F014         	call	___llmod	;wreg free
  6203  0006D0  C06D  F0B7         	movff	?___llmod,sprintf@vd_1739
  6204  0006D4  C06E  F0B8         	movff	?___llmod+1,sprintf@vd_1739+1
  6205  0006D8  C06F  F0B9         	movff	?___llmod+2,sprintf@vd_1739+2
  6206  0006DC  C070  F0BA         	movff	?___llmod+3,sprintf@vd_1739+3
  6207                           
  6208                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
  6209  0006E0  0100               	movlb	0	; () banked
  6210  0006E2  51B7               	movf	sprintf@vd_1739& (0+255),w,b
  6211  0006E4  0F30               	addlw	48
  6212  0006E6  C09F  FFD9         	movff	sprintf@sp,fsr2l
  6213  0006EA  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  6214  0006EE  6EDF               	movwf	indf2,c
  6215                           
  6216                           ; BSR set to: 0
  6217  0006F0  0100               	movlb	0	; () banked
  6218  0006F2  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  6219  0006F4  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  6223  0006F6  C0C4  F06D         	movff	sprintf@_val,___llmod@dividend
  6224  0006FA  C0C5  F06E         	movff	sprintf@_val+1,___llmod@dividend+1
  6225  0006FE  C0C6  F06F         	movff	sprintf@_val+2,___llmod@dividend+2
  6226  000702  C0C7  F070         	movff	sprintf@_val+3,___llmod@dividend+3
  6227  000706  0100               	movlb	0	; () banked
  6228  000708  51CE               	movf	sprintf@c& (0+255),w,b
  6229  00070A  0D04               	mullw	4
  6230  00070C  0E9D               	movlw	low _dpowers
  6231  00070E  24F3               	addwf	prodl,w,c
  6232  000710  6EF6               	movwf	tblptrl,c
  6233  000712  0E7E               	movlw	high _dpowers
  6234  000714  20F4               	addwfc	prodh,w,c
  6235  000716  6EF7               	movwf	tblptrh,c
  6236  000718                     	if	1	;There are 3 active tblptr bytes
  6237  000718  6AF8               	clrf	tblptru,c
  6238  00071A  0E00               	movlw	low (__mediumconst shr (0+16))
  6239  00071C  22F8               	addwfc	tblptru,f,c
  6240  00071E                     	endif
  6241  00071E  0009               	tblrd		*+
  6242  000720  0100               	movlb	0	; () banked
  6243  000722  CFF5 F071          	movff	tablat,___llmod@divisor
  6244  000726  0009               	tblrd		*+
  6245  000728  0100               	movlb	0	; () banked
  6246  00072A  CFF5 F072          	movff	tablat,___llmod@divisor+1
  6247  00072E  0009               	tblrd		*+
  6248  000730  0100               	movlb	0	; () banked
  6249  000732  CFF5 F073          	movff	tablat,___llmod@divisor+2
  6250  000736  000A               	tblrd		*-
  6251  000738  0100               	movlb	0	; () banked
  6252  00073A  CFF5 F074          	movff	tablat,___llmod@divisor+3
  6253  00073E  EC2A  F014         	call	___llmod	;wreg free
  6254  000742  C06D  F0C4         	movff	?___llmod,sprintf@_val
  6255  000746  C06E  F0C5         	movff	?___llmod+1,sprintf@_val+1
  6256  00074A  C06F  F0C6         	movff	?___llmod+2,sprintf@_val+2
  6257  00074E  C070  F0C7         	movff	?___llmod+3,sprintf@_val+3
  6258  000752                     l3912:
  6259  000752  0100               	movlb	0	; () banked
  6260  000754  07CE               	decf	sprintf@c& (0+255),f,b
  6261  000756  0100               	movlb	0	; () banked
  6262  000758  29CE               	incf	sprintf@c& (0+255),w,b
  6263  00075A  B4D8               	btfsc	status,2,c
  6264  00075C  D00E               	goto	l3920
  6265  00075E  D774               	goto	l3902
  6266  000760                     l3914:
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;doprnt.c: 1245: ((*sp++ = ('0')));
  6270  000760  C09F  FFD9         	movff	sprintf@sp,fsr2l
  6271  000764  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  6272  000768  0E30               	movlw	48
  6273  00076A  6EDF               	movwf	indf2,c
  6274                           
  6275                           ; BSR set to: 0
  6276  00076C  0100               	movlb	0	; () banked
  6277  00076E  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  6278  000770  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;doprnt.c: 1246: prec--;
  6282  000772  0100               	movlb	0	; () banked
  6283  000774  07C2               	decf	sprintf@prec& (0+255),f,b
  6284  000776  A0D8               	btfss	status,0,c
  6285  000778  07C3               	decf	(sprintf@prec+1)& (0+255),f,b
  6286  00077A                     l3920:
  6287                           
  6288                           ; BSR set to: 0
  6289  00077A  0100               	movlb	0	; () banked
  6290  00077C  51C3               	movf	(sprintf@prec+1)& (0+255),w,b
  6291  00077E  11C2               	iorwf	sprintf@prec& (0+255),w,b
  6292  000780  B4D8               	btfsc	status,2,c
  6293  000782  D0F2               	goto	l3962
  6294  000784  D7ED               	goto	l3914
  6295  000786                     l3922:
  6296                           
  6297                           ; BSR set to: 0
  6298                           ;doprnt.c: 1255: }
  6299                           ;doprnt.c: 1262: {
  6300                           ;doprnt.c: 1268: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  6301  000786  C0BB  FFD9         	movff	sprintf@ap,fsr2l
  6302  00078A  C0BC  FFDA         	movff	sprintf@ap+1,fsr2h
  6303  00078E  0100               	movlb	0	; () banked
  6304  000790  CFDE F0C4          	movff	postinc2,sprintf@_val
  6305  000794  0100               	movlb	0	; () banked
  6306  000796  CFDD F0C5          	movff	postdec2,sprintf@_val+1
  6307  00079A  0100               	movlb	0	; () banked
  6308  00079C  0E00               	movlw	0
  6309  00079E  0100               	movlb	0	; () banked
  6310  0007A0  BFC5               	btfsc	(sprintf@_val+1)& (0+255),7,b
  6311  0007A2  0EFF               	movlw	-1
  6312  0007A4  0100               	movlb	0	; () banked
  6313  0007A6  6FC6               	movwf	(sprintf@_val+2)& (0+255),b
  6314  0007A8  0100               	movlb	0	; () banked
  6315  0007AA  6FC7               	movwf	(sprintf@_val+3)& (0+255),b
  6316                           
  6317                           ; BSR set to: 0
  6318  0007AC  0E02               	movlw	2
  6319  0007AE  0100               	movlb	0	; () banked
  6320  0007B0  27BB               	addwf	sprintf@ap& (0+255),f,b
  6321  0007B2  0E00               	movlw	0
  6322  0007B4  0100               	movlb	0	; () banked
  6323  0007B6  23BC               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;doprnt.c: 1270: if((long)_val._val < 0) {
  6327  0007B8  0100               	movlb	0	; () banked
  6328  0007BA  51C7               	movf	(sprintf@_val+3)& (0+255),w,b
  6329  0007BC  0A80               	xorlw	128
  6330  0007BE  0F80               	addlw	128
  6331  0007C0  E10B               	bnz	u4005
  6332  0007C2  0E00               	movlw	0
  6333  0007C4  0100               	movlb	0	; () banked
  6334  0007C6  5DC6               	subwf	(sprintf@_val+2)& (0+255),w,b
  6335  0007C8  E107               	bnz	u4005
  6336  0007CA  0E00               	movlw	0
  6337  0007CC  0100               	movlb	0	; () banked
  6338  0007CE  5DC5               	subwf	(sprintf@_val+1)& (0+255),w,b
  6339  0007D0  E103               	bnz	u4005
  6340  0007D2  0E00               	movlw	0
  6341  0007D4  0100               	movlb	0	; () banked
  6342  0007D6  5DC4               	subwf	sprintf@_val& (0+255),w,b
  6343  0007D8                     u4005:
  6344  0007D8  B0D8               	btfsc	status,0,c
  6345  0007DA  D012               	goto	l3932
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;doprnt.c: 1271: flag |= 0x03;
  6349  0007DC  0E03               	movlw	3
  6350  0007DE  0100               	movlb	0	; () banked
  6351  0007E0  13BD               	iorwf	sprintf@flag& (0+255),f,b
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;doprnt.c: 1272: _val._val = -_val._val;
  6355  0007E2  0100               	movlb	0	; () banked
  6356  0007E4  1FC7               	comf	(sprintf@_val+3)& (0+255),f,b
  6357  0007E6  0100               	movlb	0	; () banked
  6358  0007E8  1FC6               	comf	(sprintf@_val+2)& (0+255),f,b
  6359  0007EA  0100               	movlb	0	; () banked
  6360  0007EC  1FC5               	comf	(sprintf@_val+1)& (0+255),f,b
  6361  0007EE  0100               	movlb	0	; () banked
  6362  0007F0  6DC4               	negf	sprintf@_val& (0+255),b
  6363  0007F2  0E00               	movlw	0
  6364  0007F4  0100               	movlb	0	; () banked
  6365  0007F6  23C5               	addwfc	(sprintf@_val+1)& (0+255),f,b
  6366  0007F8  0100               	movlb	0	; () banked
  6367  0007FA  23C6               	addwfc	(sprintf@_val+2)& (0+255),f,b
  6368  0007FC  0100               	movlb	0	; () banked
  6369  0007FE  23C7               	addwfc	(sprintf@_val+3)& (0+255),f,b
  6370  000800                     l3932:
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;doprnt.c: 1273: }
  6374                           ;doprnt.c: 1275: }
  6375                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6376  000800  0E01               	movlw	1
  6377  000802  0100               	movlb	0	; () banked
  6378  000804  6FCE               	movwf	sprintf@c& (0+255),b
  6379  000806                     
  6380                           ; BSR set to: 0
  6381  000806  0100               	movlb	0	; () banked
  6382  000808  51CE               	movf	sprintf@c& (0+255),w,b
  6383  00080A  0A0A               	xorlw	10
  6384  00080C  B4D8               	btfsc	status,2,c
  6385  00080E  D021               	goto	l3946
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  6389                           
  6390                           ; BSR set to: 0
  6391                           
  6392                           ; BSR set to: 0
  6393  000810  0100               	movlb	0	; () banked
  6394  000812  51CE               	movf	sprintf@c& (0+255),w,b
  6395  000814  0D04               	mullw	4
  6396  000816  0E9D               	movlw	low _dpowers
  6397  000818  24F3               	addwf	prodl,w,c
  6398  00081A  6EF6               	movwf	tblptrl,c
  6399  00081C  0E7E               	movlw	high _dpowers
  6400  00081E  20F4               	addwfc	prodh,w,c
  6401  000820  6EF7               	movwf	tblptrh,c
  6402  000822                     	if	1	;There are 3 active tblptr bytes
  6403  000822  6AF8               	clrf	tblptru,c
  6404  000824  0E00               	movlw	low (__mediumconst shr (0+16))
  6405  000826  22F8               	addwfc	tblptru,f,c
  6406  000828                     	endif
  6407  000828  0009               	tblrd		*+
  6408  00082A  50F5               	movf	tablat,w,c
  6409  00082C  0100               	movlb	0	; () banked
  6410  00082E  5DC4               	subwf	sprintf@_val& (0+255),w,b
  6411  000830  0009               	tblrd		*+
  6412  000832  50F5               	movf	tablat,w,c
  6413  000834  0100               	movlb	0	; () banked
  6414  000836  59C5               	subwfb	(sprintf@_val+1)& (0+255),w,b
  6415  000838  0009               	tblrd		*+
  6416  00083A  50F5               	movf	tablat,w,c
  6417  00083C  0100               	movlb	0	; () banked
  6418  00083E  59C6               	subwfb	(sprintf@_val+2)& (0+255),w,b
  6419  000840  0009               	tblrd		*+
  6420  000842  50F5               	movf	tablat,w,c
  6421  000844  0100               	movlb	0	; () banked
  6422  000846  59C7               	subwfb	(sprintf@_val+3)& (0+255),w,b
  6423  000848  A0D8               	btfss	status,0,c
  6424  00084A  D003               	goto	l3946
  6425                           
  6426                           ; BSR set to: 0
  6427                           
  6428                           ; BSR set to: 0
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;doprnt.c: 1316: break;
  6432  00084C  0100               	movlb	0	; () banked
  6433  00084E  2BCE               	incf	sprintf@c& (0+255),f,b
  6434  000850  D7DA               	goto	L11
  6435  000852                     l3946:
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;doprnt.c: 1431: {
  6439                           ;doprnt.c: 1447: if(flag & 0x03)
  6440  000852  0E03               	movlw	3
  6441  000854  0100               	movlb	0	; () banked
  6442  000856  15BD               	andwf	sprintf@flag& (0+255),w,b
  6443  000858  0100               	movlb	0	; () banked
  6444  00085A  6FA6               	movwf	??_sprintf& (0+255),b
  6445  00085C  0E00               	movlw	0
  6446  00085E  0100               	movlb	0	; () banked
  6447  000860  15BE               	andwf	(sprintf@flag+1)& (0+255),w,b
  6448  000862  0100               	movlb	0	; () banked
  6449  000864  6FA7               	movwf	(??_sprintf+1)& (0+255),b
  6450  000866  0100               	movlb	0	; () banked
  6451  000868  51A7               	movf	(??_sprintf+1)& (0+255),w,b
  6452  00086A  11A6               	iorwf	??_sprintf& (0+255),w,b
  6453  00086C  B4D8               	btfsc	status,2,c
  6454  00086E  D009               	goto	l3952
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  6458  000870  C09F  FFD9         	movff	sprintf@sp,fsr2l
  6459  000874  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  6460  000878  0E2D               	movlw	45
  6461  00087A  6EDF               	movwf	indf2,c
  6462                           
  6463                           ; BSR set to: 0
  6464  00087C  0100               	movlb	0	; () banked
  6465  00087E  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  6466  000880  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  6467  000882                     l3952:
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;doprnt.c: 1478: }
  6471                           ;doprnt.c: 1481: prec = c;
  6472  000882  0100               	movlb	0	; () banked
  6473  000884  51CE               	movf	sprintf@c& (0+255),w,b
  6474  000886  0100               	movlb	0	; () banked
  6475  000888  6FC2               	movwf	sprintf@prec& (0+255),b
  6476  00088A  0100               	movlb	0	; () banked
  6477  00088C  6BC3               	clrf	(sprintf@prec+1)& (0+255),b
  6478  00088E  0100               	movlb	0	; () banked
  6479  000890  BFC2               	btfsc	sprintf@prec& (0+255),7,b
  6480  000892  07C3               	decf	(sprintf@prec+1)& (0+255),f,b
  6481                           
  6482                           ;doprnt.c: 1483: while(prec--) {
  6483  000894  D05F               	goto	l3960
  6484  000896                     l3954:
  6485                           
  6486                           ; BSR set to: 0
  6487                           ;doprnt.c: 1487: {
  6488                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  6489  000896  0100               	movlb	0	; () banked
  6490  000898  C0C2  F0A6         	movff	sprintf@prec,??_sprintf
  6491  00089C  0100               	movlb	0	; () banked
  6492  00089E  C0C3  F0A7         	movff	sprintf@prec+1,??_sprintf+1
  6493  0008A2  0100               	movlb	0	; () banked
  6494  0008A4  90D8               	bcf	status,0,c
  6495  0008A6  37A6               	rlcf	??_sprintf& (0+255),f,b
  6496  0008A8  37A7               	rlcf	(??_sprintf+1)& (0+255),f,b
  6497  0008AA  0100               	movlb	0	; () banked
  6498  0008AC  90D8               	bcf	status,0,c
  6499  0008AE  37A6               	rlcf	??_sprintf& (0+255),f,b
  6500  0008B0  37A7               	rlcf	(??_sprintf+1)& (0+255),f,b
  6501  0008B2  0E9D               	movlw	low _dpowers
  6502  0008B4  0100               	movlb	0	; () banked
  6503  0008B6  25A6               	addwf	??_sprintf& (0+255),w,b
  6504  0008B8  6EF6               	movwf	tblptrl,c
  6505  0008BA  0E7E               	movlw	high _dpowers
  6506  0008BC  21A7               	addwfc	(??_sprintf+1)& (0+255),w,b
  6507  0008BE  6EF7               	movwf	tblptrh,c
  6508  0008C0                     	if	1	;There are 3 active tblptr bytes
  6509  0008C0  6AF8               	clrf	tblptru,c
  6510  0008C2  0E00               	movlw	low (__mediumconst shr (0+16))
  6511  0008C4  22F8               	addwfc	tblptru,f,c
  6512  0008C6                     	endif
  6513  0008C6  0009               	tblrd		*+
  6514  0008C8  0100               	movlb	0	; () banked
  6515  0008CA  CFF5 F064          	movff	tablat,___lldiv@divisor
  6516  0008CE  0009               	tblrd		*+
  6517  0008D0  0100               	movlb	0	; () banked
  6518  0008D2  CFF5 F065          	movff	tablat,___lldiv@divisor+1
  6519  0008D6  0009               	tblrd		*+
  6520  0008D8  0100               	movlb	0	; () banked
  6521  0008DA  CFF5 F066          	movff	tablat,___lldiv@divisor+2
  6522  0008DE  000A               	tblrd		*-
  6523  0008E0  0100               	movlb	0	; () banked
  6524  0008E2  CFF5 F067          	movff	tablat,___lldiv@divisor+3
  6525  0008E6  C0C4  F060         	movff	sprintf@_val,___lldiv@dividend
  6526  0008EA  C0C5  F061         	movff	sprintf@_val+1,___lldiv@dividend+1
  6527  0008EE  C0C6  F062         	movff	sprintf@_val+2,___lldiv@dividend+2
  6528  0008F2  C0C7  F063         	movff	sprintf@_val+3,___lldiv@dividend+3
  6529  0008F6  ECB5  F010         	call	___lldiv	;wreg free
  6530  0008FA  C060  F06D         	movff	?___lldiv,___llmod@dividend
  6531  0008FE  C061  F06E         	movff	?___lldiv+1,___llmod@dividend+1
  6532  000902  C062  F06F         	movff	?___lldiv+2,___llmod@dividend+2
  6533  000906  C063  F070         	movff	?___lldiv+3,___llmod@dividend+3
  6534  00090A  0E0A               	movlw	10
  6535  00090C  0100               	movlb	0	; () banked
  6536  00090E  6F71               	movwf	___llmod@divisor& (0+255),b
  6537  000910  0E00               	movlw	0
  6538  000912  0100               	movlb	0	; () banked
  6539  000914  6F72               	movwf	(___llmod@divisor+1)& (0+255),b
  6540  000916  0E00               	movlw	0
  6541  000918  0100               	movlb	0	; () banked
  6542  00091A  6F73               	movwf	(___llmod@divisor+2)& (0+255),b
  6543  00091C  0E00               	movlw	0
  6544  00091E  0100               	movlb	0	; () banked
  6545  000920  6F74               	movwf	(___llmod@divisor+3)& (0+255),b
  6546  000922  EC2A  F014         	call	___llmod	;wreg free
  6547  000926  C06D  F0A8         	movff	?___llmod,??_sprintf+2
  6548  00092A  C06E  F0A9         	movff	?___llmod+1,??_sprintf+3
  6549  00092E  C06F  F0AA         	movff	?___llmod+2,??_sprintf+4
  6550  000932  C070  F0AB         	movff	?___llmod+3,??_sprintf+5
  6551  000936  0100               	movlb	0	; () banked
  6552  000938  51A8               	movf	(??_sprintf+2)& (0+255),w,b
  6553  00093A  0F30               	addlw	48
  6554  00093C  0100               	movlb	0	; () banked
  6555  00093E  6FCE               	movwf	sprintf@c& (0+255),b
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;doprnt.c: 1532: }
  6559                           ;doprnt.c: 1533: ((*sp++ = (c)));
  6560  000940  C09F  FFD9         	movff	sprintf@sp,fsr2l
  6561  000944  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  6562  000948  0100               	movlb	0	; () banked
  6563  00094A  C0CE  FFDF         	movff	sprintf@c,indf2
  6564                           
  6565                           ; BSR set to: 0
  6566  00094E  0100               	movlb	0	; () banked
  6567  000950  4B9F               	infsnz	sprintf@sp& (0+255),f,b
  6568  000952  2BA0               	incf	(sprintf@sp+1)& (0+255),f,b
  6569  000954                     l3960:
  6570                           
  6571                           ; BSR set to: 0
  6572  000954  0100               	movlb	0	; () banked
  6573  000956  07C2               	decf	sprintf@prec& (0+255),f,b
  6574  000958  A0D8               	btfss	status,0,c
  6575  00095A  07C3               	decf	(sprintf@prec+1)& (0+255),f,b
  6576  00095C  0100               	movlb	0	; () banked
  6577  00095E  29C2               	incf	sprintf@prec& (0+255),w,b
  6578  000960  B4D8               	btfsc	status,2,c
  6579  000962  29C3               	incf	(sprintf@prec+1)& (0+255),w,b
  6580  000964  A4D8               	btfss	status,2,c
  6581  000966  D797               	goto	l3954
  6582  000968                     l3962:
  6583                           
  6584                           ; BSR set to: 0
  6585  000968  0100               	movlb	0	; () banked
  6586  00096A  C0A1  FFF6         	movff	sprintf@f,tblptrl
  6587  00096E  0100               	movlb	0	; () banked
  6588  000970  C0A2  FFF7         	movff	sprintf@f+1,tblptrh
  6589  000974  0100               	movlb	0	; () banked
  6590  000976  4BA1               	infsnz	sprintf@f& (0+255),f,b
  6591  000978  2BA2               	incf	(sprintf@f+1)& (0+255),f,b
  6592  00097A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6593  00097A  6AF8               	clrf	tblptru,c
  6594  00097C                     	endif
  6595  00097C                     	if	0	;tblptru may be non-zero
  6596  00097C                     	endif
  6597  00097C  0008               	tblrd		*
  6598  00097E  0100               	movlb	0	; () banked
  6599  000980  CFF5 F0CE          	movff	tablat,sprintf@c
  6600  000984  0100               	movlb	0	; () banked
  6601  000986  67CE               	tstfsz	sprintf@c& (0+255),b
  6602  000988  EF18  F000         	goto	l3760
  6603  00098C                     l3964:
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;doprnt.c: 1547: *sp = 0;
  6607  00098C  C09F  FFD9         	movff	sprintf@sp,fsr2l
  6608  000990  C0A0  FFDA         	movff	sprintf@sp+1,fsr2h
  6609  000994  0E00               	movlw	0
  6610  000996  6EDF               	movwf	indf2,c
  6611                           
  6612                           ; BSR set to: 0
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;doprnt.c: 1549: return 0;
  6616                           ;	Return value of _sprintf is never used
  6617  000998  0012               	return	
  6618  00099A                     __end_of_sprintf:
  6619                           	opt stack 0
  6620                           tblptru	equ	0xFF8
  6621                           tblptrh	equ	0xFF7
  6622                           tblptrl	equ	0xFF6
  6623                           tablat	equ	0xFF5
  6624                           prodh	equ	0xFF4
  6625                           prodl	equ	0xFF3
  6626                           intcon	equ	0xFF2
  6627                           intcon2	equ	0xFF1
  6628                           intcon3	equ	0xFF0
  6629                           indf0	equ	0xFEF
  6630                           postinc0	equ	0xFEE
  6631                           fsr0h	equ	0xFEA
  6632                           fsr0l	equ	0xFE9
  6633                           wreg	equ	0xFE8
  6634                           postinc1	equ	0xFE6
  6635                           postdec1	equ	0xFE5
  6636                           fsr1l	equ	0xFE1
  6637                           indf2	equ	0xFDF
  6638                           postinc2	equ	0xFDE
  6639                           postdec2	equ	0xFDD
  6640                           fsr2h	equ	0xFDA
  6641                           fsr2l	equ	0xFD9
  6642                           status	equ	0xFD8
  6643                           
  6644 ;; *************** function _scale *****************
  6645 ;; Defined at:
  6646 ;;		line 425 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\doprnt.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  scl             1    wreg     char 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;  scl             1   41[BANK0 ] char 
  6651 ;; Return value:  Size  Location     Type
  6652 ;;                  3   35[BANK0 ] char 
  6653 ;; Registers used:
  6654 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6655 ;; Tracked objects:
  6656 ;;		On entry : 0/0
  6657 ;;		On exit  : 0/0
  6658 ;;		Unchanged: 0/0
  6659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6660 ;;      Params:         0       3       0       0       0       0       0       0       0
  6661 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6662 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6663 ;;      Totals:         0       7       0       0       0       0       0       0       0
  6664 ;;Total ram usage:        7 bytes
  6665 ;; Hardware stack levels used:    1
  6666 ;; Hardware stack levels required when called:    6
  6667 ;; This function calls:
  6668 ;;		___awdiv
  6669 ;;		___awmod
  6670 ;;		___ftmul
  6671 ;;		___wmul
  6672 ;; This function is called by:
  6673 ;;		_sprintf
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text29
  6678  00099A                     __ptext29:
  6679                           	opt stack 0
  6680  00099A                     _scale:
  6681                           	opt stack 21
  6682                           
  6683                           ; BSR set to: 0
  6684                           ;incstack = 0
  6685                           ;scale@scl stored from wreg
  6686  00099A  0100               	movlb	0	; () banked
  6687  00099C  6F89               	movwf	scale@scl& (0+255),b
  6688                           
  6689                           ; BSR set to: 0
  6690                           ;doprnt.c: 428: if(scl < 0) {
  6691  00099E  0100               	movlb	0	; () banked
  6692  0009A0  AF89               	btfss	scale@scl& (0+255),7,b
  6693  0009A2  D152               	goto	l3492
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;doprnt.c: 429: scl = -scl;
  6697  0009A4  0100               	movlb	0	; () banked
  6698  0009A6  6D89               	negf	scale@scl& (0+255),b
  6699                           
  6700                           ;doprnt.c: 430: if(scl>=110)
  6701  0009A8  0100               	movlb	0	; () banked
  6702  0009AA  5189               	movf	scale@scl& (0+255),w,b
  6703  0009AC  0A80               	xorlw	128
  6704  0009AE  0F12               	addlw	-238
  6705  0009B0  A0D8               	btfss	status,0,c
  6706  0009B2  D0C9               	goto	l3482
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6710  0009B4  0E00               	movlw	0
  6711  0009B6  0100               	movlb	0	; () banked
  6712  0009B8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6713  0009BA  0E03               	movlw	3
  6714  0009BC  0100               	movlb	0	; () banked
  6715  0009BE  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6716  0009C0  0E00               	movlw	0
  6717  0009C2  0100               	movlb	0	; () banked
  6718  0009C4  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6719  0009C6  0E0A               	movlw	10
  6720  0009C8  0100               	movlb	0	; () banked
  6721  0009CA  6F68               	movwf	___awdiv@divisor& (0+255),b
  6722  0009CC  0E00               	movlw	0
  6723  0009CE  0100               	movlb	0	; () banked
  6724  0009D0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6725  0009D2  0E64               	movlw	100
  6726  0009D4  0100               	movlb	0	; () banked
  6727  0009D6  6F62               	movwf	___awmod@divisor& (0+255),b
  6728  0009D8  0100               	movlb	0	; () banked
  6729  0009DA  5189               	movf	scale@scl& (0+255),w,b
  6730  0009DC  0100               	movlb	0	; () banked
  6731  0009DE  6F60               	movwf	___awmod@dividend& (0+255),b
  6732  0009E0  0100               	movlb	0	; () banked
  6733  0009E2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6734  0009E4  0100               	movlb	0	; () banked
  6735  0009E6  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6736  0009E8  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6737  0009EA  ECBD  F012         	call	___awmod	;wreg free
  6738  0009EE  0100               	movlb	0	; () banked
  6739  0009F0  C060  F066         	movff	?___awmod,___awdiv@dividend
  6740  0009F4  0100               	movlb	0	; () banked
  6741  0009F6  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  6742  0009FA  EC44  F010         	call	___awdiv	;wreg free
  6743  0009FE  0E09               	movlw	9
  6744  000A00  0100               	movlb	0	; () banked
  6745  000A02  2566               	addwf	?___awdiv& (0+255),w,b
  6746  000A04  0100               	movlb	0	; () banked
  6747  000A06  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6748  000A08  0E00               	movlw	0
  6749  000A0A  0100               	movlb	0	; () banked
  6750  000A0C  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6751  000A0E  0100               	movlb	0	; () banked
  6752  000A10  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6753  000A12  EC59  F019         	call	___wmul	;wreg free
  6754  000A16  0EC5               	movlw	low __npowers_
  6755  000A18  0100               	movlb	0	; () banked
  6756  000A1A  256E               	addwf	?___wmul& (0+255),w,b
  6757  000A1C  6EF6               	movwf	tblptrl,c
  6758  000A1E  0E7E               	movlw	high __npowers_
  6759  000A20  0100               	movlb	0	; () banked
  6760  000A22  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6761  000A24  6EF7               	movwf	tblptrh,c
  6762  000A26                     	if	1	;There are 3 active tblptr bytes
  6763  000A26  6AF8               	clrf	tblptru,c
  6764  000A28  0E00               	movlw	low (__mediumconst shr (0+16))
  6765  000A2A  22F8               	addwfc	tblptru,f,c
  6766  000A2C                     	endif
  6767  000A2C  0009               	tblrd		*+
  6768  000A2E  0100               	movlb	0	; () banked
  6769  000A30  CFF5 F077          	movff	tablat,___ftmul@f2
  6770  000A34  0009               	tblrd		*+
  6771  000A36  0100               	movlb	0	; () banked
  6772  000A38  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6773  000A3C  000A               	tblrd		*-
  6774  000A3E  0100               	movlb	0	; () banked
  6775  000A40  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6776  000A44  0E00               	movlw	0
  6777  000A46  0100               	movlb	0	; () banked
  6778  000A48  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6779  000A4A  0E64               	movlw	100
  6780  000A4C  0100               	movlb	0	; () banked
  6781  000A4E  6F68               	movwf	___awdiv@divisor& (0+255),b
  6782  000A50  0100               	movlb	0	; () banked
  6783  000A52  5189               	movf	scale@scl& (0+255),w,b
  6784  000A54  0100               	movlb	0	; () banked
  6785  000A56  6F66               	movwf	___awdiv@dividend& (0+255),b
  6786  000A58  0100               	movlb	0	; () banked
  6787  000A5A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6788  000A5C  0100               	movlb	0	; () banked
  6789  000A5E  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  6790  000A60  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6791  000A62  EC44  F010         	call	___awdiv	;wreg free
  6792  000A66  0E12               	movlw	18
  6793  000A68  0100               	movlb	0	; () banked
  6794  000A6A  2566               	addwf	?___awdiv& (0+255),w,b
  6795  000A6C  0100               	movlb	0	; () banked
  6796  000A6E  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6797  000A70  0E00               	movlw	0
  6798  000A72  0100               	movlb	0	; () banked
  6799  000A74  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6800  000A76  0100               	movlb	0	; () banked
  6801  000A78  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6802  000A7A  0E00               	movlw	0
  6803  000A7C  0100               	movlb	0	; () banked
  6804  000A7E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6805  000A80  0E03               	movlw	3
  6806  000A82  0100               	movlb	0	; () banked
  6807  000A84  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6808  000A86  EC59  F019         	call	___wmul	;wreg free
  6809  000A8A  0EC5               	movlw	low __npowers_
  6810  000A8C  0100               	movlb	0	; () banked
  6811  000A8E  256E               	addwf	?___wmul& (0+255),w,b
  6812  000A90  6EF6               	movwf	tblptrl,c
  6813  000A92  0E7E               	movlw	high __npowers_
  6814  000A94  0100               	movlb	0	; () banked
  6815  000A96  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6816  000A98  6EF7               	movwf	tblptrh,c
  6817  000A9A                     	if	1	;There are 3 active tblptr bytes
  6818  000A9A  6AF8               	clrf	tblptru,c
  6819  000A9C  0E00               	movlw	low (__mediumconst shr (0+16))
  6820  000A9E  22F8               	addwfc	tblptru,f,c
  6821  000AA0                     	endif
  6822  000AA0  0009               	tblrd		*+
  6823  000AA2  0100               	movlb	0	; () banked
  6824  000AA4  CFF5 F074          	movff	tablat,___ftmul@f1
  6825  000AA8  0009               	tblrd		*+
  6826  000AAA  0100               	movlb	0	; () banked
  6827  000AAC  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6828  000AB0  000A               	tblrd		*-
  6829  000AB2  0100               	movlb	0	; () banked
  6830  000AB4  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6831  000AB8  ECD0  F00C         	call	___ftmul	;wreg free
  6832  000ABC  C074  F086         	movff	?___ftmul,_scale$2761
  6833  000AC0  C075  F087         	movff	?___ftmul+1,_scale$2761+1
  6834  000AC4  C076  F088         	movff	?___ftmul+2,_scale$2761+2
  6835                           
  6836                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6837  000AC8  C086  F074         	movff	_scale$2761,___ftmul@f1
  6838  000ACC  C087  F075         	movff	_scale$2761+1,___ftmul@f1+1
  6839  000AD0  C088  F076         	movff	_scale$2761+2,___ftmul@f1+2
  6840  000AD4  0E00               	movlw	0
  6841  000AD6  0100               	movlb	0	; () banked
  6842  000AD8  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6843  000ADA  0E03               	movlw	3
  6844  000ADC  0100               	movlb	0	; () banked
  6845  000ADE  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6846  000AE0  0E00               	movlw	0
  6847  000AE2  0100               	movlb	0	; () banked
  6848  000AE4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6849  000AE6  0E0A               	movlw	10
  6850  000AE8  0100               	movlb	0	; () banked
  6851  000AEA  6F62               	movwf	___awmod@divisor& (0+255),b
  6852  000AEC  0100               	movlb	0	; () banked
  6853  000AEE  5189               	movf	scale@scl& (0+255),w,b
  6854  000AF0  0100               	movlb	0	; () banked
  6855  000AF2  6F60               	movwf	___awmod@dividend& (0+255),b
  6856  000AF4  0100               	movlb	0	; () banked
  6857  000AF6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6858  000AF8  0100               	movlb	0	; () banked
  6859  000AFA  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6860  000AFC  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6861  000AFE  ECBD  F012         	call	___awmod	;wreg free
  6862  000B02  0100               	movlb	0	; () banked
  6863  000B04  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6864  000B08  0100               	movlb	0	; () banked
  6865  000B0A  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6866  000B0E  EC59  F019         	call	___wmul	;wreg free
  6867  000B12  0EC5               	movlw	low __npowers_
  6868  000B14  0100               	movlb	0	; () banked
  6869  000B16  256E               	addwf	?___wmul& (0+255),w,b
  6870  000B18  6EF6               	movwf	tblptrl,c
  6871  000B1A  0E7E               	movlw	high __npowers_
  6872  000B1C  0100               	movlb	0	; () banked
  6873  000B1E  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6874  000B20  6EF7               	movwf	tblptrh,c
  6875  000B22                     	if	1	;There are 3 active tblptr bytes
  6876  000B22  6AF8               	clrf	tblptru,c
  6877  000B24  0E00               	movlw	low (__mediumconst shr (0+16))
  6878  000B26  22F8               	addwfc	tblptru,f,c
  6879  000B28                     	endif
  6880  000B28  0009               	tblrd		*+
  6881  000B2A  0100               	movlb	0	; () banked
  6882  000B2C  CFF5 F077          	movff	tablat,___ftmul@f2
  6883  000B30  0009               	tblrd		*+
  6884  000B32  0100               	movlb	0	; () banked
  6885  000B34  CFF5 F078          	movff	tablat,___ftmul@f2+1
  6886  000B38  000A               	tblrd		*-
  6887  000B3A  0100               	movlb	0	; () banked
  6888  000B3C  CFF5 F079          	movff	tablat,___ftmul@f2+2
  6889  000B40  ECD0  F00C         	call	___ftmul	;wreg free
  6890  000B44  D1C8               	goto	L15
  6891  000B46                     l3482:
  6892                           
  6893                           ;doprnt.c: 432: else if(scl > 10)
  6894  000B46  0100               	movlb	0	; () banked
  6895  000B48  5189               	movf	scale@scl& (0+255),w,b
  6896  000B4A  0A80               	xorlw	128
  6897  000B4C  0F75               	addlw	-139
  6898  000B4E  A0D8               	btfss	status,0,c
  6899  000B50  D073               	goto	l3488
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6903  000B52  0E00               	movlw	0
  6904  000B54  0100               	movlb	0	; () banked
  6905  000B56  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  6906  000B58  0E0A               	movlw	10
  6907  000B5A  0100               	movlb	0	; () banked
  6908  000B5C  6F68               	movwf	___awdiv@divisor& (0+255),b
  6909  000B5E  0100               	movlb	0	; () banked
  6910  000B60  5189               	movf	scale@scl& (0+255),w,b
  6911  000B62  0100               	movlb	0	; () banked
  6912  000B64  6F66               	movwf	___awdiv@dividend& (0+255),b
  6913  000B66  0100               	movlb	0	; () banked
  6914  000B68  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  6915  000B6A  0100               	movlb	0	; () banked
  6916  000B6C  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  6917  000B6E  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6918  000B70  EC44  F010         	call	___awdiv	;wreg free
  6919  000B74  0E09               	movlw	9
  6920  000B76  0100               	movlb	0	; () banked
  6921  000B78  2566               	addwf	?___awdiv& (0+255),w,b
  6922  000B7A  0100               	movlb	0	; () banked
  6923  000B7C  6F6E               	movwf	___wmul@multiplier& (0+255),b
  6924  000B7E  0E00               	movlw	0
  6925  000B80  0100               	movlb	0	; () banked
  6926  000B82  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  6927  000B84  0100               	movlb	0	; () banked
  6928  000B86  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  6929  000B88  0E00               	movlw	0
  6930  000B8A  0100               	movlb	0	; () banked
  6931  000B8C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6932  000B8E  0E03               	movlw	3
  6933  000B90  0100               	movlb	0	; () banked
  6934  000B92  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6935  000B94  EC59  F019         	call	___wmul	;wreg free
  6936  000B98  0EC5               	movlw	low __npowers_
  6937  000B9A  0100               	movlb	0	; () banked
  6938  000B9C  256E               	addwf	?___wmul& (0+255),w,b
  6939  000B9E  6EF6               	movwf	tblptrl,c
  6940  000BA0  0E7E               	movlw	high __npowers_
  6941  000BA2  0100               	movlb	0	; () banked
  6942  000BA4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6943  000BA6  6EF7               	movwf	tblptrh,c
  6944  000BA8                     	if	1	;There are 3 active tblptr bytes
  6945  000BA8  6AF8               	clrf	tblptru,c
  6946  000BAA  0E00               	movlw	low (__mediumconst shr (0+16))
  6947  000BAC  22F8               	addwfc	tblptru,f,c
  6948  000BAE                     	endif
  6949  000BAE  0009               	tblrd		*+
  6950  000BB0  0100               	movlb	0	; () banked
  6951  000BB2  CFF5 F074          	movff	tablat,___ftmul@f1
  6952  000BB6  0009               	tblrd		*+
  6953  000BB8  0100               	movlb	0	; () banked
  6954  000BBA  CFF5 F075          	movff	tablat,___ftmul@f1+1
  6955  000BBE  000A               	tblrd		*-
  6956  000BC0  0100               	movlb	0	; () banked
  6957  000BC2  CFF5 F076          	movff	tablat,___ftmul@f1+2
  6958  000BC6  0E00               	movlw	0
  6959  000BC8  0100               	movlb	0	; () banked
  6960  000BCA  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6961  000BCC  0E03               	movlw	3
  6962  000BCE  0100               	movlb	0	; () banked
  6963  000BD0  6F70               	movwf	___wmul@multiplicand& (0+255),b
  6964  000BD2  0E00               	movlw	0
  6965  000BD4  0100               	movlb	0	; () banked
  6966  000BD6  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6967  000BD8  0E0A               	movlw	10
  6968  000BDA  0100               	movlb	0	; () banked
  6969  000BDC  6F62               	movwf	___awmod@divisor& (0+255),b
  6970  000BDE  0100               	movlb	0	; () banked
  6971  000BE0  5189               	movf	scale@scl& (0+255),w,b
  6972  000BE2  0100               	movlb	0	; () banked
  6973  000BE4  6F60               	movwf	___awmod@dividend& (0+255),b
  6974  000BE6  0100               	movlb	0	; () banked
  6975  000BE8  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  6976  000BEA  0100               	movlb	0	; () banked
  6977  000BEC  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  6978  000BEE  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  6979  000BF0  ECBD  F012         	call	___awmod	;wreg free
  6980  000BF4  0100               	movlb	0	; () banked
  6981  000BF6  C060  F06E         	movff	?___awmod,___wmul@multiplier
  6982  000BFA  0100               	movlb	0	; () banked
  6983  000BFC  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  6984  000C00  EC59  F019         	call	___wmul	;wreg free
  6985  000C04  0EC5               	movlw	low __npowers_
  6986  000C06  0100               	movlb	0	; () banked
  6987  000C08  256E               	addwf	?___wmul& (0+255),w,b
  6988  000C0A  6EF6               	movwf	tblptrl,c
  6989  000C0C  0E7E               	movlw	high __npowers_
  6990  000C0E  0100               	movlb	0	; () banked
  6991  000C10  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  6992  000C12  6EF7               	movwf	tblptrh,c
  6993  000C14                     	if	1	;There are 3 active tblptr bytes
  6994  000C14  6AF8               	clrf	tblptru,c
  6995  000C16  0E00               	movlw	low (__mediumconst shr (0+16))
  6996  000C18  22F8               	addwfc	tblptru,f,c
  6997  000C1A                     	endif
  6998  000C1A  0009               	tblrd		*+
  6999  000C1C  0100               	movlb	0	; () banked
  7000  000C1E  CFF5 F077          	movff	tablat,___ftmul@f2
  7001  000C22  0009               	tblrd		*+
  7002  000C24  0100               	movlb	0	; () banked
  7003  000C26  CFF5 F078          	movff	tablat,___ftmul@f2+1
  7004  000C2A  000A               	tblrd		*-
  7005  000C2C  0100               	movlb	0	; () banked
  7006  000C2E  CFF5 F079          	movff	tablat,___ftmul@f2+2
  7007  000C32  ECD0  F00C         	call	___ftmul	;wreg free
  7008  000C36  D14F               	goto	L15
  7009  000C38                     l3488:
  7010                           
  7011                           ;doprnt.c: 434: return _npowers_[scl];
  7012  000C38  0100               	movlb	0	; () banked
  7013  000C3A  5189               	movf	scale@scl& (0+255),w,b
  7014  000C3C  0D03               	mullw	3
  7015  000C3E  0EC5               	movlw	low __npowers_
  7016  000C40  24F3               	addwf	prodl,w,c
  7017  000C42  6EF6               	movwf	tblptrl,c
  7018  000C44  0E7E               	movlw	high __npowers_
  7019  000C46  D155               	goto	L14
  7020  000C48                     l3492:
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;doprnt.c: 435: }
  7024                           ;doprnt.c: 436: if(scl>=110)
  7025  000C48  0100               	movlb	0	; () banked
  7026  000C4A  5189               	movf	scale@scl& (0+255),w,b
  7027  000C4C  0A80               	xorlw	128
  7028  000C4E  0F12               	addlw	-238
  7029  000C50  A0D8               	btfss	status,0,c
  7030  000C52  D0C9               	goto	l3500
  7031                           
  7032                           ; BSR set to: 0
  7033                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7034  000C54  0E00               	movlw	0
  7035  000C56  0100               	movlb	0	; () banked
  7036  000C58  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7037  000C5A  0E03               	movlw	3
  7038  000C5C  0100               	movlb	0	; () banked
  7039  000C5E  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7040  000C60  0E00               	movlw	0
  7041  000C62  0100               	movlb	0	; () banked
  7042  000C64  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  7043  000C66  0E0A               	movlw	10
  7044  000C68  0100               	movlb	0	; () banked
  7045  000C6A  6F68               	movwf	___awdiv@divisor& (0+255),b
  7046  000C6C  0E00               	movlw	0
  7047  000C6E  0100               	movlb	0	; () banked
  7048  000C70  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7049  000C72  0E64               	movlw	100
  7050  000C74  0100               	movlb	0	; () banked
  7051  000C76  6F62               	movwf	___awmod@divisor& (0+255),b
  7052  000C78  0100               	movlb	0	; () banked
  7053  000C7A  5189               	movf	scale@scl& (0+255),w,b
  7054  000C7C  0100               	movlb	0	; () banked
  7055  000C7E  6F60               	movwf	___awmod@dividend& (0+255),b
  7056  000C80  0100               	movlb	0	; () banked
  7057  000C82  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  7058  000C84  0100               	movlb	0	; () banked
  7059  000C86  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  7060  000C88  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  7061  000C8A  ECBD  F012         	call	___awmod	;wreg free
  7062  000C8E  0100               	movlb	0	; () banked
  7063  000C90  C060  F066         	movff	?___awmod,___awdiv@dividend
  7064  000C94  0100               	movlb	0	; () banked
  7065  000C96  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  7066  000C9A  EC44  F010         	call	___awdiv	;wreg free
  7067  000C9E  0E09               	movlw	9
  7068  000CA0  0100               	movlb	0	; () banked
  7069  000CA2  2566               	addwf	?___awdiv& (0+255),w,b
  7070  000CA4  0100               	movlb	0	; () banked
  7071  000CA6  6F6E               	movwf	___wmul@multiplier& (0+255),b
  7072  000CA8  0E00               	movlw	0
  7073  000CAA  0100               	movlb	0	; () banked
  7074  000CAC  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  7075  000CAE  0100               	movlb	0	; () banked
  7076  000CB0  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7077  000CB2  EC59  F019         	call	___wmul	;wreg free
  7078  000CB6  0EEC               	movlw	low __powers_
  7079  000CB8  0100               	movlb	0	; () banked
  7080  000CBA  256E               	addwf	?___wmul& (0+255),w,b
  7081  000CBC  6EF6               	movwf	tblptrl,c
  7082  000CBE  0E7E               	movlw	high __powers_
  7083  000CC0  0100               	movlb	0	; () banked
  7084  000CC2  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7085  000CC4  6EF7               	movwf	tblptrh,c
  7086  000CC6                     	if	1	;There are 3 active tblptr bytes
  7087  000CC6  6AF8               	clrf	tblptru,c
  7088  000CC8  0E00               	movlw	low (__mediumconst shr (0+16))
  7089  000CCA  22F8               	addwfc	tblptru,f,c
  7090  000CCC                     	endif
  7091  000CCC  0009               	tblrd		*+
  7092  000CCE  0100               	movlb	0	; () banked
  7093  000CD0  CFF5 F077          	movff	tablat,___ftmul@f2
  7094  000CD4  0009               	tblrd		*+
  7095  000CD6  0100               	movlb	0	; () banked
  7096  000CD8  CFF5 F078          	movff	tablat,___ftmul@f2+1
  7097  000CDC  000A               	tblrd		*-
  7098  000CDE  0100               	movlb	0	; () banked
  7099  000CE0  CFF5 F079          	movff	tablat,___ftmul@f2+2
  7100  000CE4  0E00               	movlw	0
  7101  000CE6  0100               	movlb	0	; () banked
  7102  000CE8  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  7103  000CEA  0E64               	movlw	100
  7104  000CEC  0100               	movlb	0	; () banked
  7105  000CEE  6F68               	movwf	___awdiv@divisor& (0+255),b
  7106  000CF0  0100               	movlb	0	; () banked
  7107  000CF2  5189               	movf	scale@scl& (0+255),w,b
  7108  000CF4  0100               	movlb	0	; () banked
  7109  000CF6  6F66               	movwf	___awdiv@dividend& (0+255),b
  7110  000CF8  0100               	movlb	0	; () banked
  7111  000CFA  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  7112  000CFC  0100               	movlb	0	; () banked
  7113  000CFE  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  7114  000D00  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7115  000D02  EC44  F010         	call	___awdiv	;wreg free
  7116  000D06  0E12               	movlw	18
  7117  000D08  0100               	movlb	0	; () banked
  7118  000D0A  2566               	addwf	?___awdiv& (0+255),w,b
  7119  000D0C  0100               	movlb	0	; () banked
  7120  000D0E  6F6E               	movwf	___wmul@multiplier& (0+255),b
  7121  000D10  0E00               	movlw	0
  7122  000D12  0100               	movlb	0	; () banked
  7123  000D14  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  7124  000D16  0100               	movlb	0	; () banked
  7125  000D18  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7126  000D1A  0E00               	movlw	0
  7127  000D1C  0100               	movlb	0	; () banked
  7128  000D1E  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7129  000D20  0E03               	movlw	3
  7130  000D22  0100               	movlb	0	; () banked
  7131  000D24  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7132  000D26  EC59  F019         	call	___wmul	;wreg free
  7133  000D2A  0EEC               	movlw	low __powers_
  7134  000D2C  0100               	movlb	0	; () banked
  7135  000D2E  256E               	addwf	?___wmul& (0+255),w,b
  7136  000D30  6EF6               	movwf	tblptrl,c
  7137  000D32  0E7E               	movlw	high __powers_
  7138  000D34  0100               	movlb	0	; () banked
  7139  000D36  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7140  000D38  6EF7               	movwf	tblptrh,c
  7141  000D3A                     	if	1	;There are 3 active tblptr bytes
  7142  000D3A  6AF8               	clrf	tblptru,c
  7143  000D3C  0E00               	movlw	low (__mediumconst shr (0+16))
  7144  000D3E  22F8               	addwfc	tblptru,f,c
  7145  000D40                     	endif
  7146  000D40  0009               	tblrd		*+
  7147  000D42  0100               	movlb	0	; () banked
  7148  000D44  CFF5 F074          	movff	tablat,___ftmul@f1
  7149  000D48  0009               	tblrd		*+
  7150  000D4A  0100               	movlb	0	; () banked
  7151  000D4C  CFF5 F075          	movff	tablat,___ftmul@f1+1
  7152  000D50  000A               	tblrd		*-
  7153  000D52  0100               	movlb	0	; () banked
  7154  000D54  CFF5 F076          	movff	tablat,___ftmul@f1+2
  7155  000D58  ECD0  F00C         	call	___ftmul	;wreg free
  7156  000D5C  C074  F086         	movff	?___ftmul,_scale$2761
  7157  000D60  C075  F087         	movff	?___ftmul+1,_scale$2761+1
  7158  000D64  C076  F088         	movff	?___ftmul+2,_scale$2761+2
  7159                           
  7160                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7161  000D68  C086  F074         	movff	_scale$2761,___ftmul@f1
  7162  000D6C  C087  F075         	movff	_scale$2761+1,___ftmul@f1+1
  7163  000D70  C088  F076         	movff	_scale$2761+2,___ftmul@f1+2
  7164  000D74  0E00               	movlw	0
  7165  000D76  0100               	movlb	0	; () banked
  7166  000D78  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7167  000D7A  0E03               	movlw	3
  7168  000D7C  0100               	movlb	0	; () banked
  7169  000D7E  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7170  000D80  0E00               	movlw	0
  7171  000D82  0100               	movlb	0	; () banked
  7172  000D84  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7173  000D86  0E0A               	movlw	10
  7174  000D88  0100               	movlb	0	; () banked
  7175  000D8A  6F62               	movwf	___awmod@divisor& (0+255),b
  7176  000D8C  0100               	movlb	0	; () banked
  7177  000D8E  5189               	movf	scale@scl& (0+255),w,b
  7178  000D90  0100               	movlb	0	; () banked
  7179  000D92  6F60               	movwf	___awmod@dividend& (0+255),b
  7180  000D94  0100               	movlb	0	; () banked
  7181  000D96  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  7182  000D98  0100               	movlb	0	; () banked
  7183  000D9A  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  7184  000D9C  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  7185  000D9E  ECBD  F012         	call	___awmod	;wreg free
  7186  000DA2  0100               	movlb	0	; () banked
  7187  000DA4  C060  F06E         	movff	?___awmod,___wmul@multiplier
  7188  000DA8  0100               	movlb	0	; () banked
  7189  000DAA  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  7190  000DAE  EC59  F019         	call	___wmul	;wreg free
  7191  000DB2  0EEC               	movlw	low __powers_
  7192  000DB4  0100               	movlb	0	; () banked
  7193  000DB6  256E               	addwf	?___wmul& (0+255),w,b
  7194  000DB8  6EF6               	movwf	tblptrl,c
  7195  000DBA  0E7E               	movlw	high __powers_
  7196  000DBC  0100               	movlb	0	; () banked
  7197  000DBE  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7198  000DC0  6EF7               	movwf	tblptrh,c
  7199  000DC2                     	if	1	;There are 3 active tblptr bytes
  7200  000DC2  6AF8               	clrf	tblptru,c
  7201  000DC4  0E00               	movlw	low (__mediumconst shr (0+16))
  7202  000DC6  22F8               	addwfc	tblptru,f,c
  7203  000DC8                     	endif
  7204  000DC8  0009               	tblrd		*+
  7205  000DCA  0100               	movlb	0	; () banked
  7206  000DCC  CFF5 F077          	movff	tablat,___ftmul@f2
  7207  000DD0  0009               	tblrd		*+
  7208  000DD2  0100               	movlb	0	; () banked
  7209  000DD4  CFF5 F078          	movff	tablat,___ftmul@f2+1
  7210  000DD8  000A               	tblrd		*-
  7211  000DDA  0100               	movlb	0	; () banked
  7212  000DDC  CFF5 F079          	movff	tablat,___ftmul@f2+2
  7213  000DE0  ECD0  F00C         	call	___ftmul	;wreg free
  7214  000DE4  D078               	goto	L15
  7215  000DE6                     l3500:
  7216                           
  7217                           ;doprnt.c: 438: else if(scl > 10)
  7218  000DE6  0100               	movlb	0	; () banked
  7219  000DE8  5189               	movf	scale@scl& (0+255),w,b
  7220  000DEA  0A80               	xorlw	128
  7221  000DEC  0F75               	addlw	-139
  7222  000DEE  A0D8               	btfss	status,0,c
  7223  000DF0  D079               	goto	l3506
  7224                           
  7225                           ; BSR set to: 0
  7226                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7227  000DF2  0E00               	movlw	0
  7228  000DF4  0100               	movlb	0	; () banked
  7229  000DF6  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  7230  000DF8  0E0A               	movlw	10
  7231  000DFA  0100               	movlb	0	; () banked
  7232  000DFC  6F68               	movwf	___awdiv@divisor& (0+255),b
  7233  000DFE  0100               	movlb	0	; () banked
  7234  000E00  5189               	movf	scale@scl& (0+255),w,b
  7235  000E02  0100               	movlb	0	; () banked
  7236  000E04  6F66               	movwf	___awdiv@dividend& (0+255),b
  7237  000E06  0100               	movlb	0	; () banked
  7238  000E08  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  7239  000E0A  0100               	movlb	0	; () banked
  7240  000E0C  BF66               	btfsc	___awdiv@dividend& (0+255),7,b
  7241  000E0E  0767               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7242  000E10  EC44  F010         	call	___awdiv	;wreg free
  7243  000E14  0E09               	movlw	9
  7244  000E16  0100               	movlb	0	; () banked
  7245  000E18  2566               	addwf	?___awdiv& (0+255),w,b
  7246  000E1A  0100               	movlb	0	; () banked
  7247  000E1C  6F6E               	movwf	___wmul@multiplier& (0+255),b
  7248  000E1E  0E00               	movlw	0
  7249  000E20  0100               	movlb	0	; () banked
  7250  000E22  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  7251  000E24  0100               	movlb	0	; () banked
  7252  000E26  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7253  000E28  0E00               	movlw	0
  7254  000E2A  0100               	movlb	0	; () banked
  7255  000E2C  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7256  000E2E  0E03               	movlw	3
  7257  000E30  0100               	movlb	0	; () banked
  7258  000E32  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7259  000E34  EC59  F019         	call	___wmul	;wreg free
  7260  000E38  0EEC               	movlw	low __powers_
  7261  000E3A  0100               	movlb	0	; () banked
  7262  000E3C  256E               	addwf	?___wmul& (0+255),w,b
  7263  000E3E  6EF6               	movwf	tblptrl,c
  7264  000E40  0E7E               	movlw	high __powers_
  7265  000E42  0100               	movlb	0	; () banked
  7266  000E44  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7267  000E46  6EF7               	movwf	tblptrh,c
  7268  000E48                     	if	1	;There are 3 active tblptr bytes
  7269  000E48  6AF8               	clrf	tblptru,c
  7270  000E4A  0E00               	movlw	low (__mediumconst shr (0+16))
  7271  000E4C  22F8               	addwfc	tblptru,f,c
  7272  000E4E                     	endif
  7273  000E4E  0009               	tblrd		*+
  7274  000E50  0100               	movlb	0	; () banked
  7275  000E52  CFF5 F074          	movff	tablat,___ftmul@f1
  7276  000E56  0009               	tblrd		*+
  7277  000E58  0100               	movlb	0	; () banked
  7278  000E5A  CFF5 F075          	movff	tablat,___ftmul@f1+1
  7279  000E5E  000A               	tblrd		*-
  7280  000E60  0100               	movlb	0	; () banked
  7281  000E62  CFF5 F076          	movff	tablat,___ftmul@f1+2
  7282  000E66  0E00               	movlw	0
  7283  000E68  0100               	movlb	0	; () banked
  7284  000E6A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7285  000E6C  0E03               	movlw	3
  7286  000E6E  0100               	movlb	0	; () banked
  7287  000E70  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7288  000E72  0E00               	movlw	0
  7289  000E74  0100               	movlb	0	; () banked
  7290  000E76  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7291  000E78  0E0A               	movlw	10
  7292  000E7A  0100               	movlb	0	; () banked
  7293  000E7C  6F62               	movwf	___awmod@divisor& (0+255),b
  7294  000E7E  0100               	movlb	0	; () banked
  7295  000E80  5189               	movf	scale@scl& (0+255),w,b
  7296  000E82  0100               	movlb	0	; () banked
  7297  000E84  6F60               	movwf	___awmod@dividend& (0+255),b
  7298  000E86  0100               	movlb	0	; () banked
  7299  000E88  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  7300  000E8A  0100               	movlb	0	; () banked
  7301  000E8C  BF60               	btfsc	___awmod@dividend& (0+255),7,b
  7302  000E8E  0761               	decf	(___awmod@dividend+1)& (0+255),f,b
  7303  000E90  ECBD  F012         	call	___awmod	;wreg free
  7304  000E94  0100               	movlb	0	; () banked
  7305  000E96  C060  F06E         	movff	?___awmod,___wmul@multiplier
  7306  000E9A  0100               	movlb	0	; () banked
  7307  000E9C  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  7308  000EA0  EC59  F019         	call	___wmul	;wreg free
  7309  000EA4  0EEC               	movlw	low __powers_
  7310  000EA6  0100               	movlb	0	; () banked
  7311  000EA8  256E               	addwf	?___wmul& (0+255),w,b
  7312  000EAA  6EF6               	movwf	tblptrl,c
  7313  000EAC  0E7E               	movlw	high __powers_
  7314  000EAE  0100               	movlb	0	; () banked
  7315  000EB0  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7316  000EB2  6EF7               	movwf	tblptrh,c
  7317  000EB4                     	if	1	;There are 3 active tblptr bytes
  7318  000EB4  6AF8               	clrf	tblptru,c
  7319  000EB6  0E00               	movlw	low (__mediumconst shr (0+16))
  7320  000EB8  22F8               	addwfc	tblptru,f,c
  7321  000EBA                     	endif
  7322  000EBA  0009               	tblrd		*+
  7323  000EBC  0100               	movlb	0	; () banked
  7324  000EBE  CFF5 F077          	movff	tablat,___ftmul@f2
  7325  000EC2  0009               	tblrd		*+
  7326  000EC4  0100               	movlb	0	; () banked
  7327  000EC6  CFF5 F078          	movff	tablat,___ftmul@f2+1
  7328  000ECA  000A               	tblrd		*-
  7329  000ECC  0100               	movlb	0	; () banked
  7330  000ECE  CFF5 F079          	movff	tablat,___ftmul@f2+2
  7331  000ED2  ECD0  F00C         	call	___ftmul	;wreg free
  7332  000ED6                     L15:
  7333  000ED6  C074  F083         	movff	?___ftmul,?_scale
  7334  000EDA  C075  F084         	movff	?___ftmul+1,?_scale+1
  7335  000EDE  C076  F085         	movff	?___ftmul+2,?_scale+2
  7336  000EE2  D018               	goto	l491
  7337  000EE4                     l3506:
  7338                           
  7339                           ;doprnt.c: 440: return _powers_[scl];
  7340  000EE4  0100               	movlb	0	; () banked
  7341  000EE6  5189               	movf	scale@scl& (0+255),w,b
  7342  000EE8  0D03               	mullw	3
  7343  000EEA  0EEC               	movlw	low __powers_
  7344  000EEC  24F3               	addwf	prodl,w,c
  7345  000EEE  6EF6               	movwf	tblptrl,c
  7346  000EF0  0E7E               	movlw	high __powers_
  7347  000EF2                     L14:
  7348  000EF2  20F4               	addwfc	prodh,w,c
  7349  000EF4  6EF7               	movwf	tblptrh,c
  7350  000EF6                     	if	1	;There are 3 active tblptr bytes
  7351  000EF6  6AF8               	clrf	tblptru,c
  7352  000EF8  0E00               	movlw	low (__mediumconst shr (0+16))
  7353  000EFA  22F8               	addwfc	tblptru,f,c
  7354  000EFC                     	endif
  7355  000EFC  0009               	tblrd		*+
  7356  000EFE  0100               	movlb	0	; () banked
  7357  000F00  CFF5 F083          	movff	tablat,?_scale
  7358  000F04  0009               	tblrd		*+
  7359  000F06  0100               	movlb	0	; () banked
  7360  000F08  CFF5 F084          	movff	tablat,?_scale+1
  7361  000F0C  000A               	tblrd		*-
  7362  000F0E  0100               	movlb	0	; () banked
  7363  000F10  CFF5 F085          	movff	tablat,?_scale+2
  7364  000F14                     l491:
  7365  000F14  0012               	return	
  7366  000F16                     __end_of_scale:
  7367                           	opt stack 0
  7368                           tblptru	equ	0xFF8
  7369                           tblptrh	equ	0xFF7
  7370                           tblptrl	equ	0xFF6
  7371                           tablat	equ	0xFF5
  7372                           prodh	equ	0xFF4
  7373                           prodl	equ	0xFF3
  7374                           intcon	equ	0xFF2
  7375                           intcon2	equ	0xFF1
  7376                           intcon3	equ	0xFF0
  7377                           indf0	equ	0xFEF
  7378                           postinc0	equ	0xFEE
  7379                           fsr0h	equ	0xFEA
  7380                           fsr0l	equ	0xFE9
  7381                           wreg	equ	0xFE8
  7382                           postinc1	equ	0xFE6
  7383                           postdec1	equ	0xFE5
  7384                           fsr1l	equ	0xFE1
  7385                           indf2	equ	0xFDF
  7386                           postinc2	equ	0xFDE
  7387                           postdec2	equ	0xFDD
  7388                           fsr2h	equ	0xFDA
  7389                           fsr2l	equ	0xFD9
  7390                           status	equ	0xFD8
  7391                           
  7392 ;; *************** function _fround *****************
  7393 ;; Defined at:
  7394 ;;		line 409 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\doprnt.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;  prec            1    wreg     unsigned char 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;  prec            1   44[BANK0 ] unsigned char 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  3   35[BANK0 ] unsigned char 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7408 ;;      Params:         0       3       0       0       0       0       0       0       0
  7409 ;;      Locals:         0       7       0       0       0       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7411 ;;      Totals:         0      10       0       0       0       0       0       0       0
  7412 ;;Total ram usage:       10 bytes
  7413 ;; Hardware stack levels used:    1
  7414 ;; Hardware stack levels required when called:    6
  7415 ;; This function calls:
  7416 ;;		___awdiv
  7417 ;;		___awmod
  7418 ;;		___ftmul
  7419 ;;		___wmul
  7420 ;; This function is called by:
  7421 ;;		_sprintf
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           	psect	text30
  7426  000F16                     __ptext30:
  7427                           	opt stack 0
  7428  000F16                     _fround:
  7429                           	opt stack 21
  7430                           
  7431                           ;incstack = 0
  7432                           ;fround@prec stored from wreg
  7433  000F16  0100               	movlb	0	; () banked
  7434  000F18  6F8C               	movwf	fround@prec& (0+255),b
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;doprnt.c: 413: if(prec>=110)
  7438  000F1A  0E6D               	movlw	109
  7439  000F1C  0100               	movlb	0	; () banked
  7440  000F1E  658C               	cpfsgt	fround@prec& (0+255),b
  7441  000F20  D0D4               	goto	l3460
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7445  000F22  0E00               	movlw	0
  7446  000F24  0100               	movlb	0	; () banked
  7447  000F26  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7448  000F28  0E03               	movlw	3
  7449  000F2A  0100               	movlb	0	; () banked
  7450  000F2C  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7451  000F2E  0E00               	movlw	0
  7452  000F30  0100               	movlb	0	; () banked
  7453  000F32  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  7454  000F34  0E0A               	movlw	10
  7455  000F36  0100               	movlb	0	; () banked
  7456  000F38  6F68               	movwf	___awdiv@divisor& (0+255),b
  7457  000F3A  0E00               	movlw	0
  7458  000F3C  0100               	movlb	0	; () banked
  7459  000F3E  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7460  000F40  0E64               	movlw	100
  7461  000F42  0100               	movlb	0	; () banked
  7462  000F44  6F62               	movwf	___awmod@divisor& (0+255),b
  7463  000F46  0100               	movlb	0	; () banked
  7464  000F48  C08C  F060         	movff	fround@prec,___awmod@dividend
  7465  000F4C  0100               	movlb	0	; () banked
  7466  000F4E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  7467  000F50  ECBD  F012         	call	___awmod	;wreg free
  7468  000F54  0100               	movlb	0	; () banked
  7469  000F56  C060  F066         	movff	?___awmod,___awdiv@dividend
  7470  000F5A  0100               	movlb	0	; () banked
  7471  000F5C  C061  F067         	movff	?___awmod+1,___awdiv@dividend+1
  7472  000F60  EC44  F010         	call	___awdiv	;wreg free
  7473  000F64  0E09               	movlw	9
  7474  000F66  0100               	movlb	0	; () banked
  7475  000F68  2566               	addwf	?___awdiv& (0+255),w,b
  7476  000F6A  0100               	movlb	0	; () banked
  7477  000F6C  6F6E               	movwf	___wmul@multiplier& (0+255),b
  7478  000F6E  0E00               	movlw	0
  7479  000F70  0100               	movlb	0	; () banked
  7480  000F72  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  7481  000F74  0100               	movlb	0	; () banked
  7482  000F76  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7483  000F78  EC59  F019         	call	___wmul	;wreg free
  7484  000F7C  0EC5               	movlw	low __npowers_
  7485  000F7E  0100               	movlb	0	; () banked
  7486  000F80  256E               	addwf	?___wmul& (0+255),w,b
  7487  000F82  6EF6               	movwf	tblptrl,c
  7488  000F84  0E7E               	movlw	high __npowers_
  7489  000F86  0100               	movlb	0	; () banked
  7490  000F88  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7491  000F8A  6EF7               	movwf	tblptrh,c
  7492  000F8C                     	if	1	;There are 3 active tblptr bytes
  7493  000F8C  6AF8               	clrf	tblptru,c
  7494  000F8E  0E00               	movlw	low (__mediumconst shr (0+16))
  7495  000F90  22F8               	addwfc	tblptru,f,c
  7496  000F92                     	endif
  7497  000F92  0009               	tblrd		*+
  7498  000F94  0100               	movlb	0	; () banked
  7499  000F96  CFF5 F077          	movff	tablat,___ftmul@f2
  7500  000F9A  0009               	tblrd		*+
  7501  000F9C  0100               	movlb	0	; () banked
  7502  000F9E  CFF5 F078          	movff	tablat,___ftmul@f2+1
  7503  000FA2  000A               	tblrd		*-
  7504  000FA4  0100               	movlb	0	; () banked
  7505  000FA6  CFF5 F079          	movff	tablat,___ftmul@f2+2
  7506  000FAA  0E00               	movlw	0
  7507  000FAC  0100               	movlb	0	; () banked
  7508  000FAE  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  7509  000FB0  0E64               	movlw	100
  7510  000FB2  0100               	movlb	0	; () banked
  7511  000FB4  6F68               	movwf	___awdiv@divisor& (0+255),b
  7512  000FB6  0100               	movlb	0	; () banked
  7513  000FB8  C08C  F066         	movff	fround@prec,___awdiv@dividend
  7514  000FBC  0100               	movlb	0	; () banked
  7515  000FBE  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  7516  000FC0  EC44  F010         	call	___awdiv	;wreg free
  7517  000FC4  0E12               	movlw	18
  7518  000FC6  0100               	movlb	0	; () banked
  7519  000FC8  2566               	addwf	?___awdiv& (0+255),w,b
  7520  000FCA  0100               	movlb	0	; () banked
  7521  000FCC  6F6E               	movwf	___wmul@multiplier& (0+255),b
  7522  000FCE  0E00               	movlw	0
  7523  000FD0  0100               	movlb	0	; () banked
  7524  000FD2  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  7525  000FD4  0100               	movlb	0	; () banked
  7526  000FD6  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7527  000FD8  0E00               	movlw	0
  7528  000FDA  0100               	movlb	0	; () banked
  7529  000FDC  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7530  000FDE  0E03               	movlw	3
  7531  000FE0  0100               	movlb	0	; () banked
  7532  000FE2  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7533  000FE4  EC59  F019         	call	___wmul	;wreg free
  7534  000FE8  0EC5               	movlw	low __npowers_
  7535  000FEA  0100               	movlb	0	; () banked
  7536  000FEC  256E               	addwf	?___wmul& (0+255),w,b
  7537  000FEE  6EF6               	movwf	tblptrl,c
  7538  000FF0  0E7E               	movlw	high __npowers_
  7539  000FF2  0100               	movlb	0	; () banked
  7540  000FF4  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7541  000FF6  6EF7               	movwf	tblptrh,c
  7542  000FF8                     	if	1	;There are 3 active tblptr bytes
  7543  000FF8  6AF8               	clrf	tblptru,c
  7544  000FFA  0E00               	movlw	low (__mediumconst shr (0+16))
  7545  000FFC  22F8               	addwfc	tblptru,f,c
  7546  000FFE                     	endif
  7547  000FFE  0009               	tblrd		*+
  7548  001000  0100               	movlb	0	; () banked
  7549  001002  CFF5 F074          	movff	tablat,___ftmul@f1
  7550  001006  0009               	tblrd		*+
  7551  001008  0100               	movlb	0	; () banked
  7552  00100A  CFF5 F075          	movff	tablat,___ftmul@f1+1
  7553  00100E  000A               	tblrd		*-
  7554  001010  0100               	movlb	0	; () banked
  7555  001012  CFF5 F076          	movff	tablat,___ftmul@f1+2
  7556  001016  ECD0  F00C         	call	___ftmul	;wreg free
  7557  00101A  C074  F089         	movff	?___ftmul,_fround$2759
  7558  00101E  C075  F08A         	movff	?___ftmul+1,_fround$2759+1
  7559  001022  C076  F08B         	movff	?___ftmul+2,_fround$2759+2
  7560                           
  7561                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7562  001026  0E00               	movlw	0
  7563  001028  0100               	movlb	0	; () banked
  7564  00102A  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7565  00102C  0E03               	movlw	3
  7566  00102E  0100               	movlb	0	; () banked
  7567  001030  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7568  001032  0E00               	movlw	0
  7569  001034  0100               	movlb	0	; () banked
  7570  001036  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7571  001038  0E0A               	movlw	10
  7572  00103A  0100               	movlb	0	; () banked
  7573  00103C  6F62               	movwf	___awmod@divisor& (0+255),b
  7574  00103E  0100               	movlb	0	; () banked
  7575  001040  C08C  F060         	movff	fround@prec,___awmod@dividend
  7576  001044  0100               	movlb	0	; () banked
  7577  001046  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  7578  001048  ECBD  F012         	call	___awmod	;wreg free
  7579  00104C  0100               	movlb	0	; () banked
  7580  00104E  C060  F06E         	movff	?___awmod,___wmul@multiplier
  7581  001052  0100               	movlb	0	; () banked
  7582  001054  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  7583  001058  EC59  F019         	call	___wmul	;wreg free
  7584  00105C  0EC5               	movlw	low __npowers_
  7585  00105E  0100               	movlb	0	; () banked
  7586  001060  256E               	addwf	?___wmul& (0+255),w,b
  7587  001062  6EF6               	movwf	tblptrl,c
  7588  001064  0E7E               	movlw	high __npowers_
  7589  001066  0100               	movlb	0	; () banked
  7590  001068  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7591  00106A  6EF7               	movwf	tblptrh,c
  7592  00106C                     	if	1	;There are 3 active tblptr bytes
  7593  00106C  6AF8               	clrf	tblptru,c
  7594  00106E  0E00               	movlw	low (__mediumconst shr (0+16))
  7595  001070  22F8               	addwfc	tblptru,f,c
  7596  001072                     	endif
  7597  001072  0009               	tblrd		*+
  7598  001074  0100               	movlb	0	; () banked
  7599  001076  CFF5 F077          	movff	tablat,___ftmul@f2
  7600  00107A  0009               	tblrd		*+
  7601  00107C  0100               	movlb	0	; () banked
  7602  00107E  CFF5 F078          	movff	tablat,___ftmul@f2+1
  7603  001082  000A               	tblrd		*-
  7604  001084  0100               	movlb	0	; () banked
  7605  001086  CFF5 F079          	movff	tablat,___ftmul@f2+2
  7606  00108A  C089  F074         	movff	_fround$2759,___ftmul@f1
  7607  00108E  C08A  F075         	movff	_fround$2759+1,___ftmul@f1+1
  7608  001092  C08B  F076         	movff	_fround$2759+2,___ftmul@f1+2
  7609  001096  ECD0  F00C         	call	___ftmul	;wreg free
  7610  00109A  C074  F086         	movff	?___ftmul,_fround$2760
  7611  00109E  C075  F087         	movff	?___ftmul+1,_fround$2760+1
  7612  0010A2  C076  F088         	movff	?___ftmul+2,_fround$2760+2
  7613                           
  7614                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7615  0010A6  C086  F074         	movff	_fround$2760,___ftmul@f1
  7616  0010AA  C087  F075         	movff	_fround$2760+1,___ftmul@f1+1
  7617  0010AE  C088  F076         	movff	_fround$2760+2,___ftmul@f1+2
  7618  0010B2  0E00               	movlw	0
  7619  0010B4  0100               	movlb	0	; () banked
  7620  0010B6  6F77               	movwf	___ftmul@f2& (0+255),b
  7621  0010B8  0E00               	movlw	0
  7622  0010BA  0100               	movlb	0	; () banked
  7623  0010BC  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  7624  0010BE  0E3F               	movlw	63
  7625  0010C0  0100               	movlb	0	; () banked
  7626  0010C2  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  7627  0010C4  ECD0  F00C         	call	___ftmul	;wreg free
  7628  0010C8  D0A9               	goto	L17
  7629  0010CA                     l3460:
  7630                           
  7631                           ;doprnt.c: 415: else if(prec > 10)
  7632  0010CA  0E0A               	movlw	10
  7633  0010CC  0100               	movlb	0	; () banked
  7634  0010CE  658C               	cpfsgt	fround@prec& (0+255),b
  7635  0010D0  D082               	goto	l3468
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7639  0010D2  0E00               	movlw	0
  7640  0010D4  0100               	movlb	0	; () banked
  7641  0010D6  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7642  0010D8  0E03               	movlw	3
  7643  0010DA  0100               	movlb	0	; () banked
  7644  0010DC  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7645  0010DE  0E00               	movlw	0
  7646  0010E0  0100               	movlb	0	; () banked
  7647  0010E2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  7648  0010E4  0E0A               	movlw	10
  7649  0010E6  0100               	movlb	0	; () banked
  7650  0010E8  6F62               	movwf	___awmod@divisor& (0+255),b
  7651  0010EA  0100               	movlb	0	; () banked
  7652  0010EC  C08C  F060         	movff	fround@prec,___awmod@dividend
  7653  0010F0  0100               	movlb	0	; () banked
  7654  0010F2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
  7655  0010F4  ECBD  F012         	call	___awmod	;wreg free
  7656  0010F8  0100               	movlb	0	; () banked
  7657  0010FA  C060  F06E         	movff	?___awmod,___wmul@multiplier
  7658  0010FE  0100               	movlb	0	; () banked
  7659  001100  C061  F06F         	movff	?___awmod+1,___wmul@multiplier+1
  7660  001104  EC59  F019         	call	___wmul	;wreg free
  7661  001108  0EC5               	movlw	low __npowers_
  7662  00110A  0100               	movlb	0	; () banked
  7663  00110C  256E               	addwf	?___wmul& (0+255),w,b
  7664  00110E  6EF6               	movwf	tblptrl,c
  7665  001110  0E7E               	movlw	high __npowers_
  7666  001112  0100               	movlb	0	; () banked
  7667  001114  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7668  001116  6EF7               	movwf	tblptrh,c
  7669  001118                     	if	1	;There are 3 active tblptr bytes
  7670  001118  6AF8               	clrf	tblptru,c
  7671  00111A  0E00               	movlw	low (__mediumconst shr (0+16))
  7672  00111C  22F8               	addwfc	tblptru,f,c
  7673  00111E                     	endif
  7674  00111E  0009               	tblrd		*+
  7675  001120  0100               	movlb	0	; () banked
  7676  001122  CFF5 F077          	movff	tablat,___ftmul@f2
  7677  001126  0009               	tblrd		*+
  7678  001128  0100               	movlb	0	; () banked
  7679  00112A  CFF5 F078          	movff	tablat,___ftmul@f2+1
  7680  00112E  000A               	tblrd		*-
  7681  001130  0100               	movlb	0	; () banked
  7682  001132  CFF5 F079          	movff	tablat,___ftmul@f2+2
  7683  001136  0E00               	movlw	0
  7684  001138  0100               	movlb	0	; () banked
  7685  00113A  6F69               	movwf	(___awdiv@divisor+1)& (0+255),b
  7686  00113C  0E0A               	movlw	10
  7687  00113E  0100               	movlb	0	; () banked
  7688  001140  6F68               	movwf	___awdiv@divisor& (0+255),b
  7689  001142  0100               	movlb	0	; () banked
  7690  001144  C08C  F066         	movff	fround@prec,___awdiv@dividend
  7691  001148  0100               	movlb	0	; () banked
  7692  00114A  6B67               	clrf	(___awdiv@dividend+1)& (0+255),b
  7693  00114C  EC44  F010         	call	___awdiv	;wreg free
  7694  001150  0E09               	movlw	9
  7695  001152  0100               	movlb	0	; () banked
  7696  001154  2566               	addwf	?___awdiv& (0+255),w,b
  7697  001156  0100               	movlb	0	; () banked
  7698  001158  6F6E               	movwf	___wmul@multiplier& (0+255),b
  7699  00115A  0E00               	movlw	0
  7700  00115C  0100               	movlb	0	; () banked
  7701  00115E  2167               	addwfc	(?___awdiv+1)& (0+255),w,b
  7702  001160  0100               	movlb	0	; () banked
  7703  001162  6F6F               	movwf	(___wmul@multiplier+1)& (0+255),b
  7704  001164  0E00               	movlw	0
  7705  001166  0100               	movlb	0	; () banked
  7706  001168  6F71               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7707  00116A  0E03               	movlw	3
  7708  00116C  0100               	movlb	0	; () banked
  7709  00116E  6F70               	movwf	___wmul@multiplicand& (0+255),b
  7710  001170  EC59  F019         	call	___wmul	;wreg free
  7711  001174  0EC5               	movlw	low __npowers_
  7712  001176  0100               	movlb	0	; () banked
  7713  001178  256E               	addwf	?___wmul& (0+255),w,b
  7714  00117A  6EF6               	movwf	tblptrl,c
  7715  00117C  0E7E               	movlw	high __npowers_
  7716  00117E  0100               	movlb	0	; () banked
  7717  001180  216F               	addwfc	(?___wmul+1)& (0+255),w,b
  7718  001182  6EF7               	movwf	tblptrh,c
  7719  001184                     	if	1	;There are 3 active tblptr bytes
  7720  001184  6AF8               	clrf	tblptru,c
  7721  001186  0E00               	movlw	low (__mediumconst shr (0+16))
  7722  001188  22F8               	addwfc	tblptru,f,c
  7723  00118A                     	endif
  7724  00118A  0009               	tblrd		*+
  7725  00118C  0100               	movlb	0	; () banked
  7726  00118E  CFF5 F074          	movff	tablat,___ftmul@f1
  7727  001192  0009               	tblrd		*+
  7728  001194  0100               	movlb	0	; () banked
  7729  001196  CFF5 F075          	movff	tablat,___ftmul@f1+1
  7730  00119A  000A               	tblrd		*-
  7731  00119C  0100               	movlb	0	; () banked
  7732  00119E  CFF5 F076          	movff	tablat,___ftmul@f1+2
  7733  0011A2  ECD0  F00C         	call	___ftmul	;wreg free
  7734  0011A6  C074  F089         	movff	?___ftmul,_fround$2759
  7735  0011AA  C075  F08A         	movff	?___ftmul+1,_fround$2759+1
  7736  0011AE  C076  F08B         	movff	?___ftmul+2,_fround$2759+2
  7737                           
  7738                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  7739  0011B2  C089  F074         	movff	_fround$2759,___ftmul@f1
  7740  0011B6  C08A  F075         	movff	_fround$2759+1,___ftmul@f1+1
  7741  0011BA  C08B  F076         	movff	_fround$2759+2,___ftmul@f1+2
  7742  0011BE  0E00               	movlw	0
  7743  0011C0  0100               	movlb	0	; () banked
  7744  0011C2  6F77               	movwf	___ftmul@f2& (0+255),b
  7745  0011C4  0E00               	movlw	0
  7746  0011C6  0100               	movlb	0	; () banked
  7747  0011C8  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  7748  0011CA  0E3F               	movlw	63
  7749  0011CC  0100               	movlb	0	; () banked
  7750  0011CE  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  7751  0011D0  ECD0  F00C         	call	___ftmul	;wreg free
  7752  0011D4  D023               	goto	L17
  7753  0011D6                     l3468:
  7754                           
  7755                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  7756  0011D6  0100               	movlb	0	; () banked
  7757  0011D8  518C               	movf	fround@prec& (0+255),w,b
  7758  0011DA  0D03               	mullw	3
  7759  0011DC  0EC5               	movlw	low __npowers_
  7760  0011DE  24F3               	addwf	prodl,w,c
  7761  0011E0  6EF6               	movwf	tblptrl,c
  7762  0011E2  0E7E               	movlw	high __npowers_
  7763  0011E4  20F4               	addwfc	prodh,w,c
  7764  0011E6  6EF7               	movwf	tblptrh,c
  7765  0011E8                     	if	1	;There are 3 active tblptr bytes
  7766  0011E8  6AF8               	clrf	tblptru,c
  7767  0011EA  0E00               	movlw	low (__mediumconst shr (0+16))
  7768  0011EC  22F8               	addwfc	tblptru,f,c
  7769  0011EE                     	endif
  7770  0011EE  0009               	tblrd		*+
  7771  0011F0  0100               	movlb	0	; () banked
  7772  0011F2  CFF5 F074          	movff	tablat,___ftmul@f1
  7773  0011F6  0009               	tblrd		*+
  7774  0011F8  0100               	movlb	0	; () banked
  7775  0011FA  CFF5 F075          	movff	tablat,___ftmul@f1+1
  7776  0011FE  000A               	tblrd		*-
  7777  001200  0100               	movlb	0	; () banked
  7778  001202  CFF5 F076          	movff	tablat,___ftmul@f1+2
  7779  001206  0E00               	movlw	0
  7780  001208  0100               	movlb	0	; () banked
  7781  00120A  6F77               	movwf	___ftmul@f2& (0+255),b
  7782  00120C  0E00               	movlw	0
  7783  00120E  0100               	movlb	0	; () banked
  7784  001210  6F78               	movwf	(___ftmul@f2+1)& (0+255),b
  7785  001212  0E3F               	movlw	63
  7786  001214  0100               	movlb	0	; () banked
  7787  001216  6F79               	movwf	(___ftmul@f2+2)& (0+255),b
  7788  001218  ECD0  F00C         	call	___ftmul	;wreg free
  7789  00121C                     L17:
  7790  00121C  C074  F083         	movff	?___ftmul,?_fround
  7791  001220  C075  F084         	movff	?___ftmul+1,?_fround+1
  7792  001224  C076  F085         	movff	?___ftmul+2,?_fround+2
  7793  001228  0012               	return	
  7794  00122A                     __end_of_fround:
  7795                           	opt stack 0
  7796                           tblptru	equ	0xFF8
  7797                           tblptrh	equ	0xFF7
  7798                           tblptrl	equ	0xFF6
  7799                           tablat	equ	0xFF5
  7800                           prodh	equ	0xFF4
  7801                           prodl	equ	0xFF3
  7802                           intcon	equ	0xFF2
  7803                           intcon2	equ	0xFF1
  7804                           intcon3	equ	0xFF0
  7805                           indf0	equ	0xFEF
  7806                           postinc0	equ	0xFEE
  7807                           fsr0h	equ	0xFEA
  7808                           fsr0l	equ	0xFE9
  7809                           wreg	equ	0xFE8
  7810                           postinc1	equ	0xFE6
  7811                           postdec1	equ	0xFE5
  7812                           fsr1l	equ	0xFE1
  7813                           indf2	equ	0xFDF
  7814                           postinc2	equ	0xFDE
  7815                           postdec2	equ	0xFDD
  7816                           fsr2h	equ	0xFDA
  7817                           fsr2l	equ	0xFD9
  7818                           status	equ	0xFD8
  7819                           
  7820 ;; *************** function ___wmul *****************
  7821 ;; Defined at:
  7822 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\Umul16.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  multiplier      2   14[BANK0 ] unsigned int 
  7825 ;;  multiplicand    2   16[BANK0 ] unsigned int 
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;  product         2   18[BANK0 ] unsigned int 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  2   14[BANK0 ] unsigned int 
  7830 ;; Registers used:
  7831 ;;		wreg, status,2, status,0, prodl, prodh
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7837 ;;      Params:         0       4       0       0       0       0       0       0       0
  7838 ;;      Locals:         0       2       0       0       0       0       0       0       0
  7839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7840 ;;      Totals:         0       6       0       0       0       0       0       0       0
  7841 ;;Total ram usage:        6 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; Hardware stack levels required when called:    4
  7844 ;; This function calls:
  7845 ;;		Nothing
  7846 ;; This function is called by:
  7847 ;;		_fround
  7848 ;;		_scale
  7849 ;;		_sprintf
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           	psect	text31
  7854  0032B2                     __ptext31:
  7855                           	opt stack 0
  7856  0032B2                     ___wmul:
  7857                           	opt stack 22
  7858                           
  7859                           ;incstack = 0
  7860  0032B2  0100               	movlb	0	; () banked
  7861  0032B4  516E               	movf	___wmul@multiplier& (0+255),w,b
  7862  0032B6  0100               	movlb	0	; () banked
  7863  0032B8  0370               	mulwf	___wmul@multiplicand& (0+255),b
  7864  0032BA  CFF3 F072          	movff	prodl,___wmul@product
  7865  0032BE  CFF4 F073          	movff	prodh,___wmul@product+1
  7866  0032C2  0100               	movlb	0	; () banked
  7867  0032C4  516E               	movf	___wmul@multiplier& (0+255),w,b
  7868  0032C6  0100               	movlb	0	; () banked
  7869  0032C8  0371               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  7870  0032CA  50F3               	movf	prodl,w,c
  7871  0032CC  0100               	movlb	0	; () banked
  7872  0032CE  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  7873  0032D0  0100               	movlb	0	; () banked
  7874  0032D2  516F               	movf	(___wmul@multiplier+1)& (0+255),w,b
  7875  0032D4  0100               	movlb	0	; () banked
  7876  0032D6  0370               	mulwf	___wmul@multiplicand& (0+255),b
  7877  0032D8  50F3               	movf	prodl,w,c
  7878  0032DA  0100               	movlb	0	; () banked
  7879  0032DC  2773               	addwf	(___wmul@product+1)& (0+255),f,b
  7880                           
  7881                           ; BSR set to: 0
  7882  0032DE  C072  F06E         	movff	___wmul@product,?___wmul
  7883  0032E2  C073  F06F         	movff	___wmul@product+1,?___wmul+1
  7884                           
  7885                           ; BSR set to: 0
  7886                           
  7887                           ; BSR set to: 0
  7888  0032E6  0012               	return	
  7889  0032E8                     __end_of___wmul:
  7890                           	opt stack 0
  7891                           tblptru	equ	0xFF8
  7892                           tblptrh	equ	0xFF7
  7893                           tblptrl	equ	0xFF6
  7894                           tablat	equ	0xFF5
  7895                           prodh	equ	0xFF4
  7896                           prodl	equ	0xFF3
  7897                           intcon	equ	0xFF2
  7898                           intcon2	equ	0xFF1
  7899                           intcon3	equ	0xFF0
  7900                           indf0	equ	0xFEF
  7901                           postinc0	equ	0xFEE
  7902                           fsr0h	equ	0xFEA
  7903                           fsr0l	equ	0xFE9
  7904                           wreg	equ	0xFE8
  7905                           postinc1	equ	0xFE6
  7906                           postdec1	equ	0xFE5
  7907                           fsr1l	equ	0xFE1
  7908                           indf2	equ	0xFDF
  7909                           postinc2	equ	0xFDE
  7910                           postdec2	equ	0xFDD
  7911                           fsr2h	equ	0xFDA
  7912                           fsr2l	equ	0xFD9
  7913                           status	equ	0xFD8
  7914                           
  7915 ;; *************** function ___ftmul *****************
  7916 ;; Defined at:
  7917 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;  f1              3   20[BANK0 ] float 
  7920 ;;  f2              3   23[BANK0 ] float 
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;  f3_as_produc    3   30[BANK0 ] unsigned um
  7923 ;;  sign            1   34[BANK0 ] unsigned char 
  7924 ;;  cntr            1   33[BANK0 ] unsigned char 
  7925 ;;  exp             1   29[BANK0 ] unsigned char 
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  3   20[BANK0 ] float 
  7928 ;; Registers used:
  7929 ;;		wreg, status,2, status,0, cstack
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7935 ;;      Params:         0       6       0       0       0       0       0       0       0
  7936 ;;      Locals:         0       6       0       0       0       0       0       0       0
  7937 ;;      Temps:          0       3       0       0       0       0       0       0       0
  7938 ;;      Totals:         0      15       0       0       0       0       0       0       0
  7939 ;;Total ram usage:       15 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; Hardware stack levels required when called:    5
  7942 ;; This function calls:
  7943 ;;		___ftpack
  7944 ;; This function is called by:
  7945 ;;		_PWM_DutyCycle1
  7946 ;;		_PWM_DutyCycle2
  7947 ;;		_fround
  7948 ;;		_scale
  7949 ;;		_sprintf
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           	psect	text32
  7954  0019A0                     __ptext32:
  7955                           	opt stack 0
  7956  0019A0                     ___ftmul:
  7957                           	opt stack 21
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;incstack = 0
  7961  0019A0  0100               	movlb	0	; () banked
  7962  0019A2  C076  F07A         	movff	___ftmul@f1+2,??___ftmul
  7963  0019A6  0100               	movlb	0	; () banked
  7964  0019A8  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  7965  0019AA  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  7966  0019AC  0100               	movlb	0	; () banked
  7967  0019AE  3575               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  7968  0019B0  0100               	movlb	0	; () banked
  7969  0019B2  377A               	rlcf	??___ftmul& (0+255),f,b
  7970  0019B4  E301               	bnc	u2971
  7971  0019B6  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  7972  0019B8                     u2971:
  7973  0019B8  0100               	movlb	0	; () banked
  7974  0019BA  517A               	movf	??___ftmul& (0+255),w,b
  7975  0019BC  0100               	movlb	0	; () banked
  7976  0019BE  6F7D               	movwf	___ftmul@exp& (0+255),b
  7977  0019C0  0100               	movlb	0	; () banked
  7978  0019C2  677D               	tstfsz	___ftmul@exp& (0+255),b
  7979  0019C4  D001               	goto	l3232
  7980  0019C6  D013               	goto	u3000
  7981  0019C8                     l3232:
  7982                           
  7983                           ; BSR set to: 0
  7984  0019C8  0100               	movlb	0	; () banked
  7985  0019CA  C079  F07A         	movff	___ftmul@f2+2,??___ftmul
  7986  0019CE  0100               	movlb	0	; () banked
  7987  0019D0  6B7B               	clrf	(??___ftmul+1)& (0+255),b
  7988  0019D2  6B7C               	clrf	(??___ftmul+2)& (0+255),b
  7989  0019D4  0100               	movlb	0	; () banked
  7990  0019D6  3578               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  7991  0019D8  0100               	movlb	0	; () banked
  7992  0019DA  377A               	rlcf	??___ftmul& (0+255),f,b
  7993  0019DC  E301               	bnc	u2991
  7994  0019DE  817B               	bsf	(??___ftmul+1)& (0+255),0,b
  7995  0019E0                     u2991:
  7996  0019E0  0100               	movlb	0	; () banked
  7997  0019E2  517A               	movf	??___ftmul& (0+255),w,b
  7998  0019E4  0100               	movlb	0	; () banked
  7999  0019E6  6F82               	movwf	___ftmul@sign& (0+255),b
  8000  0019E8  0100               	movlb	0	; () banked
  8001  0019EA  6782               	tstfsz	___ftmul@sign& (0+255),b
  8002  0019EC  D00A               	goto	l3238
  8003  0019EE                     u3000:
  8004                           
  8005                           ; BSR set to: 0
  8006  0019EE  0E00               	movlw	0
  8007  0019F0  0100               	movlb	0	; () banked
  8008  0019F2  6F74               	movwf	?___ftmul& (0+255),b
  8009  0019F4  0E00               	movlw	0
  8010  0019F6  0100               	movlb	0	; () banked
  8011  0019F8  6F75               	movwf	(?___ftmul+1)& (0+255),b
  8012  0019FA  0E00               	movlw	0
  8013  0019FC  0100               	movlb	0	; () banked
  8014  0019FE  6F76               	movwf	(?___ftmul+2)& (0+255),b
  8015  001A00  D080               	goto	l1085
  8016  001A02                     l3238:
  8017                           
  8018                           ; BSR set to: 0
  8019  001A02  0100               	movlb	0	; () banked
  8020  001A04  5182               	movf	___ftmul@sign& (0+255),w,b
  8021  001A06  0F7B               	addlw	123
  8022  001A08  0100               	movlb	0	; () banked
  8023  001A0A  277D               	addwf	___ftmul@exp& (0+255),f,b
  8024                           
  8025                           ; BSR set to: 0
  8026  001A0C  C076  F082         	movff	___ftmul@f1+2,___ftmul@sign
  8027  001A10  0100               	movlb	0	; () banked
  8028  001A12  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  8029  001A14  0100               	movlb	0	; () banked
  8030  001A16  1B82               	xorwf	___ftmul@sign& (0+255),f,b
  8031  001A18  0E80               	movlw	128
  8032  001A1A  0100               	movlb	0	; () banked
  8033  001A1C  1782               	andwf	___ftmul@sign& (0+255),f,b
  8034                           
  8035                           ; BSR set to: 0
  8036  001A1E  0100               	movlb	0	; () banked
  8037  001A20  8F75               	bsf	(___ftmul@f1+1)& (0+255),7,b
  8038                           
  8039                           ; BSR set to: 0
  8040  001A22  0100               	movlb	0	; () banked
  8041  001A24  8F78               	bsf	(___ftmul@f2+1)& (0+255),7,b
  8042                           
  8043                           ; BSR set to: 0
  8044  001A26  0EFF               	movlw	255
  8045  001A28  0100               	movlb	0	; () banked
  8046  001A2A  1777               	andwf	___ftmul@f2& (0+255),f,b
  8047  001A2C  0EFF               	movlw	255
  8048  001A2E  0100               	movlb	0	; () banked
  8049  001A30  1778               	andwf	(___ftmul@f2+1)& (0+255),f,b
  8050  001A32  0E00               	movlw	0
  8051  001A34  0100               	movlb	0	; () banked
  8052  001A36  1779               	andwf	(___ftmul@f2+2)& (0+255),f,b
  8053                           
  8054                           ; BSR set to: 0
  8055  001A38  0E00               	movlw	0
  8056  001A3A  0100               	movlb	0	; () banked
  8057  001A3C  6F7E               	movwf	___ftmul@f3_as_product& (0+255),b
  8058  001A3E  0E00               	movlw	0
  8059  001A40  0100               	movlb	0	; () banked
  8060  001A42  6F7F               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  8061  001A44  0E00               	movlw	0
  8062  001A46  0100               	movlb	0	; () banked
  8063  001A48  6F80               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  8064                           
  8065                           ; BSR set to: 0
  8066  001A4A  0E07               	movlw	7
  8067  001A4C  0100               	movlb	0	; () banked
  8068  001A4E  6F81               	movwf	___ftmul@cntr& (0+255),b
  8069  001A50                     l3252:
  8070                           
  8071                           ; BSR set to: 0
  8072  001A50  0100               	movlb	0	; () banked
  8073  001A52  A174               	btfss	___ftmul@f1& (0+255),0,b
  8074  001A54  D00C               	goto	l3256
  8075                           
  8076                           ; BSR set to: 0
  8077  001A56  0100               	movlb	0	; () banked
  8078  001A58  5177               	movf	___ftmul@f2& (0+255),w,b
  8079  001A5A  0100               	movlb	0	; () banked
  8080  001A5C  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8081  001A5E  0100               	movlb	0	; () banked
  8082  001A60  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  8083  001A62  0100               	movlb	0	; () banked
  8084  001A64  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8085  001A66  0100               	movlb	0	; () banked
  8086  001A68  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  8087  001A6A  0100               	movlb	0	; () banked
  8088  001A6C  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8089  001A6E                     l3256:
  8090                           
  8091                           ; BSR set to: 0
  8092  001A6E  0100               	movlb	0	; () banked
  8093  001A70  90D8               	bcf	status,0,c
  8094  001A72  0100               	movlb	0	; () banked
  8095  001A74  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8096  001A76  0100               	movlb	0	; () banked
  8097  001A78  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8098  001A7A  0100               	movlb	0	; () banked
  8099  001A7C  3374               	rrcf	___ftmul@f1& (0+255),f,b
  8100  001A7E  0100               	movlb	0	; () banked
  8101  001A80  90D8               	bcf	status,0,c
  8102  001A82  0100               	movlb	0	; () banked
  8103  001A84  3777               	rlcf	___ftmul@f2& (0+255),f,b
  8104  001A86  0100               	movlb	0	; () banked
  8105  001A88  3778               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  8106  001A8A  0100               	movlb	0	; () banked
  8107  001A8C  3779               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  8108                           
  8109                           ; BSR set to: 0
  8110  001A8E  0100               	movlb	0	; () banked
  8111  001A90  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  8112  001A92  D7DE               	goto	l3252
  8113                           
  8114                           ; BSR set to: 0
  8115                           
  8116                           ; BSR set to: 0
  8117  001A94  0E09               	movlw	9
  8118  001A96  0100               	movlb	0	; () banked
  8119  001A98  6F81               	movwf	___ftmul@cntr& (0+255),b
  8120  001A9A                     l3262:
  8121                           
  8122                           ; BSR set to: 0
  8123  001A9A  0100               	movlb	0	; () banked
  8124  001A9C  A174               	btfss	___ftmul@f1& (0+255),0,b
  8125  001A9E  D00C               	goto	l3266
  8126                           
  8127                           ; BSR set to: 0
  8128  001AA0  0100               	movlb	0	; () banked
  8129  001AA2  5177               	movf	___ftmul@f2& (0+255),w,b
  8130  001AA4  0100               	movlb	0	; () banked
  8131  001AA6  277E               	addwf	___ftmul@f3_as_product& (0+255),f,b
  8132  001AA8  0100               	movlb	0	; () banked
  8133  001AAA  5178               	movf	(___ftmul@f2+1)& (0+255),w,b
  8134  001AAC  0100               	movlb	0	; () banked
  8135  001AAE  237F               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  8136  001AB0  0100               	movlb	0	; () banked
  8137  001AB2  5179               	movf	(___ftmul@f2+2)& (0+255),w,b
  8138  001AB4  0100               	movlb	0	; () banked
  8139  001AB6  2380               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  8140  001AB8                     l3266:
  8141                           
  8142                           ; BSR set to: 0
  8143  001AB8  0100               	movlb	0	; () banked
  8144  001ABA  90D8               	bcf	status,0,c
  8145  001ABC  0100               	movlb	0	; () banked
  8146  001ABE  3376               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  8147  001AC0  0100               	movlb	0	; () banked
  8148  001AC2  3375               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  8149  001AC4  0100               	movlb	0	; () banked
  8150  001AC6  3374               	rrcf	___ftmul@f1& (0+255),f,b
  8151  001AC8  0100               	movlb	0	; () banked
  8152  001ACA  90D8               	bcf	status,0,c
  8153  001ACC  0100               	movlb	0	; () banked
  8154  001ACE  3380               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  8155  001AD0  0100               	movlb	0	; () banked
  8156  001AD2  337F               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  8157  001AD4  0100               	movlb	0	; () banked
  8158  001AD6  337E               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  8159                           
  8160                           ; BSR set to: 0
  8161  001AD8  0100               	movlb	0	; () banked
  8162  001ADA  2F81               	decfsz	___ftmul@cntr& (0+255),f,b
  8163  001ADC  D7DE               	goto	l3262
  8164                           
  8165                           ; BSR set to: 0
  8166                           
  8167                           ; BSR set to: 0
  8168  001ADE  C07E  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  8169  001AE2  C07F  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  8170  001AE6  C080  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  8171  001AEA  C07D  F063         	movff	___ftmul@exp,___ftpack@exp
  8172  001AEE  C082  F064         	movff	___ftmul@sign,___ftpack@sign
  8173  001AF2  ECD5  F00E         	call	___ftpack	;wreg free
  8174  001AF6  C060  F074         	movff	?___ftpack,?___ftmul
  8175  001AFA  C061  F075         	movff	?___ftpack+1,?___ftmul+1
  8176  001AFE  C062  F076         	movff	?___ftpack+2,?___ftmul+2
  8177  001B02                     l1085:
  8178  001B02  0012               	return	
  8179  001B04                     __end_of___ftmul:
  8180                           	opt stack 0
  8181                           tblptru	equ	0xFF8
  8182                           tblptrh	equ	0xFF7
  8183                           tblptrl	equ	0xFF6
  8184                           tablat	equ	0xFF5
  8185                           prodh	equ	0xFF4
  8186                           prodl	equ	0xFF3
  8187                           intcon	equ	0xFF2
  8188                           intcon2	equ	0xFF1
  8189                           intcon3	equ	0xFF0
  8190                           indf0	equ	0xFEF
  8191                           postinc0	equ	0xFEE
  8192                           fsr0h	equ	0xFEA
  8193                           fsr0l	equ	0xFE9
  8194                           wreg	equ	0xFE8
  8195                           postinc1	equ	0xFE6
  8196                           postdec1	equ	0xFE5
  8197                           fsr1l	equ	0xFE1
  8198                           indf2	equ	0xFDF
  8199                           postinc2	equ	0xFDE
  8200                           postdec2	equ	0xFDD
  8201                           fsr2h	equ	0xFDA
  8202                           fsr2l	equ	0xFD9
  8203                           status	equ	0xFD8
  8204                           
  8205 ;; *************** function ___awmod *****************
  8206 ;; Defined at:
  8207 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\awmod.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;  dividend        2    0[BANK0 ] int 
  8210 ;;  divisor         2    2[BANK0 ] int 
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;  sign            1    5[BANK0 ] unsigned char 
  8213 ;;  counter         1    4[BANK0 ] unsigned char 
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  2    0[BANK0 ] int 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0, prodl
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8223 ;;      Params:         0       4       0       0       0       0       0       0       0
  8224 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8226 ;;      Totals:         0       6       0       0       0       0       0       0       0
  8227 ;;Total ram usage:        6 bytes
  8228 ;; Hardware stack levels used:    1
  8229 ;; Hardware stack levels required when called:    4
  8230 ;; This function calls:
  8231 ;;		Nothing
  8232 ;; This function is called by:
  8233 ;;		_fround
  8234 ;;		_scale
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           	psect	text33
  8239  00257A                     __ptext33:
  8240                           	opt stack 0
  8241  00257A                     ___awmod:
  8242                           	opt stack 22
  8243                           
  8244                           ;incstack = 0
  8245  00257A  0E00               	movlw	0
  8246  00257C  0100               	movlb	0	; () banked
  8247  00257E  6F65               	movwf	___awmod@sign& (0+255),b
  8248                           
  8249                           ; BSR set to: 0
  8250  002580  0100               	movlb	0	; () banked
  8251  002582  5161               	movf	(___awmod@dividend+1)& (0+255),w,b
  8252  002584  0A80               	xorlw	128
  8253  002586  6EF3               	movwf	prodl,c
  8254  002588  0E80               	movlw	128
  8255  00258A  5CF3               	subwf	prodl,w,c
  8256  00258C  0E00               	movlw	0
  8257  00258E  B4D8               	btfsc	status,2,c
  8258  002590  5D60               	subwf	___awmod@dividend& (0+255),w,b
  8259  002592  B0D8               	btfsc	status,0,c
  8260  002594  D009               	goto	l3326
  8261                           
  8262                           ; BSR set to: 0
  8263  002596  0100               	movlb	0	; () banked
  8264  002598  6D60               	negf	___awmod@dividend& (0+255),b
  8265  00259A  0100               	movlb	0	; () banked
  8266  00259C  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  8267  00259E  B0D8               	btfsc	status,0,c
  8268  0025A0  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  8269                           
  8270                           ; BSR set to: 0
  8271  0025A2  0E01               	movlw	1
  8272  0025A4  0100               	movlb	0	; () banked
  8273  0025A6  6F65               	movwf	___awmod@sign& (0+255),b
  8274  0025A8                     l3326:
  8275                           
  8276                           ; BSR set to: 0
  8277  0025A8  0100               	movlb	0	; () banked
  8278  0025AA  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  8279  0025AC  0A80               	xorlw	128
  8280  0025AE  6EF3               	movwf	prodl,c
  8281  0025B0  0E80               	movlw	128
  8282  0025B2  5CF3               	subwf	prodl,w,c
  8283  0025B4  0E00               	movlw	0
  8284  0025B6  B4D8               	btfsc	status,2,c
  8285  0025B8  5D62               	subwf	___awmod@divisor& (0+255),w,b
  8286  0025BA  B0D8               	btfsc	status,0,c
  8287  0025BC  D006               	goto	l3330
  8288                           
  8289                           ; BSR set to: 0
  8290  0025BE  0100               	movlb	0	; () banked
  8291  0025C0  6D62               	negf	___awmod@divisor& (0+255),b
  8292  0025C2  0100               	movlb	0	; () banked
  8293  0025C4  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  8294  0025C6  B0D8               	btfsc	status,0,c
  8295  0025C8  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  8296  0025CA                     l3330:
  8297                           
  8298                           ; BSR set to: 0
  8299  0025CA  0100               	movlb	0	; () banked
  8300  0025CC  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  8301  0025CE  1162               	iorwf	___awmod@divisor& (0+255),w,b
  8302  0025D0  B4D8               	btfsc	status,2,c
  8303  0025D2  D026               	goto	l3346
  8304                           
  8305                           ; BSR set to: 0
  8306  0025D4  0E01               	movlw	1
  8307  0025D6  0100               	movlb	0	; () banked
  8308  0025D8  6F64               	movwf	___awmod@counter& (0+255),b
  8309  0025DA  D006               	goto	l3336
  8310  0025DC                     l3334:
  8311                           
  8312                           ; BSR set to: 0
  8313  0025DC  0100               	movlb	0	; () banked
  8314  0025DE  90D8               	bcf	status,0,c
  8315  0025E0  3762               	rlcf	___awmod@divisor& (0+255),f,b
  8316  0025E2  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8317  0025E4  0100               	movlb	0	; () banked
  8318  0025E6  2B64               	incf	___awmod@counter& (0+255),f,b
  8319  0025E8                     l3336:
  8320                           
  8321                           ; BSR set to: 0
  8322  0025E8  0100               	movlb	0	; () banked
  8323  0025EA  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8324  0025EC  D7F7               	goto	l3334
  8325  0025EE                     l3338:
  8326                           
  8327                           ; BSR set to: 0
  8328  0025EE  0100               	movlb	0	; () banked
  8329  0025F0  5162               	movf	___awmod@divisor& (0+255),w,b
  8330  0025F2  0100               	movlb	0	; () banked
  8331  0025F4  5D60               	subwf	___awmod@dividend& (0+255),w,b
  8332  0025F6  0100               	movlb	0	; () banked
  8333  0025F8  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  8334  0025FA  0100               	movlb	0	; () banked
  8335  0025FC  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8336  0025FE  A0D8               	btfss	status,0,c
  8337  002600  D008               	goto	l3342
  8338                           
  8339                           ; BSR set to: 0
  8340  002602  0100               	movlb	0	; () banked
  8341  002604  5162               	movf	___awmod@divisor& (0+255),w,b
  8342  002606  0100               	movlb	0	; () banked
  8343  002608  5F60               	subwf	___awmod@dividend& (0+255),f,b
  8344  00260A  0100               	movlb	0	; () banked
  8345  00260C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  8346  00260E  0100               	movlb	0	; () banked
  8347  002610  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8348  002612                     l3342:
  8349                           
  8350                           ; BSR set to: 0
  8351  002612  0100               	movlb	0	; () banked
  8352  002614  90D8               	bcf	status,0,c
  8353  002616  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8354  002618  3362               	rrcf	___awmod@divisor& (0+255),f,b
  8355                           
  8356                           ; BSR set to: 0
  8357  00261A  0100               	movlb	0	; () banked
  8358  00261C  2F64               	decfsz	___awmod@counter& (0+255),f,b
  8359  00261E  D7E7               	goto	l3338
  8360  002620                     l3346:
  8361                           
  8362                           ; BSR set to: 0
  8363  002620  0100               	movlb	0	; () banked
  8364  002622  5165               	movf	___awmod@sign& (0+255),w,b
  8365  002624  B4D8               	btfsc	status,2,c
  8366  002626  D006               	goto	l3350
  8367                           
  8368                           ; BSR set to: 0
  8369  002628  0100               	movlb	0	; () banked
  8370  00262A  6D60               	negf	___awmod@dividend& (0+255),b
  8371  00262C  0100               	movlb	0	; () banked
  8372  00262E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  8373  002630  B0D8               	btfsc	status,0,c
  8374  002632  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  8375  002634                     l3350:
  8376                           
  8377                           ; BSR set to: 0
  8378  002634  C060  F060         	movff	___awmod@dividend,?___awmod
  8379  002638  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  8380                           
  8381                           ; BSR set to: 0
  8382                           
  8383                           ; BSR set to: 0
  8384  00263C  0012               	return	
  8385  00263E                     __end_of___awmod:
  8386                           	opt stack 0
  8387                           tblptru	equ	0xFF8
  8388                           tblptrh	equ	0xFF7
  8389                           tblptrl	equ	0xFF6
  8390                           tablat	equ	0xFF5
  8391                           prodh	equ	0xFF4
  8392                           prodl	equ	0xFF3
  8393                           intcon	equ	0xFF2
  8394                           intcon2	equ	0xFF1
  8395                           intcon3	equ	0xFF0
  8396                           indf0	equ	0xFEF
  8397                           postinc0	equ	0xFEE
  8398                           fsr0h	equ	0xFEA
  8399                           fsr0l	equ	0xFE9
  8400                           wreg	equ	0xFE8
  8401                           postinc1	equ	0xFE6
  8402                           postdec1	equ	0xFE5
  8403                           fsr1l	equ	0xFE1
  8404                           indf2	equ	0xFDF
  8405                           postinc2	equ	0xFDE
  8406                           postdec2	equ	0xFDD
  8407                           fsr2h	equ	0xFDA
  8408                           fsr2l	equ	0xFD9
  8409                           status	equ	0xFD8
  8410                           
  8411 ;; *************** function ___awdiv *****************
  8412 ;; Defined at:
  8413 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\awdiv.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  dividend        2    6[BANK0 ] int 
  8416 ;;  divisor         2    8[BANK0 ] int 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  quotient        2   12[BANK0 ] int 
  8419 ;;  sign            1   11[BANK0 ] unsigned char 
  8420 ;;  counter         1   10[BANK0 ] unsigned char 
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  2    6[BANK0 ] int 
  8423 ;; Registers used:
  8424 ;;		wreg, status,2, status,0, prodl
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8430 ;;      Params:         0       4       0       0       0       0       0       0       0
  8431 ;;      Locals:         0       4       0       0       0       0       0       0       0
  8432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8433 ;;      Totals:         0       8       0       0       0       0       0       0       0
  8434 ;;Total ram usage:        8 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; Hardware stack levels required when called:    4
  8437 ;; This function calls:
  8438 ;;		Nothing
  8439 ;; This function is called by:
  8440 ;;		_fround
  8441 ;;		_scale
  8442 ;;		_sprintf
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           	psect	text34
  8447  002088                     __ptext34:
  8448                           	opt stack 0
  8449  002088                     ___awdiv:
  8450                           	opt stack 22
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;incstack = 0
  8454  002088  0E00               	movlw	0
  8455  00208A  0100               	movlb	0	; () banked
  8456  00208C  6F6B               	movwf	___awdiv@sign& (0+255),b
  8457                           
  8458                           ; BSR set to: 0
  8459  00208E  0100               	movlb	0	; () banked
  8460  002090  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8461  002092  0A80               	xorlw	128
  8462  002094  6EF3               	movwf	prodl,c
  8463  002096  0E80               	movlw	128
  8464  002098  5CF3               	subwf	prodl,w,c
  8465  00209A  0E00               	movlw	0
  8466  00209C  B4D8               	btfsc	status,2,c
  8467  00209E  5D68               	subwf	___awdiv@divisor& (0+255),w,b
  8468  0020A0  B0D8               	btfsc	status,0,c
  8469  0020A2  D009               	goto	l3282
  8470                           
  8471                           ; BSR set to: 0
  8472  0020A4  0100               	movlb	0	; () banked
  8473  0020A6  6D68               	negf	___awdiv@divisor& (0+255),b
  8474  0020A8  0100               	movlb	0	; () banked
  8475  0020AA  1F69               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8476  0020AC  B0D8               	btfsc	status,0,c
  8477  0020AE  2B69               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8478                           
  8479                           ; BSR set to: 0
  8480  0020B0  0E01               	movlw	1
  8481  0020B2  0100               	movlb	0	; () banked
  8482  0020B4  6F6B               	movwf	___awdiv@sign& (0+255),b
  8483  0020B6                     l3282:
  8484                           
  8485                           ; BSR set to: 0
  8486  0020B6  0100               	movlb	0	; () banked
  8487  0020B8  5167               	movf	(___awdiv@dividend+1)& (0+255),w,b
  8488  0020BA  0A80               	xorlw	128
  8489  0020BC  6EF3               	movwf	prodl,c
  8490  0020BE  0E80               	movlw	128
  8491  0020C0  5CF3               	subwf	prodl,w,c
  8492  0020C2  0E00               	movlw	0
  8493  0020C4  B4D8               	btfsc	status,2,c
  8494  0020C6  5D66               	subwf	___awdiv@dividend& (0+255),w,b
  8495  0020C8  B0D8               	btfsc	status,0,c
  8496  0020CA  D009               	goto	l3288
  8497                           
  8498                           ; BSR set to: 0
  8499  0020CC  0100               	movlb	0	; () banked
  8500  0020CE  6D66               	negf	___awdiv@dividend& (0+255),b
  8501  0020D0  0100               	movlb	0	; () banked
  8502  0020D2  1F67               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8503  0020D4  B0D8               	btfsc	status,0,c
  8504  0020D6  2B67               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8505                           
  8506                           ; BSR set to: 0
  8507  0020D8  0E01               	movlw	1
  8508  0020DA  0100               	movlb	0	; () banked
  8509  0020DC  1B6B               	xorwf	___awdiv@sign& (0+255),f,b
  8510  0020DE                     l3288:
  8511                           
  8512                           ; BSR set to: 0
  8513  0020DE  0E00               	movlw	0
  8514  0020E0  0100               	movlb	0	; () banked
  8515  0020E2  6F6D               	movwf	(___awdiv@quotient+1)& (0+255),b
  8516  0020E4  0E00               	movlw	0
  8517  0020E6  0100               	movlb	0	; () banked
  8518  0020E8  6F6C               	movwf	___awdiv@quotient& (0+255),b
  8519                           
  8520                           ; BSR set to: 0
  8521  0020EA  0100               	movlb	0	; () banked
  8522  0020EC  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8523  0020EE  1168               	iorwf	___awdiv@divisor& (0+255),w,b
  8524  0020F0  B4D8               	btfsc	status,2,c
  8525  0020F2  D02C               	goto	l3310
  8526                           
  8527                           ; BSR set to: 0
  8528  0020F4  0E01               	movlw	1
  8529  0020F6  0100               	movlb	0	; () banked
  8530  0020F8  6F6A               	movwf	___awdiv@counter& (0+255),b
  8531  0020FA  D006               	goto	l3296
  8532  0020FC                     l3294:
  8533                           
  8534                           ; BSR set to: 0
  8535  0020FC  0100               	movlb	0	; () banked
  8536  0020FE  90D8               	bcf	status,0,c
  8537  002100  3768               	rlcf	___awdiv@divisor& (0+255),f,b
  8538  002102  3769               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8539  002104  0100               	movlb	0	; () banked
  8540  002106  2B6A               	incf	___awdiv@counter& (0+255),f,b
  8541  002108                     l3296:
  8542                           
  8543                           ; BSR set to: 0
  8544  002108  0100               	movlb	0	; () banked
  8545  00210A  AF69               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8546  00210C  D7F7               	goto	l3294
  8547  00210E                     l3298:
  8548                           
  8549                           ; BSR set to: 0
  8550  00210E  0100               	movlb	0	; () banked
  8551  002110  90D8               	bcf	status,0,c
  8552  002112  376C               	rlcf	___awdiv@quotient& (0+255),f,b
  8553  002114  376D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8554                           
  8555                           ; BSR set to: 0
  8556  002116  0100               	movlb	0	; () banked
  8557  002118  5168               	movf	___awdiv@divisor& (0+255),w,b
  8558  00211A  0100               	movlb	0	; () banked
  8559  00211C  5D66               	subwf	___awdiv@dividend& (0+255),w,b
  8560  00211E  0100               	movlb	0	; () banked
  8561  002120  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8562  002122  0100               	movlb	0	; () banked
  8563  002124  5967               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8564  002126  A0D8               	btfss	status,0,c
  8565  002128  D00A               	goto	l3306
  8566                           
  8567                           ; BSR set to: 0
  8568  00212A  0100               	movlb	0	; () banked
  8569  00212C  5168               	movf	___awdiv@divisor& (0+255),w,b
  8570  00212E  0100               	movlb	0	; () banked
  8571  002130  5F66               	subwf	___awdiv@dividend& (0+255),f,b
  8572  002132  0100               	movlb	0	; () banked
  8573  002134  5169               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8574  002136  0100               	movlb	0	; () banked
  8575  002138  5B67               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8576                           
  8577                           ; BSR set to: 0
  8578  00213A  0100               	movlb	0	; () banked
  8579  00213C  816C               	bsf	___awdiv@quotient& (0+255),0,b
  8580  00213E                     l3306:
  8581                           
  8582                           ; BSR set to: 0
  8583  00213E  0100               	movlb	0	; () banked
  8584  002140  90D8               	bcf	status,0,c
  8585  002142  3369               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8586  002144  3368               	rrcf	___awdiv@divisor& (0+255),f,b
  8587                           
  8588                           ; BSR set to: 0
  8589  002146  0100               	movlb	0	; () banked
  8590  002148  2F6A               	decfsz	___awdiv@counter& (0+255),f,b
  8591  00214A  D7E1               	goto	l3298
  8592  00214C                     l3310:
  8593                           
  8594                           ; BSR set to: 0
  8595  00214C  0100               	movlb	0	; () banked
  8596  00214E  516B               	movf	___awdiv@sign& (0+255),w,b
  8597  002150  B4D8               	btfsc	status,2,c
  8598  002152  D006               	goto	l3314
  8599                           
  8600                           ; BSR set to: 0
  8601  002154  0100               	movlb	0	; () banked
  8602  002156  6D6C               	negf	___awdiv@quotient& (0+255),b
  8603  002158  0100               	movlb	0	; () banked
  8604  00215A  1F6D               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8605  00215C  B0D8               	btfsc	status,0,c
  8606  00215E  2B6D               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8607  002160                     l3314:
  8608                           
  8609                           ; BSR set to: 0
  8610  002160  C06C  F066         	movff	___awdiv@quotient,?___awdiv
  8611  002164  C06D  F067         	movff	___awdiv@quotient+1,?___awdiv+1
  8612                           
  8613                           ; BSR set to: 0
  8614                           
  8615                           ; BSR set to: 0
  8616  002168  0012               	return	
  8617  00216A                     __end_of___awdiv:
  8618                           	opt stack 0
  8619                           tblptru	equ	0xFF8
  8620                           tblptrh	equ	0xFF7
  8621                           tblptrl	equ	0xFF6
  8622                           tablat	equ	0xFF5
  8623                           prodh	equ	0xFF4
  8624                           prodl	equ	0xFF3
  8625                           intcon	equ	0xFF2
  8626                           intcon2	equ	0xFF1
  8627                           intcon3	equ	0xFF0
  8628                           indf0	equ	0xFEF
  8629                           postinc0	equ	0xFEE
  8630                           fsr0h	equ	0xFEA
  8631                           fsr0l	equ	0xFE9
  8632                           wreg	equ	0xFE8
  8633                           postinc1	equ	0xFE6
  8634                           postdec1	equ	0xFE5
  8635                           fsr1l	equ	0xFE1
  8636                           indf2	equ	0xFDF
  8637                           postinc2	equ	0xFDE
  8638                           postdec2	equ	0xFDD
  8639                           fsr2h	equ	0xFDA
  8640                           fsr2l	equ	0xFD9
  8641                           status	equ	0xFD8
  8642                           
  8643 ;; *************** function __tdiv_to_l_ *****************
  8644 ;; Defined at:
  8645 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftdivl.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  f1              3    0[BANK0 ] float 
  8648 ;;  f2              3    3[BANK0 ] float 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;  quot            4    9[BANK0 ] unsigned long 
  8651 ;;  exp1            1   14[BANK0 ] unsigned char 
  8652 ;;  cntr            1   13[BANK0 ] unsigned char 
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  4    0[BANK0 ] unsigned long 
  8655 ;; Registers used:
  8656 ;;		wreg, status,2, status,0
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8662 ;;      Params:         0       6       0       0       0       0       0       0       0
  8663 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8664 ;;      Temps:          0       3       0       0       0       0       0       0       0
  8665 ;;      Totals:         0      15       0       0       0       0       0       0       0
  8666 ;;Total ram usage:       15 bytes
  8667 ;; Hardware stack levels used:    1
  8668 ;; Hardware stack levels required when called:    4
  8669 ;; This function calls:
  8670 ;;		Nothing
  8671 ;; This function is called by:
  8672 ;;		_sprintf
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text35
  8677  001688                     __ptext35:
  8678                           	opt stack 0
  8679  001688                     __tdiv_to_l_:
  8680                           	opt stack 23
  8681                           
  8682                           ; BSR set to: 0
  8683                           ;incstack = 0
  8684  001688  0100               	movlb	0	; () banked
  8685  00168A  C062  F066         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  8686  00168E  0100               	movlb	0	; () banked
  8687  001690  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  8688  001692  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  8689  001694  0100               	movlb	0	; () banked
  8690  001696  3561               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  8691  001698  0100               	movlb	0	; () banked
  8692  00169A  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
  8693  00169C  E301               	bnc	u3381
  8694  00169E  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  8695  0016A0                     u3381:
  8696  0016A0  0100               	movlb	0	; () banked
  8697  0016A2  5166               	movf	??__tdiv_to_l_& (0+255),w,b
  8698  0016A4  0100               	movlb	0	; () banked
  8699  0016A6  6F6E               	movwf	__tdiv_to_l_@exp1& (0+255),b
  8700  0016A8  0100               	movlb	0	; () banked
  8701  0016AA  676E               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  8702  0016AC  D001               	goto	l3516
  8703  0016AE  D092               	goto	u3450
  8704  0016B0                     l3516:
  8705                           
  8706                           ; BSR set to: 0
  8707  0016B0  0100               	movlb	0	; () banked
  8708  0016B2  C065  F066         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  8709  0016B6  0100               	movlb	0	; () banked
  8710  0016B8  6B67               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  8711  0016BA  6B68               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  8712  0016BC  0100               	movlb	0	; () banked
  8713  0016BE  3564               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  8714  0016C0  0100               	movlb	0	; () banked
  8715  0016C2  3766               	rlcf	??__tdiv_to_l_& (0+255),f,b
  8716  0016C4  E301               	bnc	u3401
  8717  0016C6  8167               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  8718  0016C8                     u3401:
  8719  0016C8  0100               	movlb	0	; () banked
  8720  0016CA  5166               	movf	??__tdiv_to_l_& (0+255),w,b
  8721  0016CC  0100               	movlb	0	; () banked
  8722  0016CE  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  8723  0016D0  0100               	movlb	0	; () banked
  8724  0016D2  676D               	tstfsz	__tdiv_to_l_@cntr& (0+255),b
  8725  0016D4  D001               	goto	l3522
  8726  0016D6  D07E               	goto	u3450
  8727  0016D8                     l3522:
  8728                           
  8729                           ; BSR set to: 0
  8730  0016D8  0100               	movlb	0	; () banked
  8731  0016DA  8F61               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  8732                           
  8733                           ; BSR set to: 0
  8734  0016DC  0EFF               	movlw	255
  8735  0016DE  0100               	movlb	0	; () banked
  8736  0016E0  1760               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  8737  0016E2  0EFF               	movlw	255
  8738  0016E4  0100               	movlb	0	; () banked
  8739  0016E6  1761               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  8740  0016E8  0E00               	movlw	0
  8741  0016EA  0100               	movlb	0	; () banked
  8742  0016EC  1762               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  8743  0016EE  0100               	movlb	0	; () banked
  8744  0016F0  8F64               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  8745                           
  8746                           ; BSR set to: 0
  8747  0016F2  0EFF               	movlw	255
  8748  0016F4  0100               	movlb	0	; () banked
  8749  0016F6  1763               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  8750  0016F8  0EFF               	movlw	255
  8751  0016FA  0100               	movlb	0	; () banked
  8752  0016FC  1764               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  8753  0016FE  0E00               	movlw	0
  8754  001700  0100               	movlb	0	; () banked
  8755  001702  1765               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  8756                           
  8757                           ; BSR set to: 0
  8758  001704  0E00               	movlw	0
  8759  001706  0100               	movlb	0	; () banked
  8760  001708  6F69               	movwf	__tdiv_to_l_@quot& (0+255),b
  8761  00170A  0E00               	movlw	0
  8762  00170C  0100               	movlb	0	; () banked
  8763  00170E  6F6A               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  8764  001710  0E00               	movlw	0
  8765  001712  0100               	movlb	0	; () banked
  8766  001714  6F6B               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  8767  001716  0E00               	movlw	0
  8768  001718  0100               	movlb	0	; () banked
  8769  00171A  6F6C               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  8770                           
  8771                           ; BSR set to: 0
  8772  00171C  0E7F               	movlw	127
  8773  00171E  0100               	movlb	0	; () banked
  8774  001720  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  8775                           
  8776                           ; BSR set to: 0
  8777  001722  0100               	movlb	0	; () banked
  8778  001724  516D               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  8779  001726  0F98               	addlw	152
  8780  001728  0100               	movlb	0	; () banked
  8781  00172A  5F6E               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  8782                           
  8783                           ; BSR set to: 0
  8784  00172C  0E18               	movlw	24
  8785  00172E  0100               	movlb	0	; () banked
  8786  001730  6F6D               	movwf	__tdiv_to_l_@cntr& (0+255),b
  8787  001732                     l1063:
  8788                           
  8789                           ; BSR set to: 0
  8790  001732  0100               	movlb	0	; () banked
  8791  001734  90D8               	bcf	status,0,c
  8792  001736  0100               	movlb	0	; () banked
  8793  001738  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  8794  00173A  0100               	movlb	0	; () banked
  8795  00173C  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  8796  00173E  0100               	movlb	0	; () banked
  8797  001740  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  8798  001742  0100               	movlb	0	; () banked
  8799  001744  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  8800                           
  8801                           ; BSR set to: 0
  8802  001746  0100               	movlb	0	; () banked
  8803  001748  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
  8804  00174A  0100               	movlb	0	; () banked
  8805  00174C  5D60               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  8806  00174E  0100               	movlb	0	; () banked
  8807  001750  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  8808  001752  0100               	movlb	0	; () banked
  8809  001754  5961               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  8810  001756  0100               	movlb	0	; () banked
  8811  001758  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  8812  00175A  0100               	movlb	0	; () banked
  8813  00175C  5962               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  8814  00175E  A0D8               	btfss	status,0,c
  8815  001760  D00E               	goto	l1064
  8816                           
  8817                           ; BSR set to: 0
  8818  001762  0100               	movlb	0	; () banked
  8819  001764  5163               	movf	__tdiv_to_l_@f2& (0+255),w,b
  8820  001766  0100               	movlb	0	; () banked
  8821  001768  5F60               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  8822  00176A  0100               	movlb	0	; () banked
  8823  00176C  5164               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  8824  00176E  0100               	movlb	0	; () banked
  8825  001770  5B61               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  8826  001772  0100               	movlb	0	; () banked
  8827  001774  5165               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  8828  001776  0100               	movlb	0	; () banked
  8829  001778  5B62               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  8830                           
  8831                           ; BSR set to: 0
  8832  00177A  0100               	movlb	0	; () banked
  8833  00177C  8169               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  8834  00177E                     l1064:
  8835                           
  8836                           ; BSR set to: 0
  8837  00177E  0100               	movlb	0	; () banked
  8838  001780  90D8               	bcf	status,0,c
  8839  001782  0100               	movlb	0	; () banked
  8840  001784  3760               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  8841  001786  0100               	movlb	0	; () banked
  8842  001788  3761               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  8843  00178A  0100               	movlb	0	; () banked
  8844  00178C  3762               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  8845                           
  8846                           ; BSR set to: 0
  8847  00178E  0100               	movlb	0	; () banked
  8848  001790  2F6D               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  8849  001792  D7CF               	goto	l1063
  8850                           
  8851                           ; BSR set to: 0
  8852  001794  0100               	movlb	0	; () banked
  8853  001796  AF6E               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  8854  001798  D019               	goto	l3554
  8855                           
  8856                           ; BSR set to: 0
  8857  00179A  0100               	movlb	0	; () banked
  8858  00179C  516E               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  8859  00179E  0A80               	xorlw	128
  8860  0017A0  0100               	movlb	0	; () banked
  8861  0017A2  6F66               	movwf	??__tdiv_to_l_& (0+255),b
  8862  0017A4  0EE9               	movlw	233
  8863  0017A6  0A80               	xorlw	128
  8864  0017A8  0100               	movlb	0	; () banked
  8865  0017AA  5D66               	subwf	??__tdiv_to_l_& (0+255),w,b
  8866  0017AC  A0D8               	btfss	status,0,c
  8867  0017AE  D012               	goto	u3450
  8868  0017B0                     l3550:
  8869                           
  8870                           ; BSR set to: 0
  8871  0017B0  0100               	movlb	0	; () banked
  8872  0017B2  90D8               	bcf	status,0,c
  8873  0017B4  0100               	movlb	0	; () banked
  8874  0017B6  336C               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  8875  0017B8  0100               	movlb	0	; () banked
  8876  0017BA  336B               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  8877  0017BC  0100               	movlb	0	; () banked
  8878  0017BE  336A               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  8879  0017C0  0100               	movlb	0	; () banked
  8880  0017C2  3369               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  8881                           
  8882                           ; BSR set to: 0
  8883  0017C4  0100               	movlb	0	; () banked
  8884  0017C6  3F6E               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  8885  0017C8  D7F3               	goto	l3550
  8886  0017CA  D020               	goto	l1070
  8887  0017CC                     l3554:
  8888                           
  8889                           ; BSR set to: 0
  8890  0017CC  0E17               	movlw	23
  8891  0017CE  0100               	movlb	0	; () banked
  8892  0017D0  656E               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  8893  0017D2  D019               	goto	l3562
  8894  0017D4                     u3450:
  8895                           
  8896                           ; BSR set to: 0
  8897  0017D4  0E00               	movlw	0
  8898  0017D6  0100               	movlb	0	; () banked
  8899  0017D8  6F60               	movwf	?__tdiv_to_l_& (0+255),b
  8900  0017DA  0E00               	movlw	0
  8901  0017DC  0100               	movlb	0	; () banked
  8902  0017DE  6F61               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  8903  0017E0  0E00               	movlw	0
  8904  0017E2  0100               	movlb	0	; () banked
  8905  0017E4  6F62               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  8906  0017E6  0E00               	movlw	0
  8907  0017E8  0100               	movlb	0	; () banked
  8908  0017EA  6F63               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  8909  0017EC  D017               	goto	l1061
  8910  0017EE                     l3560:
  8911                           
  8912                           ; BSR set to: 0
  8913  0017EE  0100               	movlb	0	; () banked
  8914  0017F0  90D8               	bcf	status,0,c
  8915  0017F2  0100               	movlb	0	; () banked
  8916  0017F4  3769               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  8917  0017F6  0100               	movlb	0	; () banked
  8918  0017F8  376A               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  8919  0017FA  0100               	movlb	0	; () banked
  8920  0017FC  376B               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  8921  0017FE  0100               	movlb	0	; () banked
  8922  001800  376C               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  8923  001802  0100               	movlb	0	; () banked
  8924  001804  076E               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  8925  001806                     l3562:
  8926                           
  8927                           ; BSR set to: 0
  8928  001806  0100               	movlb	0	; () banked
  8929  001808  676E               	tstfsz	__tdiv_to_l_@exp1& (0+255),b
  8930  00180A  D7F1               	goto	l3560
  8931  00180C                     l1070:
  8932                           
  8933                           ; BSR set to: 0
  8934  00180C  C069  F060         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  8935  001810  C06A  F061         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  8936  001814  C06B  F062         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  8937  001818  C06C  F063         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  8938  00181C                     l1061:
  8939                           
  8940                           ; BSR set to: 0
  8941  00181C  0012               	return	
  8942  00181E                     __end_of__tdiv_to_l_:
  8943                           	opt stack 0
  8944                           tblptru	equ	0xFF8
  8945                           tblptrh	equ	0xFF7
  8946                           tblptrl	equ	0xFF6
  8947                           tablat	equ	0xFF5
  8948                           prodh	equ	0xFF4
  8949                           prodl	equ	0xFF3
  8950                           intcon	equ	0xFF2
  8951                           intcon2	equ	0xFF1
  8952                           intcon3	equ	0xFF0
  8953                           indf0	equ	0xFEF
  8954                           postinc0	equ	0xFEE
  8955                           fsr0h	equ	0xFEA
  8956                           fsr0l	equ	0xFE9
  8957                           wreg	equ	0xFE8
  8958                           postinc1	equ	0xFE6
  8959                           postdec1	equ	0xFE5
  8960                           fsr1l	equ	0xFE1
  8961                           indf2	equ	0xFDF
  8962                           postinc2	equ	0xFDE
  8963                           postdec2	equ	0xFDD
  8964                           fsr2h	equ	0xFDA
  8965                           fsr2l	equ	0xFD9
  8966                           status	equ	0xFD8
  8967                           
  8968 ;; *************** function __div_to_l_ *****************
  8969 ;; Defined at:
  8970 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fldivl.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;  f1              3    0[BANK0 ] unsigned long 
  8973 ;;  f2              3    3[BANK0 ] unsigned long 
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;  quot            4   10[BANK0 ] unsigned long 
  8976 ;;  exp1            1   15[BANK0 ] unsigned char 
  8977 ;;  cntr            1   14[BANK0 ] unsigned char 
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  4    0[BANK0 ] unsigned long 
  8980 ;; Registers used:
  8981 ;;		wreg, status,2, status,0
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8987 ;;      Params:         0       6       0       0       0       0       0       0       0
  8988 ;;      Locals:         0       6       0       0       0       0       0       0       0
  8989 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8990 ;;      Totals:         0      16       0       0       0       0       0       0       0
  8991 ;;Total ram usage:       16 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; Hardware stack levels required when called:    4
  8994 ;; This function calls:
  8995 ;;		Nothing
  8996 ;; This function is called by:
  8997 ;;		_sprintf
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           	psect	text36
  9002  0014AA                     __ptext36:
  9003                           	opt stack 0
  9004  0014AA                     __div_to_l_:
  9005                           	opt stack 23
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;incstack = 0
  9009  0014AA  0100               	movlb	0	; () banked
  9010  0014AC  C060  F066         	movff	__div_to_l_@f1,??__div_to_l_
  9011  0014B0  0100               	movlb	0	; () banked
  9012  0014B2  C061  F067         	movff	__div_to_l_@f1+1,??__div_to_l_+1
  9013  0014B6  0100               	movlb	0	; () banked
  9014  0014B8  C062  F068         	movff	__div_to_l_@f1+2,??__div_to_l_+2
  9015  0014BC  0100               	movlb	0	; () banked
  9016  0014BE  C063  F069         	movff	__div_to_l_@f1+3,??__div_to_l_+3
  9017  0014C2  0E18               	movlw	24
  9018  0014C4  D006               	goto	u3470
  9019  0014C6                     u3475:
  9020  0014C6  0100               	movlb	0	; () banked
  9021  0014C8  90D8               	bcf	status,0,c
  9022  0014CA  3369               	rrcf	(??__div_to_l_+3)& (0+255),f,b
  9023  0014CC  3368               	rrcf	(??__div_to_l_+2)& (0+255),f,b
  9024  0014CE  3367               	rrcf	(??__div_to_l_+1)& (0+255),f,b
  9025  0014D0  3366               	rrcf	??__div_to_l_& (0+255),f,b
  9026  0014D2                     u3470:
  9027  0014D2  2EE8               	decfsz	wreg,f,c
  9028  0014D4  D7F8               	goto	u3475
  9029  0014D6  0100               	movlb	0	; () banked
  9030  0014D8  5166               	movf	??__div_to_l_& (0+255),w,b
  9031  0014DA  0100               	movlb	0	; () banked
  9032  0014DC  6F6F               	movwf	__div_to_l_@exp1& (0+255),b
  9033  0014DE  0100               	movlb	0	; () banked
  9034  0014E0  676F               	tstfsz	__div_to_l_@exp1& (0+255),b
  9035  0014E2  D001               	goto	l3570
  9036  0014E4  D0AC               	goto	u3540
  9037  0014E6                     l3570:
  9038                           
  9039                           ; BSR set to: 0
  9040  0014E6  0100               	movlb	0	; () banked
  9041  0014E8  C063  F066         	movff	__div_to_l_@f2,??__div_to_l_
  9042  0014EC  0100               	movlb	0	; () banked
  9043  0014EE  C064  F067         	movff	__div_to_l_@f2+1,??__div_to_l_+1
  9044  0014F2  0100               	movlb	0	; () banked
  9045  0014F4  C065  F068         	movff	__div_to_l_@f2+2,??__div_to_l_+2
  9046  0014F8  0100               	movlb	0	; () banked
  9047  0014FA  C066  F069         	movff	__div_to_l_@f2+3,??__div_to_l_+3
  9048  0014FE  0E18               	movlw	24
  9049  001500  D006               	goto	u3490
  9050  001502                     u3495:
  9051  001502  0100               	movlb	0	; () banked
  9052  001504  90D8               	bcf	status,0,c
  9053  001506  3369               	rrcf	(??__div_to_l_+3)& (0+255),f,b
  9054  001508  3368               	rrcf	(??__div_to_l_+2)& (0+255),f,b
  9055  00150A  3367               	rrcf	(??__div_to_l_+1)& (0+255),f,b
  9056  00150C  3366               	rrcf	??__div_to_l_& (0+255),f,b
  9057  00150E                     u3490:
  9058  00150E  2EE8               	decfsz	wreg,f,c
  9059  001510  D7F8               	goto	u3495
  9060  001512  0100               	movlb	0	; () banked
  9061  001514  5166               	movf	??__div_to_l_& (0+255),w,b
  9062  001516  0100               	movlb	0	; () banked
  9063  001518  6F6E               	movwf	__div_to_l_@cntr& (0+255),b
  9064  00151A  0100               	movlb	0	; () banked
  9065  00151C  676E               	tstfsz	__div_to_l_@cntr& (0+255),b
  9066  00151E  D001               	goto	l3576
  9067  001520  D08E               	goto	u3540
  9068  001522                     l3576:
  9069                           
  9070                           ; BSR set to: 0
  9071  001522  0100               	movlb	0	; () banked
  9072  001524  8F62               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  9073                           
  9074                           ; BSR set to: 0
  9075  001526  0EFF               	movlw	255
  9076  001528  0100               	movlb	0	; () banked
  9077  00152A  1760               	andwf	__div_to_l_@f1& (0+255),f,b
  9078  00152C  0EFF               	movlw	255
  9079  00152E  0100               	movlb	0	; () banked
  9080  001530  1761               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  9081  001532  0EFF               	movlw	255
  9082  001534  0100               	movlb	0	; () banked
  9083  001536  1762               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  9084  001538  0E00               	movlw	0
  9085  00153A  0100               	movlb	0	; () banked
  9086  00153C  1763               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  9087                           
  9088                           ; BSR set to: 0
  9089  00153E  0100               	movlb	0	; () banked
  9090  001540  8F65               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  9091  001542  0EFF               	movlw	255
  9092  001544  0100               	movlb	0	; () banked
  9093  001546  1763               	andwf	__div_to_l_@f2& (0+255),f,b
  9094  001548  0EFF               	movlw	255
  9095  00154A  0100               	movlb	0	; () banked
  9096  00154C  1764               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  9097  00154E  0EFF               	movlw	255
  9098  001550  0100               	movlb	0	; () banked
  9099  001552  1765               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  9100  001554  0E00               	movlw	0
  9101  001556  0100               	movlb	0	; () banked
  9102  001558  1766               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  9103                           
  9104                           ; BSR set to: 0
  9105  00155A  0E00               	movlw	0
  9106  00155C  0100               	movlb	0	; () banked
  9107  00155E  6F6A               	movwf	__div_to_l_@quot& (0+255),b
  9108  001560  0E00               	movlw	0
  9109  001562  0100               	movlb	0	; () banked
  9110  001564  6F6B               	movwf	(__div_to_l_@quot+1)& (0+255),b
  9111  001566  0E00               	movlw	0
  9112  001568  0100               	movlb	0	; () banked
  9113  00156A  6F6C               	movwf	(__div_to_l_@quot+2)& (0+255),b
  9114  00156C  0E00               	movlw	0
  9115  00156E  0100               	movlb	0	; () banked
  9116  001570  6F6D               	movwf	(__div_to_l_@quot+3)& (0+255),b
  9117                           
  9118                           ; BSR set to: 0
  9119  001572  0E7F               	movlw	127
  9120  001574  0100               	movlb	0	; () banked
  9121  001576  5F6F               	subwf	__div_to_l_@exp1& (0+255),f,b
  9122                           
  9123                           ; BSR set to: 0
  9124  001578  0100               	movlb	0	; () banked
  9125  00157A  516E               	movf	__div_to_l_@cntr& (0+255),w,b
  9126  00157C  0FA0               	addlw	160
  9127  00157E  0100               	movlb	0	; () banked
  9128  001580  5F6F               	subwf	__div_to_l_@exp1& (0+255),f,b
  9129                           
  9130                           ; BSR set to: 0
  9131  001582  0E20               	movlw	32
  9132  001584  0100               	movlb	0	; () banked
  9133  001586  6F6E               	movwf	__div_to_l_@cntr& (0+255),b
  9134  001588                     l3590:
  9135                           
  9136                           ; BSR set to: 0
  9137  001588  0100               	movlb	0	; () banked
  9138  00158A  90D8               	bcf	status,0,c
  9139  00158C  0100               	movlb	0	; () banked
  9140  00158E  376A               	rlcf	__div_to_l_@quot& (0+255),f,b
  9141  001590  0100               	movlb	0	; () banked
  9142  001592  376B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9143  001594  0100               	movlb	0	; () banked
  9144  001596  376C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9145  001598  0100               	movlb	0	; () banked
  9146  00159A  376D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9147                           
  9148                           ; BSR set to: 0
  9149  00159C  0100               	movlb	0	; () banked
  9150  00159E  5163               	movf	__div_to_l_@f2& (0+255),w,b
  9151  0015A0  0100               	movlb	0	; () banked
  9152  0015A2  5D60               	subwf	__div_to_l_@f1& (0+255),w,b
  9153  0015A4  0100               	movlb	0	; () banked
  9154  0015A6  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9155  0015A8  0100               	movlb	0	; () banked
  9156  0015AA  5961               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  9157  0015AC  0100               	movlb	0	; () banked
  9158  0015AE  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9159  0015B0  0100               	movlb	0	; () banked
  9160  0015B2  5962               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  9161  0015B4  0100               	movlb	0	; () banked
  9162  0015B6  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9163  0015B8  0100               	movlb	0	; () banked
  9164  0015BA  5963               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  9165  0015BC  A0D8               	btfss	status,0,c
  9166  0015BE  D012               	goto	l3598
  9167                           
  9168                           ; BSR set to: 0
  9169  0015C0  0100               	movlb	0	; () banked
  9170  0015C2  5163               	movf	__div_to_l_@f2& (0+255),w,b
  9171  0015C4  0100               	movlb	0	; () banked
  9172  0015C6  5F60               	subwf	__div_to_l_@f1& (0+255),f,b
  9173  0015C8  0100               	movlb	0	; () banked
  9174  0015CA  5164               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9175  0015CC  0100               	movlb	0	; () banked
  9176  0015CE  5B61               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  9177  0015D0  0100               	movlb	0	; () banked
  9178  0015D2  5165               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9179  0015D4  0100               	movlb	0	; () banked
  9180  0015D6  5B62               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  9181  0015D8  0100               	movlb	0	; () banked
  9182  0015DA  5166               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9183  0015DC  0100               	movlb	0	; () banked
  9184  0015DE  5B63               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  9185                           
  9186                           ; BSR set to: 0
  9187  0015E0  0100               	movlb	0	; () banked
  9188  0015E2  816A               	bsf	__div_to_l_@quot& (0+255),0,b
  9189  0015E4                     l3598:
  9190                           
  9191                           ; BSR set to: 0
  9192  0015E4  0100               	movlb	0	; () banked
  9193  0015E6  90D8               	bcf	status,0,c
  9194  0015E8  0100               	movlb	0	; () banked
  9195  0015EA  3760               	rlcf	__div_to_l_@f1& (0+255),f,b
  9196  0015EC  0100               	movlb	0	; () banked
  9197  0015EE  3761               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  9198  0015F0  0100               	movlb	0	; () banked
  9199  0015F2  3762               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  9200  0015F4  0100               	movlb	0	; () banked
  9201  0015F6  3763               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  9202                           
  9203                           ; BSR set to: 0
  9204  0015F8  0100               	movlb	0	; () banked
  9205  0015FA  2F6E               	decfsz	__div_to_l_@cntr& (0+255),f,b
  9206  0015FC  D7C5               	goto	l3590
  9207                           
  9208                           ; BSR set to: 0
  9209  0015FE  0100               	movlb	0	; () banked
  9210  001600  AF6F               	btfss	__div_to_l_@exp1& (0+255),7,b
  9211  001602  D019               	goto	l3612
  9212                           
  9213                           ; BSR set to: 0
  9214  001604  0100               	movlb	0	; () banked
  9215  001606  516F               	movf	__div_to_l_@exp1& (0+255),w,b
  9216  001608  0A80               	xorlw	128
  9217  00160A  0100               	movlb	0	; () banked
  9218  00160C  6F66               	movwf	??__div_to_l_& (0+255),b
  9219  00160E  0EE1               	movlw	225
  9220  001610  0A80               	xorlw	128
  9221  001612  0100               	movlb	0	; () banked
  9222  001614  5D66               	subwf	??__div_to_l_& (0+255),w,b
  9223  001616  A0D8               	btfss	status,0,c
  9224  001618  D012               	goto	u3540
  9225  00161A                     l3608:
  9226                           
  9227                           ; BSR set to: 0
  9228  00161A  0100               	movlb	0	; () banked
  9229  00161C  90D8               	bcf	status,0,c
  9230  00161E  0100               	movlb	0	; () banked
  9231  001620  336D               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  9232  001622  0100               	movlb	0	; () banked
  9233  001624  336C               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  9234  001626  0100               	movlb	0	; () banked
  9235  001628  336B               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  9236  00162A  0100               	movlb	0	; () banked
  9237  00162C  336A               	rrcf	__div_to_l_@quot& (0+255),f,b
  9238                           
  9239                           ; BSR set to: 0
  9240  00162E  0100               	movlb	0	; () banked
  9241  001630  3F6F               	incfsz	__div_to_l_@exp1& (0+255),f,b
  9242  001632  D7F3               	goto	l3608
  9243  001634  D020               	goto	l952
  9244  001636                     l3612:
  9245                           
  9246                           ; BSR set to: 0
  9247  001636  0E1F               	movlw	31
  9248  001638  0100               	movlb	0	; () banked
  9249  00163A  656F               	cpfsgt	__div_to_l_@exp1& (0+255),b
  9250  00163C  D019               	goto	l3620
  9251  00163E                     u3540:
  9252                           
  9253                           ; BSR set to: 0
  9254  00163E  0E00               	movlw	0
  9255  001640  0100               	movlb	0	; () banked
  9256  001642  6F60               	movwf	?__div_to_l_& (0+255),b
  9257  001644  0E00               	movlw	0
  9258  001646  0100               	movlb	0	; () banked
  9259  001648  6F61               	movwf	(?__div_to_l_+1)& (0+255),b
  9260  00164A  0E00               	movlw	0
  9261  00164C  0100               	movlb	0	; () banked
  9262  00164E  6F62               	movwf	(?__div_to_l_+2)& (0+255),b
  9263  001650  0E00               	movlw	0
  9264  001652  0100               	movlb	0	; () banked
  9265  001654  6F63               	movwf	(?__div_to_l_+3)& (0+255),b
  9266  001656  D017               	goto	l943
  9267  001658                     l3618:
  9268                           
  9269                           ; BSR set to: 0
  9270  001658  0100               	movlb	0	; () banked
  9271  00165A  90D8               	bcf	status,0,c
  9272  00165C  0100               	movlb	0	; () banked
  9273  00165E  376A               	rlcf	__div_to_l_@quot& (0+255),f,b
  9274  001660  0100               	movlb	0	; () banked
  9275  001662  376B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9276  001664  0100               	movlb	0	; () banked
  9277  001666  376C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9278  001668  0100               	movlb	0	; () banked
  9279  00166A  376D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9280  00166C  0100               	movlb	0	; () banked
  9281  00166E  076F               	decf	__div_to_l_@exp1& (0+255),f,b
  9282  001670                     l3620:
  9283                           
  9284                           ; BSR set to: 0
  9285  001670  0100               	movlb	0	; () banked
  9286  001672  676F               	tstfsz	__div_to_l_@exp1& (0+255),b
  9287  001674  D7F1               	goto	l3618
  9288  001676                     l952:
  9289                           
  9290                           ; BSR set to: 0
  9291  001676  C06A  F060         	movff	__div_to_l_@quot,?__div_to_l_
  9292  00167A  C06B  F061         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9293  00167E  C06C  F062         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9294  001682  C06D  F063         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9295  001686                     l943:
  9296                           
  9297                           ; BSR set to: 0
  9298  001686  0012               	return	
  9299  001688                     __end_of__div_to_l_:
  9300                           	opt stack 0
  9301                           tblptru	equ	0xFF8
  9302                           tblptrh	equ	0xFF7
  9303                           tblptrl	equ	0xFF6
  9304                           tablat	equ	0xFF5
  9305                           prodh	equ	0xFF4
  9306                           prodl	equ	0xFF3
  9307                           intcon	equ	0xFF2
  9308                           intcon2	equ	0xFF1
  9309                           intcon3	equ	0xFF0
  9310                           indf0	equ	0xFEF
  9311                           postinc0	equ	0xFEE
  9312                           fsr0h	equ	0xFEA
  9313                           fsr0l	equ	0xFE9
  9314                           wreg	equ	0xFE8
  9315                           postinc1	equ	0xFE6
  9316                           postdec1	equ	0xFE5
  9317                           fsr1l	equ	0xFE1
  9318                           indf2	equ	0xFDF
  9319                           postinc2	equ	0xFDE
  9320                           postdec2	equ	0xFDD
  9321                           fsr2h	equ	0xFDA
  9322                           fsr2l	equ	0xFD9
  9323                           status	equ	0xFD8
  9324                           
  9325 ;; *************** function ___lltoft *****************
  9326 ;; Defined at:
  9327 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lltoft.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;  c               4    8[BANK0 ] unsigned long 
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;  exp             1   16[BANK0 ] unsigned char 
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  3    8[BANK0 ] float 
  9334 ;; Registers used:
  9335 ;;		wreg, status,2, status,0, cstack
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9341 ;;      Params:         0       4       0       0       0       0       0       0       0
  9342 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9343 ;;      Temps:          0       4       0       0       0       0       0       0       0
  9344 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9345 ;;Total ram usage:        9 bytes
  9346 ;; Hardware stack levels used:    1
  9347 ;; Hardware stack levels required when called:    5
  9348 ;; This function calls:
  9349 ;;		___ftpack
  9350 ;; This function is called by:
  9351 ;;		_sprintf
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           	psect	text37
  9356  002B1E                     __ptext37:
  9357                           	opt stack 0
  9358  002B1E                     ___lltoft:
  9359                           	opt stack 22
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;incstack = 0
  9363  002B1E  0E8E               	movlw	142
  9364  002B20  0100               	movlb	0	; () banked
  9365  002B22  6F70               	movwf	___lltoft@exp& (0+255),b
  9366  002B24  D00C               	goto	l3738
  9367  002B26                     l3736:
  9368                           
  9369                           ; BSR set to: 0
  9370  002B26  0100               	movlb	0	; () banked
  9371  002B28  90D8               	bcf	status,0,c
  9372  002B2A  0100               	movlb	0	; () banked
  9373  002B2C  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
  9374  002B2E  0100               	movlb	0	; () banked
  9375  002B30  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
  9376  002B32  0100               	movlb	0	; () banked
  9377  002B34  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
  9378  002B36  0100               	movlb	0	; () banked
  9379  002B38  3368               	rrcf	___lltoft@c& (0+255),f,b
  9380  002B3A  0100               	movlb	0	; () banked
  9381  002B3C  2B70               	incf	___lltoft@exp& (0+255),f,b
  9382  002B3E                     l3738:
  9383                           
  9384                           ; BSR set to: 0
  9385  002B3E  0E00               	movlw	0
  9386  002B40  0100               	movlb	0	; () banked
  9387  002B42  1568               	andwf	___lltoft@c& (0+255),w,b
  9388  002B44  0100               	movlb	0	; () banked
  9389  002B46  6F6C               	movwf	??___lltoft& (0+255),b
  9390  002B48  0E00               	movlw	0
  9391  002B4A  0100               	movlb	0	; () banked
  9392  002B4C  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
  9393  002B4E  0100               	movlb	0	; () banked
  9394  002B50  6F6D               	movwf	(??___lltoft+1)& (0+255),b
  9395  002B52  0E00               	movlw	0
  9396  002B54  0100               	movlb	0	; () banked
  9397  002B56  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
  9398  002B58  0100               	movlb	0	; () banked
  9399  002B5A  6F6E               	movwf	(??___lltoft+2)& (0+255),b
  9400  002B5C  0EFF               	movlw	255
  9401  002B5E  0100               	movlb	0	; () banked
  9402  002B60  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
  9403  002B62  0100               	movlb	0	; () banked
  9404  002B64  6F6F               	movwf	(??___lltoft+3)& (0+255),b
  9405  002B66  0100               	movlb	0	; () banked
  9406  002B68  516F               	movf	(??___lltoft+3)& (0+255),w,b
  9407  002B6A  116C               	iorwf	??___lltoft& (0+255),w,b
  9408  002B6C  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
  9409  002B6E  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
  9410  002B70  A4D8               	btfss	status,2,c
  9411  002B72  D7D9               	goto	l3736
  9412                           
  9413                           ; BSR set to: 0
  9414                           
  9415                           ; BSR set to: 0
  9416  002B74  C068  F060         	movff	___lltoft@c,___ftpack@arg
  9417  002B78  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
  9418  002B7C  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
  9419  002B80  C070  F063         	movff	___lltoft@exp,___ftpack@exp
  9420  002B84  0E00               	movlw	0
  9421  002B86  0100               	movlb	0	; () banked
  9422  002B88  6F64               	movwf	___ftpack@sign& (0+255),b
  9423  002B8A  ECD5  F00E         	call	___ftpack	;wreg free
  9424  002B8E  C060  F068         	movff	?___ftpack,?___lltoft
  9425  002B92  C061  F069         	movff	?___ftpack+1,?___lltoft+1
  9426  002B96  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
  9427  002B9A  0012               	return	
  9428  002B9C                     __end_of___lltoft:
  9429                           	opt stack 0
  9430                           tblptru	equ	0xFF8
  9431                           tblptrh	equ	0xFF7
  9432                           tblptrl	equ	0xFF6
  9433                           tablat	equ	0xFF5
  9434                           prodh	equ	0xFF4
  9435                           prodl	equ	0xFF3
  9436                           intcon	equ	0xFF2
  9437                           intcon2	equ	0xFF1
  9438                           intcon3	equ	0xFF0
  9439                           indf0	equ	0xFEF
  9440                           postinc0	equ	0xFEE
  9441                           fsr0h	equ	0xFEA
  9442                           fsr0l	equ	0xFE9
  9443                           wreg	equ	0xFE8
  9444                           postinc1	equ	0xFE6
  9445                           postdec1	equ	0xFE5
  9446                           fsr1l	equ	0xFE1
  9447                           indf2	equ	0xFDF
  9448                           postinc2	equ	0xFDE
  9449                           postdec2	equ	0xFDD
  9450                           fsr2h	equ	0xFDA
  9451                           fsr2l	equ	0xFD9
  9452                           status	equ	0xFD8
  9453                           
  9454 ;; *************** function ___llmod *****************
  9455 ;; Defined at:
  9456 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\llmod.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;  dividend        4   13[BANK0 ] unsigned long 
  9459 ;;  divisor         4   17[BANK0 ] unsigned long 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;  counter         1   21[BANK0 ] unsigned char 
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  4   13[BANK0 ] unsigned long 
  9464 ;; Registers used:
  9465 ;;		wreg, status,2, status,0
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9471 ;;      Params:         0       8       0       0       0       0       0       0       0
  9472 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9474 ;;      Totals:         0       9       0       0       0       0       0       0       0
  9475 ;;Total ram usage:        9 bytes
  9476 ;; Hardware stack levels used:    1
  9477 ;; Hardware stack levels required when called:    4
  9478 ;; This function calls:
  9479 ;;		Nothing
  9480 ;; This function is called by:
  9481 ;;		_sprintf
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           	psect	text38
  9486  002854                     __ptext38:
  9487                           	opt stack 0
  9488  002854                     ___llmod:
  9489                           	opt stack 23
  9490                           
  9491                           ;incstack = 0
  9492  002854  0100               	movlb	0	; () banked
  9493  002856  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
  9494  002858  1171               	iorwf	___llmod@divisor& (0+255),w,b
  9495  00285A  1172               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9496  00285C  1173               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9497  00285E  B4D8               	btfsc	status,2,c
  9498  002860  D042               	goto	l1154
  9499                           
  9500                           ; BSR set to: 0
  9501  002862  0E01               	movlw	1
  9502  002864  0100               	movlb	0	; () banked
  9503  002866  6F75               	movwf	___llmod@counter& (0+255),b
  9504  002868  D00C               	goto	l3724
  9505  00286A                     l3722:
  9506                           
  9507                           ; BSR set to: 0
  9508  00286A  0100               	movlb	0	; () banked
  9509  00286C  90D8               	bcf	status,0,c
  9510  00286E  0100               	movlb	0	; () banked
  9511  002870  3771               	rlcf	___llmod@divisor& (0+255),f,b
  9512  002872  0100               	movlb	0	; () banked
  9513  002874  3772               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9514  002876  0100               	movlb	0	; () banked
  9515  002878  3773               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9516  00287A  0100               	movlb	0	; () banked
  9517  00287C  3774               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9518  00287E  0100               	movlb	0	; () banked
  9519  002880  2B75               	incf	___llmod@counter& (0+255),f,b
  9520  002882                     l3724:
  9521                           
  9522                           ; BSR set to: 0
  9523  002882  0100               	movlb	0	; () banked
  9524  002884  AF74               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9525  002886  D7F1               	goto	l3722
  9526  002888                     l3726:
  9527                           
  9528                           ; BSR set to: 0
  9529  002888  0100               	movlb	0	; () banked
  9530  00288A  5171               	movf	___llmod@divisor& (0+255),w,b
  9531  00288C  0100               	movlb	0	; () banked
  9532  00288E  5D6D               	subwf	___llmod@dividend& (0+255),w,b
  9533  002890  0100               	movlb	0	; () banked
  9534  002892  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
  9535  002894  0100               	movlb	0	; () banked
  9536  002896  596E               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9537  002898  0100               	movlb	0	; () banked
  9538  00289A  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
  9539  00289C  0100               	movlb	0	; () banked
  9540  00289E  596F               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9541  0028A0  0100               	movlb	0	; () banked
  9542  0028A2  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
  9543  0028A4  0100               	movlb	0	; () banked
  9544  0028A6  5970               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9545  0028A8  A0D8               	btfss	status,0,c
  9546  0028AA  D010               	goto	l3730
  9547                           
  9548                           ; BSR set to: 0
  9549  0028AC  0100               	movlb	0	; () banked
  9550  0028AE  5171               	movf	___llmod@divisor& (0+255),w,b
  9551  0028B0  0100               	movlb	0	; () banked
  9552  0028B2  5F6D               	subwf	___llmod@dividend& (0+255),f,b
  9553  0028B4  0100               	movlb	0	; () banked
  9554  0028B6  5172               	movf	(___llmod@divisor+1)& (0+255),w,b
  9555  0028B8  0100               	movlb	0	; () banked
  9556  0028BA  5B6E               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9557  0028BC  0100               	movlb	0	; () banked
  9558  0028BE  5173               	movf	(___llmod@divisor+2)& (0+255),w,b
  9559  0028C0  0100               	movlb	0	; () banked
  9560  0028C2  5B6F               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9561  0028C4  0100               	movlb	0	; () banked
  9562  0028C6  5174               	movf	(___llmod@divisor+3)& (0+255),w,b
  9563  0028C8  0100               	movlb	0	; () banked
  9564  0028CA  5B70               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9565  0028CC                     l3730:
  9566                           
  9567                           ; BSR set to: 0
  9568  0028CC  0100               	movlb	0	; () banked
  9569  0028CE  90D8               	bcf	status,0,c
  9570  0028D0  0100               	movlb	0	; () banked
  9571  0028D2  3374               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9572  0028D4  0100               	movlb	0	; () banked
  9573  0028D6  3373               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9574  0028D8  0100               	movlb	0	; () banked
  9575  0028DA  3372               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9576  0028DC  0100               	movlb	0	; () banked
  9577  0028DE  3371               	rrcf	___llmod@divisor& (0+255),f,b
  9578                           
  9579                           ; BSR set to: 0
  9580  0028E0  0100               	movlb	0	; () banked
  9581  0028E2  2F75               	decfsz	___llmod@counter& (0+255),f,b
  9582  0028E4  D7D1               	goto	l3726
  9583  0028E6                     l1154:
  9584                           
  9585                           ; BSR set to: 0
  9586  0028E6  C06D  F06D         	movff	___llmod@dividend,?___llmod
  9587  0028EA  C06E  F06E         	movff	___llmod@dividend+1,?___llmod+1
  9588  0028EE  C06F  F06F         	movff	___llmod@dividend+2,?___llmod+2
  9589  0028F2  C070  F070         	movff	___llmod@dividend+3,?___llmod+3
  9590                           
  9591                           ; BSR set to: 0
  9592  0028F6  0012               	return	
  9593  0028F8                     __end_of___llmod:
  9594                           	opt stack 0
  9595                           tblptru	equ	0xFF8
  9596                           tblptrh	equ	0xFF7
  9597                           tblptrl	equ	0xFF6
  9598                           tablat	equ	0xFF5
  9599                           prodh	equ	0xFF4
  9600                           prodl	equ	0xFF3
  9601                           intcon	equ	0xFF2
  9602                           intcon2	equ	0xFF1
  9603                           intcon3	equ	0xFF0
  9604                           indf0	equ	0xFEF
  9605                           postinc0	equ	0xFEE
  9606                           fsr0h	equ	0xFEA
  9607                           fsr0l	equ	0xFE9
  9608                           wreg	equ	0xFE8
  9609                           postinc1	equ	0xFE6
  9610                           postdec1	equ	0xFE5
  9611                           fsr1l	equ	0xFE1
  9612                           indf2	equ	0xFDF
  9613                           postinc2	equ	0xFDE
  9614                           postdec2	equ	0xFDD
  9615                           fsr2h	equ	0xFDA
  9616                           fsr2l	equ	0xFD9
  9617                           status	equ	0xFD8
  9618                           
  9619 ;; *************** function ___lldiv *****************
  9620 ;; Defined at:
  9621 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lldiv.c"
  9622 ;; Parameters:    Size  Location     Type
  9623 ;;  dividend        4    0[BANK0 ] unsigned long 
  9624 ;;  divisor         4    4[BANK0 ] unsigned long 
  9625 ;; Auto vars:     Size  Location     Type
  9626 ;;  quotient        4    8[BANK0 ] unsigned long 
  9627 ;;  counter         1   12[BANK0 ] unsigned char 
  9628 ;; Return value:  Size  Location     Type
  9629 ;;                  4    0[BANK0 ] unsigned long 
  9630 ;; Registers used:
  9631 ;;		wreg, status,2, status,0
  9632 ;; Tracked objects:
  9633 ;;		On entry : 0/0
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9637 ;;      Params:         0       8       0       0       0       0       0       0       0
  9638 ;;      Locals:         0       5       0       0       0       0       0       0       0
  9639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9640 ;;      Totals:         0      13       0       0       0       0       0       0       0
  9641 ;;Total ram usage:       13 bytes
  9642 ;; Hardware stack levels used:    1
  9643 ;; Hardware stack levels required when called:    4
  9644 ;; This function calls:
  9645 ;;		Nothing
  9646 ;; This function is called by:
  9647 ;;		_sprintf
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           	psect	text39
  9652  00216A                     __ptext39:
  9653                           	opt stack 0
  9654  00216A                     ___lldiv:
  9655                           	opt stack 23
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;incstack = 0
  9659  00216A  0E00               	movlw	0
  9660  00216C  0100               	movlb	0	; () banked
  9661  00216E  6F68               	movwf	___lldiv@quotient& (0+255),b
  9662  002170  0E00               	movlw	0
  9663  002172  0100               	movlb	0	; () banked
  9664  002174  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
  9665  002176  0E00               	movlw	0
  9666  002178  0100               	movlb	0	; () banked
  9667  00217A  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
  9668  00217C  0E00               	movlw	0
  9669  00217E  0100               	movlb	0	; () banked
  9670  002180  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
  9671                           
  9672                           ; BSR set to: 0
  9673  002182  0100               	movlb	0	; () banked
  9674  002184  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9675  002186  1164               	iorwf	___lldiv@divisor& (0+255),w,b
  9676  002188  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9677  00218A  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9678  00218C  B4D8               	btfsc	status,2,c
  9679  00218E  D04E               	goto	l1144
  9680                           
  9681                           ; BSR set to: 0
  9682  002190  0E01               	movlw	1
  9683  002192  0100               	movlb	0	; () banked
  9684  002194  6F6C               	movwf	___lldiv@counter& (0+255),b
  9685  002196  D00C               	goto	l3704
  9686  002198                     l3702:
  9687                           
  9688                           ; BSR set to: 0
  9689  002198  0100               	movlb	0	; () banked
  9690  00219A  90D8               	bcf	status,0,c
  9691  00219C  0100               	movlb	0	; () banked
  9692  00219E  3764               	rlcf	___lldiv@divisor& (0+255),f,b
  9693  0021A0  0100               	movlb	0	; () banked
  9694  0021A2  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9695  0021A4  0100               	movlb	0	; () banked
  9696  0021A6  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9697  0021A8  0100               	movlb	0	; () banked
  9698  0021AA  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9699  0021AC  0100               	movlb	0	; () banked
  9700  0021AE  2B6C               	incf	___lldiv@counter& (0+255),f,b
  9701  0021B0                     l3704:
  9702                           
  9703                           ; BSR set to: 0
  9704  0021B0  0100               	movlb	0	; () banked
  9705  0021B2  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  9706  0021B4  D7F1               	goto	l3702
  9707  0021B6                     l3706:
  9708                           
  9709                           ; BSR set to: 0
  9710  0021B6  0100               	movlb	0	; () banked
  9711  0021B8  90D8               	bcf	status,0,c
  9712  0021BA  0100               	movlb	0	; () banked
  9713  0021BC  3768               	rlcf	___lldiv@quotient& (0+255),f,b
  9714  0021BE  0100               	movlb	0	; () banked
  9715  0021C0  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  9716  0021C2  0100               	movlb	0	; () banked
  9717  0021C4  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  9718  0021C6  0100               	movlb	0	; () banked
  9719  0021C8  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  9720                           
  9721                           ; BSR set to: 0
  9722  0021CA  0100               	movlb	0	; () banked
  9723  0021CC  5164               	movf	___lldiv@divisor& (0+255),w,b
  9724  0021CE  0100               	movlb	0	; () banked
  9725  0021D0  5D60               	subwf	___lldiv@dividend& (0+255),w,b
  9726  0021D2  0100               	movlb	0	; () banked
  9727  0021D4  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9728  0021D6  0100               	movlb	0	; () banked
  9729  0021D8  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  9730  0021DA  0100               	movlb	0	; () banked
  9731  0021DC  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9732  0021DE  0100               	movlb	0	; () banked
  9733  0021E0  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  9734  0021E2  0100               	movlb	0	; () banked
  9735  0021E4  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9736  0021E6  0100               	movlb	0	; () banked
  9737  0021E8  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  9738  0021EA  A0D8               	btfss	status,0,c
  9739  0021EC  D012               	goto	l3714
  9740                           
  9741                           ; BSR set to: 0
  9742  0021EE  0100               	movlb	0	; () banked
  9743  0021F0  5164               	movf	___lldiv@divisor& (0+255),w,b
  9744  0021F2  0100               	movlb	0	; () banked
  9745  0021F4  5F60               	subwf	___lldiv@dividend& (0+255),f,b
  9746  0021F6  0100               	movlb	0	; () banked
  9747  0021F8  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9748  0021FA  0100               	movlb	0	; () banked
  9749  0021FC  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  9750  0021FE  0100               	movlb	0	; () banked
  9751  002200  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9752  002202  0100               	movlb	0	; () banked
  9753  002204  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  9754  002206  0100               	movlb	0	; () banked
  9755  002208  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9756  00220A  0100               	movlb	0	; () banked
  9757  00220C  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  9758                           
  9759                           ; BSR set to: 0
  9760  00220E  0100               	movlb	0	; () banked
  9761  002210  8168               	bsf	___lldiv@quotient& (0+255),0,b
  9762  002212                     l3714:
  9763                           
  9764                           ; BSR set to: 0
  9765  002212  0100               	movlb	0	; () banked
  9766  002214  90D8               	bcf	status,0,c
  9767  002216  0100               	movlb	0	; () banked
  9768  002218  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  9769  00221A  0100               	movlb	0	; () banked
  9770  00221C  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  9771  00221E  0100               	movlb	0	; () banked
  9772  002220  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  9773  002222  0100               	movlb	0	; () banked
  9774  002224  3364               	rrcf	___lldiv@divisor& (0+255),f,b
  9775                           
  9776                           ; BSR set to: 0
  9777  002226  0100               	movlb	0	; () banked
  9778  002228  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
  9779  00222A  D7C5               	goto	l3706
  9780  00222C                     l1144:
  9781                           
  9782                           ; BSR set to: 0
  9783  00222C  C068  F060         	movff	___lldiv@quotient,?___lldiv
  9784  002230  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
  9785  002234  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
  9786  002238  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
  9787                           
  9788                           ; BSR set to: 0
  9789  00223C  0012               	return	
  9790  00223E                     __end_of___lldiv:
  9791                           	opt stack 0
  9792                           tblptru	equ	0xFF8
  9793                           tblptrh	equ	0xFF7
  9794                           tblptrl	equ	0xFF6
  9795                           tablat	equ	0xFF5
  9796                           prodh	equ	0xFF4
  9797                           prodl	equ	0xFF3
  9798                           intcon	equ	0xFF2
  9799                           intcon2	equ	0xFF1
  9800                           intcon3	equ	0xFF0
  9801                           indf0	equ	0xFEF
  9802                           postinc0	equ	0xFEE
  9803                           fsr0h	equ	0xFEA
  9804                           fsr0l	equ	0xFE9
  9805                           wreg	equ	0xFE8
  9806                           postinc1	equ	0xFE6
  9807                           postdec1	equ	0xFE5
  9808                           fsr1l	equ	0xFE1
  9809                           indf2	equ	0xFDF
  9810                           postinc2	equ	0xFDE
  9811                           postdec2	equ	0xFDD
  9812                           fsr2h	equ	0xFDA
  9813                           fsr2l	equ	0xFD9
  9814                           status	equ	0xFD8
  9815                           
  9816 ;; *************** function ___fttol *****************
  9817 ;; Defined at:
  9818 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  f1              3   42[BANK0 ] float 
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;  lval            4   52[BANK0 ] unsigned long 
  9823 ;;  exp1            1   56[BANK0 ] unsigned char 
  9824 ;;  sign1           1   51[BANK0 ] unsigned char 
  9825 ;; Return value:  Size  Location     Type
  9826 ;;                  4   42[BANK0 ] long 
  9827 ;; Registers used:
  9828 ;;		wreg, status,2, status,0
  9829 ;; Tracked objects:
  9830 ;;		On entry : 0/0
  9831 ;;		On exit  : 0/0
  9832 ;;		Unchanged: 0/0
  9833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9834 ;;      Params:         0       4       0       0       0       0       0       0       0
  9835 ;;      Locals:         0       6       0       0       0       0       0       0       0
  9836 ;;      Temps:          0       5       0       0       0       0       0       0       0
  9837 ;;      Totals:         0      15       0       0       0       0       0       0       0
  9838 ;;Total ram usage:       15 bytes
  9839 ;; Hardware stack levels used:    1
  9840 ;; Hardware stack levels required when called:    4
  9841 ;; This function calls:
  9842 ;;		Nothing
  9843 ;; This function is called by:
  9844 ;;		_PWM_DutyCycle1
  9845 ;;		_PWM_DutyCycle2
  9846 ;;		_sprintf
  9847 ;; This function uses a non-reentrant model
  9848 ;;
  9849                           
  9850                           	psect	text40
  9851  001C60                     __ptext40:
  9852                           	opt stack 0
  9853  001C60                     ___fttol:
  9854                           	opt stack 23
  9855                           
  9856                           ; BSR set to: 0
  9857                           ;incstack = 0
  9858  001C60  0100               	movlb	0	; () banked
  9859  001C62  C08C  F08E         	movff	___fttol@f1+2,??___fttol
  9860  001C66  0100               	movlb	0	; () banked
  9861  001C68  6B8F               	clrf	(??___fttol+1)& (0+255),b
  9862  001C6A  6B90               	clrf	(??___fttol+2)& (0+255),b
  9863  001C6C  0100               	movlb	0	; () banked
  9864  001C6E  358B               	rlcf	(___fttol@f1+1)& (0+255),w,b
  9865  001C70  0100               	movlb	0	; () banked
  9866  001C72  378E               	rlcf	??___fttol& (0+255),f,b
  9867  001C74  E301               	bnc	u3601
  9868  001C76  818F               	bsf	(??___fttol+1)& (0+255),0,b
  9869  001C78                     u3601:
  9870  001C78  0100               	movlb	0	; () banked
  9871  001C7A  518E               	movf	??___fttol& (0+255),w,b
  9872  001C7C  0100               	movlb	0	; () banked
  9873  001C7E  6F98               	movwf	___fttol@exp1& (0+255),b
  9874  001C80  0100               	movlb	0	; () banked
  9875  001C82  6798               	tstfsz	___fttol@exp1& (0+255),b
  9876  001C84  D001               	goto	l3656
  9877  001C86  D059               	goto	u3650
  9878  001C88                     l3656:
  9879                           
  9880                           ; BSR set to: 0
  9881  001C88  0E17               	movlw	23
  9882  001C8A  0100               	movlb	0	; () banked
  9883  001C8C  6F8E               	movwf	??___fttol& (0+255),b
  9884  001C8E  0100               	movlb	0	; () banked
  9885  001C90  C08A  F08F         	movff	___fttol@f1,??___fttol+1
  9886  001C94  0100               	movlb	0	; () banked
  9887  001C96  C08B  F090         	movff	___fttol@f1+1,??___fttol+2
  9888  001C9A  0100               	movlb	0	; () banked
  9889  001C9C  C08C  F091         	movff	___fttol@f1+2,??___fttol+3
  9890  001CA0  0100               	movlb	0	; () banked
  9891  001CA2  298E               	incf	??___fttol& (0+255),w,b
  9892  001CA4  0100               	movlb	0	; () banked
  9893  001CA6  6F92               	movwf	(??___fttol+4)& (0+255),b
  9894  001CA8  D005               	goto	u3620
  9895  001CAA                     u3625:
  9896  001CAA  0100               	movlb	0	; () banked
  9897  001CAC  90D8               	bcf	status,0,c
  9898  001CAE  3391               	rrcf	(??___fttol+3)& (0+255),f,b
  9899  001CB0  3390               	rrcf	(??___fttol+2)& (0+255),f,b
  9900  001CB2  338F               	rrcf	(??___fttol+1)& (0+255),f,b
  9901  001CB4                     u3620:
  9902  001CB4  0100               	movlb	0	; () banked
  9903  001CB6  2F92               	decfsz	(??___fttol+4)& (0+255),f,b
  9904  001CB8  D7F8               	goto	u3625
  9905  001CBA  0100               	movlb	0	; () banked
  9906  001CBC  518F               	movf	(??___fttol+1)& (0+255),w,b
  9907  001CBE  0100               	movlb	0	; () banked
  9908  001CC0  6F93               	movwf	___fttol@sign1& (0+255),b
  9909                           
  9910                           ; BSR set to: 0
  9911  001CC2  0100               	movlb	0	; () banked
  9912  001CC4  8F8B               	bsf	(___fttol@f1+1)& (0+255),7,b
  9913                           
  9914                           ; BSR set to: 0
  9915  001CC6  0EFF               	movlw	255
  9916  001CC8  0100               	movlb	0	; () banked
  9917  001CCA  178A               	andwf	___fttol@f1& (0+255),f,b
  9918  001CCC  0EFF               	movlw	255
  9919  001CCE  0100               	movlb	0	; () banked
  9920  001CD0  178B               	andwf	(___fttol@f1+1)& (0+255),f,b
  9921  001CD2  0E00               	movlw	0
  9922  001CD4  0100               	movlb	0	; () banked
  9923  001CD6  178C               	andwf	(___fttol@f1+2)& (0+255),f,b
  9924                           
  9925                           ; BSR set to: 0
  9926  001CD8  0100               	movlb	0	; () banked
  9927  001CDA  518A               	movf	___fttol@f1& (0+255),w,b
  9928  001CDC  0100               	movlb	0	; () banked
  9929  001CDE  6F94               	movwf	___fttol@lval& (0+255),b
  9930  001CE0  0100               	movlb	0	; () banked
  9931  001CE2  518B               	movf	(___fttol@f1+1)& (0+255),w,b
  9932  001CE4  0100               	movlb	0	; () banked
  9933  001CE6  6F95               	movwf	(___fttol@lval+1)& (0+255),b
  9934  001CE8  0100               	movlb	0	; () banked
  9935  001CEA  518C               	movf	(___fttol@f1+2)& (0+255),w,b
  9936  001CEC  0100               	movlb	0	; () banked
  9937  001CEE  6F96               	movwf	(___fttol@lval+2)& (0+255),b
  9938  001CF0  0100               	movlb	0	; () banked
  9939  001CF2  6B97               	clrf	(___fttol@lval+3)& (0+255),b
  9940                           
  9941                           ; BSR set to: 0
  9942  001CF4  0E8E               	movlw	142
  9943  001CF6  0100               	movlb	0	; () banked
  9944  001CF8  5F98               	subwf	___fttol@exp1& (0+255),f,b
  9945                           
  9946                           ; BSR set to: 0
  9947  001CFA  0100               	movlb	0	; () banked
  9948  001CFC  AF98               	btfss	___fttol@exp1& (0+255),7,b
  9949  001CFE  D019               	goto	l3678
  9950                           
  9951                           ; BSR set to: 0
  9952  001D00  0100               	movlb	0	; () banked
  9953  001D02  5198               	movf	___fttol@exp1& (0+255),w,b
  9954  001D04  0A80               	xorlw	128
  9955  001D06  0100               	movlb	0	; () banked
  9956  001D08  6F8E               	movwf	??___fttol& (0+255),b
  9957  001D0A  0EF1               	movlw	241
  9958  001D0C  0A80               	xorlw	128
  9959  001D0E  0100               	movlb	0	; () banked
  9960  001D10  5D8E               	subwf	??___fttol& (0+255),w,b
  9961  001D12  A0D8               	btfss	status,0,c
  9962  001D14  D012               	goto	u3650
  9963  001D16                     l3674:
  9964                           
  9965                           ; BSR set to: 0
  9966  001D16  0100               	movlb	0	; () banked
  9967  001D18  90D8               	bcf	status,0,c
  9968  001D1A  0100               	movlb	0	; () banked
  9969  001D1C  3397               	rrcf	(___fttol@lval+3)& (0+255),f,b
  9970  001D1E  0100               	movlb	0	; () banked
  9971  001D20  3396               	rrcf	(___fttol@lval+2)& (0+255),f,b
  9972  001D22  0100               	movlb	0	; () banked
  9973  001D24  3395               	rrcf	(___fttol@lval+1)& (0+255),f,b
  9974  001D26  0100               	movlb	0	; () banked
  9975  001D28  3394               	rrcf	___fttol@lval& (0+255),f,b
  9976                           
  9977                           ; BSR set to: 0
  9978  001D2A  0100               	movlb	0	; () banked
  9979  001D2C  3F98               	incfsz	___fttol@exp1& (0+255),f,b
  9980  001D2E  D7F3               	goto	l3674
  9981  001D30  D020               	goto	l3688
  9982  001D32                     l3678:
  9983                           
  9984                           ; BSR set to: 0
  9985  001D32  0E17               	movlw	23
  9986  001D34  0100               	movlb	0	; () banked
  9987  001D36  6598               	cpfsgt	___fttol@exp1& (0+255),b
  9988  001D38  D019               	goto	l3686
  9989  001D3A                     u3650:
  9990                           
  9991                           ; BSR set to: 0
  9992  001D3A  0E00               	movlw	0
  9993  001D3C  0100               	movlb	0	; () banked
  9994  001D3E  6F8A               	movwf	?___fttol& (0+255),b
  9995  001D40  0E00               	movlw	0
  9996  001D42  0100               	movlb	0	; () banked
  9997  001D44  6F8B               	movwf	(?___fttol+1)& (0+255),b
  9998  001D46  0E00               	movlw	0
  9999  001D48  0100               	movlb	0	; () banked
 10000  001D4A  6F8C               	movwf	(?___fttol+2)& (0+255),b
 10001  001D4C  0E00               	movlw	0
 10002  001D4E  0100               	movlb	0	; () banked
 10003  001D50  6F8D               	movwf	(?___fttol+3)& (0+255),b
 10004  001D52  D02A               	goto	l1105
 10005  001D54                     l3684:
 10006                           
 10007                           ; BSR set to: 0
 10008  001D54  0100               	movlb	0	; () banked
 10009  001D56  90D8               	bcf	status,0,c
 10010  001D58  0100               	movlb	0	; () banked
 10011  001D5A  3794               	rlcf	___fttol@lval& (0+255),f,b
 10012  001D5C  0100               	movlb	0	; () banked
 10013  001D5E  3795               	rlcf	(___fttol@lval+1)& (0+255),f,b
 10014  001D60  0100               	movlb	0	; () banked
 10015  001D62  3796               	rlcf	(___fttol@lval+2)& (0+255),f,b
 10016  001D64  0100               	movlb	0	; () banked
 10017  001D66  3797               	rlcf	(___fttol@lval+3)& (0+255),f,b
 10018  001D68  0100               	movlb	0	; () banked
 10019  001D6A  0798               	decf	___fttol@exp1& (0+255),f,b
 10020  001D6C                     l3686:
 10021                           
 10022                           ; BSR set to: 0
 10023  001D6C  0100               	movlb	0	; () banked
 10024  001D6E  6798               	tstfsz	___fttol@exp1& (0+255),b
 10025  001D70  D7F1               	goto	l3684
 10026  001D72                     l3688:
 10027                           
 10028                           ; BSR set to: 0
 10029  001D72  0100               	movlb	0	; () banked
 10030  001D74  5193               	movf	___fttol@sign1& (0+255),w,b
 10031  001D76  B4D8               	btfsc	status,2,c
 10032  001D78  D00F               	goto	l3692
 10033                           
 10034                           ; BSR set to: 0
 10035  001D7A  0100               	movlb	0	; () banked
 10036  001D7C  1F97               	comf	(___fttol@lval+3)& (0+255),f,b
 10037  001D7E  0100               	movlb	0	; () banked
 10038  001D80  1F96               	comf	(___fttol@lval+2)& (0+255),f,b
 10039  001D82  0100               	movlb	0	; () banked
 10040  001D84  1F95               	comf	(___fttol@lval+1)& (0+255),f,b
 10041  001D86  0100               	movlb	0	; () banked
 10042  001D88  6D94               	negf	___fttol@lval& (0+255),b
 10043  001D8A  0E00               	movlw	0
 10044  001D8C  0100               	movlb	0	; () banked
 10045  001D8E  2395               	addwfc	(___fttol@lval+1)& (0+255),f,b
 10046  001D90  0100               	movlb	0	; () banked
 10047  001D92  2396               	addwfc	(___fttol@lval+2)& (0+255),f,b
 10048  001D94  0100               	movlb	0	; () banked
 10049  001D96  2397               	addwfc	(___fttol@lval+3)& (0+255),f,b
 10050  001D98                     l3692:
 10051                           
 10052                           ; BSR set to: 0
 10053  001D98  C094  F08A         	movff	___fttol@lval,?___fttol
 10054  001D9C  C095  F08B         	movff	___fttol@lval+1,?___fttol+1
 10055  001DA0  C096  F08C         	movff	___fttol@lval+2,?___fttol+2
 10056  001DA4  C097  F08D         	movff	___fttol@lval+3,?___fttol+3
 10057  001DA8                     l1105:
 10058                           
 10059                           ; BSR set to: 0
 10060  001DA8  0012               	return	
 10061  001DAA                     __end_of___fttol:
 10062                           	opt stack 0
 10063                           tblptru	equ	0xFF8
 10064                           tblptrh	equ	0xFF7
 10065                           tblptrl	equ	0xFF6
 10066                           tablat	equ	0xFF5
 10067                           prodh	equ	0xFF4
 10068                           prodl	equ	0xFF3
 10069                           intcon	equ	0xFF2
 10070                           intcon2	equ	0xFF1
 10071                           intcon3	equ	0xFF0
 10072                           indf0	equ	0xFEF
 10073                           postinc0	equ	0xFEE
 10074                           fsr0h	equ	0xFEA
 10075                           fsr0l	equ	0xFE9
 10076                           wreg	equ	0xFE8
 10077                           postinc1	equ	0xFE6
 10078                           postdec1	equ	0xFE5
 10079                           fsr1l	equ	0xFE1
 10080                           indf2	equ	0xFDF
 10081                           postinc2	equ	0xFDE
 10082                           postdec2	equ	0xFDD
 10083                           fsr2h	equ	0xFDA
 10084                           fsr2l	equ	0xFD9
 10085                           status	equ	0xFD8
 10086                           
 10087 ;; *************** function ___ftsub *****************
 10088 ;; Defined at:
 10089 ;;		line 20 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftsub.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  f1              3   57[BANK0 ] float 
 10092 ;;  f2              3   60[BANK0 ] float 
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;		None
 10095 ;; Return value:  Size  Location     Type
 10096 ;;                  3   57[BANK0 ] float 
 10097 ;; Registers used:
 10098 ;;		wreg, status,2, status,0, cstack
 10099 ;; Tracked objects:
 10100 ;;		On entry : 0/0
 10101 ;;		On exit  : 0/0
 10102 ;;		Unchanged: 0/0
 10103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10104 ;;      Params:         0       6       0       0       0       0       0       0       0
 10105 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10106 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10107 ;;      Totals:         0       6       0       0       0       0       0       0       0
 10108 ;;Total ram usage:        6 bytes
 10109 ;; Hardware stack levels used:    1
 10110 ;; Hardware stack levels required when called:    6
 10111 ;; This function calls:
 10112 ;;		___ftadd
 10113 ;; This function is called by:
 10114 ;;		_sprintf
 10115 ;; This function uses a non-reentrant model
 10116 ;;
 10117                           
 10118                           	psect	text41
 10119  0031CA                     __ptext41:
 10120                           	opt stack 0
 10121  0031CA                     ___ftsub:
 10122                           	opt stack 21
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;incstack = 0
 10126  0031CA  0E00               	movlw	0
 10127  0031CC  0100               	movlb	0	; () banked
 10128  0031CE  1B9C               	xorwf	___ftsub@f2& (0+255),f,b
 10129  0031D0  0E00               	movlw	0
 10130  0031D2  0100               	movlb	0	; () banked
 10131  0031D4  1B9D               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 10132  0031D6  0E80               	movlw	128
 10133  0031D8  0100               	movlb	0	; () banked
 10134  0031DA  1B9E               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 10135                           
 10136                           ; BSR set to: 0
 10137  0031DC  C099  F08D         	movff	___ftsub@f1,___ftadd@f1
 10138  0031E0  C09A  F08E         	movff	___ftsub@f1+1,___ftadd@f1+1
 10139  0031E4  C09B  F08F         	movff	___ftsub@f1+2,___ftadd@f1+2
 10140  0031E8  C09C  F090         	movff	___ftsub@f2,___ftadd@f2
 10141  0031EC  C09D  F091         	movff	___ftsub@f2+1,___ftadd@f2+1
 10142  0031F0  C09E  F092         	movff	___ftsub@f2+2,___ftadd@f2+2
 10143  0031F4  EC15  F009         	call	___ftadd	;wreg free
 10144  0031F8  C08D  F099         	movff	?___ftadd,?___ftsub
 10145  0031FC  C08E  F09A         	movff	?___ftadd+1,?___ftsub+1
 10146  003200  C08F  F09B         	movff	?___ftadd+2,?___ftsub+2
 10147  003204  0012               	return	
 10148  003206                     __end_of___ftsub:
 10149                           	opt stack 0
 10150                           tblptru	equ	0xFF8
 10151                           tblptrh	equ	0xFF7
 10152                           tblptrl	equ	0xFF6
 10153                           tablat	equ	0xFF5
 10154                           prodh	equ	0xFF4
 10155                           prodl	equ	0xFF3
 10156                           intcon	equ	0xFF2
 10157                           intcon2	equ	0xFF1
 10158                           intcon3	equ	0xFF0
 10159                           indf0	equ	0xFEF
 10160                           postinc0	equ	0xFEE
 10161                           fsr0h	equ	0xFEA
 10162                           fsr0l	equ	0xFE9
 10163                           wreg	equ	0xFE8
 10164                           postinc1	equ	0xFE6
 10165                           postdec1	equ	0xFE5
 10166                           fsr1l	equ	0xFE1
 10167                           indf2	equ	0xFDF
 10168                           postinc2	equ	0xFDE
 10169                           postdec2	equ	0xFDD
 10170                           fsr2h	equ	0xFDA
 10171                           fsr2l	equ	0xFD9
 10172                           status	equ	0xFD8
 10173                           
 10174 ;; *************** function ___ftadd *****************
 10175 ;; Defined at:
 10176 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftadd.c"
 10177 ;; Parameters:    Size  Location     Type
 10178 ;;  f1              3   45[BANK0 ] float 
 10179 ;;  f2              3   48[BANK0 ] float 
 10180 ;; Auto vars:     Size  Location     Type
 10181 ;;  exp1            1   56[BANK0 ] unsigned char 
 10182 ;;  exp2            1   55[BANK0 ] unsigned char 
 10183 ;;  sign            1   54[BANK0 ] unsigned char 
 10184 ;; Return value:  Size  Location     Type
 10185 ;;                  3   45[BANK0 ] float 
 10186 ;; Registers used:
 10187 ;;		wreg, status,2, status,0, cstack
 10188 ;; Tracked objects:
 10189 ;;		On entry : 0/0
 10190 ;;		On exit  : 0/0
 10191 ;;		Unchanged: 0/0
 10192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10193 ;;      Params:         0       6       0       0       0       0       0       0       0
 10194 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10195 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10196 ;;      Totals:         0      12       0       0       0       0       0       0       0
 10197 ;;Total ram usage:       12 bytes
 10198 ;; Hardware stack levels used:    1
 10199 ;; Hardware stack levels required when called:    5
 10200 ;; This function calls:
 10201 ;;		___ftpack
 10202 ;; This function is called by:
 10203 ;;		_sprintf
 10204 ;;		___ftsub
 10205 ;; This function uses a non-reentrant model
 10206 ;;
 10207                           
 10208                           	psect	text42
 10209  00122A                     __ptext42:
 10210                           	opt stack 0
 10211  00122A                     ___ftadd:
 10212                           	opt stack 21
 10213                           
 10214                           ;incstack = 0
 10215  00122A  0100               	movlb	0	; () banked
 10216  00122C  C08F  F093         	movff	___ftadd@f1+2,??___ftadd
 10217  001230  0100               	movlb	0	; () banked
 10218  001232  6B94               	clrf	(??___ftadd+1)& (0+255),b
 10219  001234  6B95               	clrf	(??___ftadd+2)& (0+255),b
 10220  001236  0100               	movlb	0	; () banked
 10221  001238  358E               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 10222  00123A  0100               	movlb	0	; () banked
 10223  00123C  3793               	rlcf	??___ftadd& (0+255),f,b
 10224  00123E  E301               	bnc	u2761
 10225  001240  8194               	bsf	(??___ftadd+1)& (0+255),0,b
 10226  001242                     u2761:
 10227  001242  0100               	movlb	0	; () banked
 10228  001244  5193               	movf	??___ftadd& (0+255),w,b
 10229  001246  0100               	movlb	0	; () banked
 10230  001248  6F98               	movwf	___ftadd@exp1& (0+255),b
 10231  00124A  0100               	movlb	0	; () banked
 10232  00124C  C092  F093         	movff	___ftadd@f2+2,??___ftadd
 10233  001250  0100               	movlb	0	; () banked
 10234  001252  6B94               	clrf	(??___ftadd+1)& (0+255),b
 10235  001254  6B95               	clrf	(??___ftadd+2)& (0+255),b
 10236  001256  0100               	movlb	0	; () banked
 10237  001258  3591               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 10238  00125A  0100               	movlb	0	; () banked
 10239  00125C  3793               	rlcf	??___ftadd& (0+255),f,b
 10240  00125E  E301               	bnc	u2771
 10241  001260  8194               	bsf	(??___ftadd+1)& (0+255),0,b
 10242  001262                     u2771:
 10243  001262  0100               	movlb	0	; () banked
 10244  001264  5193               	movf	??___ftadd& (0+255),w,b
 10245  001266  0100               	movlb	0	; () banked
 10246  001268  6F97               	movwf	___ftadd@exp2& (0+255),b
 10247                           
 10248                           ; BSR set to: 0
 10249  00126A  0100               	movlb	0	; () banked
 10250  00126C  5198               	movf	___ftadd@exp1& (0+255),w,b
 10251  00126E  B4D8               	btfsc	status,2,c
 10252  001270  D012               	goto	l1021
 10253                           
 10254                           ; BSR set to: 0
 10255  001272  0100               	movlb	0	; () banked
 10256  001274  5197               	movf	___ftadd@exp2& (0+255),w,b
 10257  001276  0100               	movlb	0	; () banked
 10258  001278  5D98               	subwf	___ftadd@exp1& (0+255),w,b
 10259  00127A  B0D8               	btfsc	status,0,c
 10260  00127C  D013               	goto	l3164
 10261                           
 10262                           ; BSR set to: 0
 10263  00127E  0100               	movlb	0	; () banked
 10264  001280  5198               	movf	___ftadd@exp1& (0+255),w,b
 10265  001282  0800               	sublw	0
 10266  001284  0100               	movlb	0	; () banked
 10267  001286  2597               	addwf	___ftadd@exp2& (0+255),w,b
 10268  001288  0100               	movlb	0	; () banked
 10269  00128A  6F93               	movwf	??___ftadd& (0+255),b
 10270  00128C  0E19               	movlw	25
 10271  00128E  0100               	movlb	0	; () banked
 10272  001290  5D93               	subwf	??___ftadd& (0+255),w,b
 10273  001292  A0D8               	btfss	status,0,c
 10274  001294  D007               	goto	l3164
 10275  001296                     l1021:
 10276                           
 10277                           ; BSR set to: 0
 10278  001296  C090  F08D         	movff	___ftadd@f2,?___ftadd
 10279  00129A  C091  F08E         	movff	___ftadd@f2+1,?___ftadd+1
 10280  00129E  C092  F08F         	movff	___ftadd@f2+2,?___ftadd+2
 10281  0012A2  D102               	goto	l1022
 10282  0012A4                     l3164:
 10283                           
 10284                           ; BSR set to: 0
 10285  0012A4  0100               	movlb	0	; () banked
 10286  0012A6  5197               	movf	___ftadd@exp2& (0+255),w,b
 10287  0012A8  B4D8               	btfsc	status,2,c
 10288  0012AA  D012               	goto	l1025
 10289                           
 10290                           ; BSR set to: 0
 10291  0012AC  0100               	movlb	0	; () banked
 10292  0012AE  5198               	movf	___ftadd@exp1& (0+255),w,b
 10293  0012B0  0100               	movlb	0	; () banked
 10294  0012B2  5D97               	subwf	___ftadd@exp2& (0+255),w,b
 10295  0012B4  B0D8               	btfsc	status,0,c
 10296  0012B6  D013               	goto	l3170
 10297                           
 10298                           ; BSR set to: 0
 10299  0012B8  0100               	movlb	0	; () banked
 10300  0012BA  5197               	movf	___ftadd@exp2& (0+255),w,b
 10301  0012BC  0800               	sublw	0
 10302  0012BE  0100               	movlb	0	; () banked
 10303  0012C0  2598               	addwf	___ftadd@exp1& (0+255),w,b
 10304  0012C2  0100               	movlb	0	; () banked
 10305  0012C4  6F93               	movwf	??___ftadd& (0+255),b
 10306  0012C6  0E19               	movlw	25
 10307  0012C8  0100               	movlb	0	; () banked
 10308  0012CA  5D93               	subwf	??___ftadd& (0+255),w,b
 10309  0012CC  A0D8               	btfss	status,0,c
 10310  0012CE  D007               	goto	l3170
 10311  0012D0                     l1025:
 10312                           
 10313                           ; BSR set to: 0
 10314  0012D0  C08D  F08D         	movff	___ftadd@f1,?___ftadd
 10315  0012D4  C08E  F08E         	movff	___ftadd@f1+1,?___ftadd+1
 10316  0012D8  C08F  F08F         	movff	___ftadd@f1+2,?___ftadd+2
 10317  0012DC  D0E5               	goto	l1022
 10318  0012DE                     l3170:
 10319                           
 10320                           ; BSR set to: 0
 10321  0012DE  0E06               	movlw	6
 10322  0012E0  0100               	movlb	0	; () banked
 10323  0012E2  6F96               	movwf	___ftadd@sign& (0+255),b
 10324                           
 10325                           ; BSR set to: 0
 10326  0012E4  0100               	movlb	0	; () banked
 10327  0012E6  AF8F               	btfss	(___ftadd@f1+2)& (0+255),7,b
 10328  0012E8  D002               	goto	l3176
 10329                           
 10330                           ; BSR set to: 0
 10331  0012EA  0100               	movlb	0	; () banked
 10332  0012EC  8F96               	bsf	___ftadd@sign& (0+255),7,b
 10333  0012EE                     l3176:
 10334                           
 10335                           ; BSR set to: 0
 10336  0012EE  0100               	movlb	0	; () banked
 10337  0012F0  AF92               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10338  0012F2  D002               	goto	l1027
 10339                           
 10340                           ; BSR set to: 0
 10341  0012F4  0100               	movlb	0	; () banked
 10342  0012F6  8D96               	bsf	___ftadd@sign& (0+255),6,b
 10343  0012F8                     l1027:
 10344                           
 10345                           ; BSR set to: 0
 10346  0012F8  0100               	movlb	0	; () banked
 10347  0012FA  8F8E               	bsf	(___ftadd@f1+1)& (0+255),7,b
 10348                           
 10349                           ; BSR set to: 0
 10350  0012FC  0EFF               	movlw	255
 10351  0012FE  0100               	movlb	0	; () banked
 10352  001300  178D               	andwf	___ftadd@f1& (0+255),f,b
 10353  001302  0EFF               	movlw	255
 10354  001304  0100               	movlb	0	; () banked
 10355  001306  178E               	andwf	(___ftadd@f1+1)& (0+255),f,b
 10356  001308  0E00               	movlw	0
 10357  00130A  0100               	movlb	0	; () banked
 10358  00130C  178F               	andwf	(___ftadd@f1+2)& (0+255),f,b
 10359  00130E  0100               	movlb	0	; () banked
 10360  001310  8F91               	bsf	(___ftadd@f2+1)& (0+255),7,b
 10361                           
 10362                           ; BSR set to: 0
 10363  001312  0EFF               	movlw	255
 10364  001314  0100               	movlb	0	; () banked
 10365  001316  1790               	andwf	___ftadd@f2& (0+255),f,b
 10366  001318  0EFF               	movlw	255
 10367  00131A  0100               	movlb	0	; () banked
 10368  00131C  1791               	andwf	(___ftadd@f2+1)& (0+255),f,b
 10369  00131E  0E00               	movlw	0
 10370  001320  0100               	movlb	0	; () banked
 10371  001322  1792               	andwf	(___ftadd@f2+2)& (0+255),f,b
 10372                           
 10373                           ; BSR set to: 0
 10374  001324  0100               	movlb	0	; () banked
 10375  001326  5197               	movf	___ftadd@exp2& (0+255),w,b
 10376  001328  0100               	movlb	0	; () banked
 10377  00132A  5D98               	subwf	___ftadd@exp1& (0+255),w,b
 10378  00132C  B0D8               	btfsc	status,0,c
 10379  00132E  D02A               	goto	l3196
 10380  001330                     l3186:
 10381                           
 10382                           ; BSR set to: 0
 10383  001330  0100               	movlb	0	; () banked
 10384  001332  90D8               	bcf	status,0,c
 10385  001334  0100               	movlb	0	; () banked
 10386  001336  3790               	rlcf	___ftadd@f2& (0+255),f,b
 10387  001338  0100               	movlb	0	; () banked
 10388  00133A  3791               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 10389  00133C  0100               	movlb	0	; () banked
 10390  00133E  3792               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 10391  001340  0100               	movlb	0	; () banked
 10392  001342  0797               	decf	___ftadd@exp2& (0+255),f,b
 10393                           
 10394                           ; BSR set to: 0
 10395  001344  0100               	movlb	0	; () banked
 10396  001346  5197               	movf	___ftadd@exp2& (0+255),w,b
 10397  001348  0100               	movlb	0	; () banked
 10398  00134A  1998               	xorwf	___ftadd@exp1& (0+255),w,b
 10399  00134C  B4D8               	btfsc	status,2,c
 10400  00134E  D014               	goto	l3194
 10401                           
 10402                           ; BSR set to: 0
 10403  001350  0100               	movlb	0	; () banked
 10404  001352  0796               	decf	___ftadd@sign& (0+255),f,b
 10405  001354  C096  F093         	movff	___ftadd@sign,??___ftadd
 10406  001358  0E07               	movlw	7
 10407  00135A  0100               	movlb	0	; () banked
 10408  00135C  1793               	andwf	??___ftadd& (0+255),f,b
 10409  00135E  B4D8               	btfsc	status,2,c
 10410  001360  D00B               	goto	l3194
 10411  001362  D7E6               	goto	l3186
 10412  001364                     l3192:
 10413                           
 10414                           ; BSR set to: 0
 10415  001364  0100               	movlb	0	; () banked
 10416  001366  90D8               	bcf	status,0,c
 10417  001368  0100               	movlb	0	; () banked
 10418  00136A  338F               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 10419  00136C  0100               	movlb	0	; () banked
 10420  00136E  338E               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 10421  001370  0100               	movlb	0	; () banked
 10422  001372  338D               	rrcf	___ftadd@f1& (0+255),f,b
 10423  001374  0100               	movlb	0	; () banked
 10424  001376  2B98               	incf	___ftadd@exp1& (0+255),f,b
 10425  001378                     l3194:
 10426                           
 10427                           ; BSR set to: 0
 10428  001378  0100               	movlb	0	; () banked
 10429  00137A  5197               	movf	___ftadd@exp2& (0+255),w,b
 10430  00137C  0100               	movlb	0	; () banked
 10431  00137E  6398               	cpfseq	___ftadd@exp1& (0+255),b
 10432  001380  D7F1               	goto	l3192
 10433  001382  D02F               	goto	l1036
 10434  001384                     l3196:
 10435                           
 10436                           ; BSR set to: 0
 10437  001384  0100               	movlb	0	; () banked
 10438  001386  5198               	movf	___ftadd@exp1& (0+255),w,b
 10439  001388  0100               	movlb	0	; () banked
 10440  00138A  5D97               	subwf	___ftadd@exp2& (0+255),w,b
 10441  00138C  B0D8               	btfsc	status,0,c
 10442  00138E  D029               	goto	l1036
 10443  001390                     l3198:
 10444                           
 10445                           ; BSR set to: 0
 10446  001390  0100               	movlb	0	; () banked
 10447  001392  90D8               	bcf	status,0,c
 10448  001394  0100               	movlb	0	; () banked
 10449  001396  378D               	rlcf	___ftadd@f1& (0+255),f,b
 10450  001398  0100               	movlb	0	; () banked
 10451  00139A  378E               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 10452  00139C  0100               	movlb	0	; () banked
 10453  00139E  378F               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 10454  0013A0  0100               	movlb	0	; () banked
 10455  0013A2  0798               	decf	___ftadd@exp1& (0+255),f,b
 10456                           
 10457                           ; BSR set to: 0
 10458  0013A4  0100               	movlb	0	; () banked
 10459  0013A6  5197               	movf	___ftadd@exp2& (0+255),w,b
 10460  0013A8  0100               	movlb	0	; () banked
 10461  0013AA  1998               	xorwf	___ftadd@exp1& (0+255),w,b
 10462  0013AC  B4D8               	btfsc	status,2,c
 10463  0013AE  D014               	goto	l3206
 10464                           
 10465                           ; BSR set to: 0
 10466  0013B0  0100               	movlb	0	; () banked
 10467  0013B2  0796               	decf	___ftadd@sign& (0+255),f,b
 10468  0013B4  C096  F093         	movff	___ftadd@sign,??___ftadd
 10469  0013B8  0E07               	movlw	7
 10470  0013BA  0100               	movlb	0	; () banked
 10471  0013BC  1793               	andwf	??___ftadd& (0+255),f,b
 10472  0013BE  B4D8               	btfsc	status,2,c
 10473  0013C0  D00B               	goto	l3206
 10474  0013C2  D7E6               	goto	l3198
 10475  0013C4                     l3204:
 10476                           
 10477                           ; BSR set to: 0
 10478  0013C4  0100               	movlb	0	; () banked
 10479  0013C6  90D8               	bcf	status,0,c
 10480  0013C8  0100               	movlb	0	; () banked
 10481  0013CA  3392               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 10482  0013CC  0100               	movlb	0	; () banked
 10483  0013CE  3391               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 10484  0013D0  0100               	movlb	0	; () banked
 10485  0013D2  3390               	rrcf	___ftadd@f2& (0+255),f,b
 10486  0013D4  0100               	movlb	0	; () banked
 10487  0013D6  2B97               	incf	___ftadd@exp2& (0+255),f,b
 10488  0013D8                     l3206:
 10489                           
 10490                           ; BSR set to: 0
 10491  0013D8  0100               	movlb	0	; () banked
 10492  0013DA  5197               	movf	___ftadd@exp2& (0+255),w,b
 10493  0013DC  0100               	movlb	0	; () banked
 10494  0013DE  6398               	cpfseq	___ftadd@exp1& (0+255),b
 10495  0013E0  D7F1               	goto	l3204
 10496  0013E2                     l1036:
 10497                           
 10498                           ; BSR set to: 0
 10499  0013E2  0100               	movlb	0	; () banked
 10500  0013E4  AF96               	btfss	___ftadd@sign& (0+255),7,b
 10501  0013E6  D012               	goto	l1045
 10502                           
 10503                           ; BSR set to: 0
 10504  0013E8  0EFF               	movlw	255
 10505  0013EA  0100               	movlb	0	; () banked
 10506  0013EC  1B8D               	xorwf	___ftadd@f1& (0+255),f,b
 10507  0013EE  0EFF               	movlw	255
 10508  0013F0  0100               	movlb	0	; () banked
 10509  0013F2  1B8E               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 10510  0013F4  0EFF               	movlw	255
 10511  0013F6  0100               	movlb	0	; () banked
 10512  0013F8  1B8F               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 10513  0013FA  0E01               	movlw	1
 10514  0013FC  0100               	movlb	0	; () banked
 10515  0013FE  278D               	addwf	___ftadd@f1& (0+255),f,b
 10516  001400  0E00               	movlw	0
 10517  001402  0100               	movlb	0	; () banked
 10518  001404  238E               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 10519  001406  0E00               	movlw	0
 10520  001408  0100               	movlb	0	; () banked
 10521  00140A  238F               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 10522  00140C                     l1045:
 10523                           
 10524                           ; BSR set to: 0
 10525  00140C  0100               	movlb	0	; () banked
 10526  00140E  AD96               	btfss	___ftadd@sign& (0+255),6,b
 10527  001410  D012               	goto	l3212
 10528                           
 10529                           ; BSR set to: 0
 10530  001412  0EFF               	movlw	255
 10531  001414  0100               	movlb	0	; () banked
 10532  001416  1B90               	xorwf	___ftadd@f2& (0+255),f,b
 10533  001418  0EFF               	movlw	255
 10534  00141A  0100               	movlb	0	; () banked
 10535  00141C  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10536  00141E  0EFF               	movlw	255
 10537  001420  0100               	movlb	0	; () banked
 10538  001422  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10539  001424  0E01               	movlw	1
 10540  001426  0100               	movlb	0	; () banked
 10541  001428  2790               	addwf	___ftadd@f2& (0+255),f,b
 10542  00142A  0E00               	movlw	0
 10543  00142C  0100               	movlb	0	; () banked
 10544  00142E  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10545  001430  0E00               	movlw	0
 10546  001432  0100               	movlb	0	; () banked
 10547  001434  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10548  001436                     l3212:
 10549                           
 10550                           ; BSR set to: 0
 10551  001436  0E00               	movlw	0
 10552  001438  0100               	movlb	0	; () banked
 10553  00143A  6F96               	movwf	___ftadd@sign& (0+255),b
 10554                           
 10555                           ; BSR set to: 0
 10556  00143C  0100               	movlb	0	; () banked
 10557  00143E  518D               	movf	___ftadd@f1& (0+255),w,b
 10558  001440  0100               	movlb	0	; () banked
 10559  001442  2790               	addwf	___ftadd@f2& (0+255),f,b
 10560  001444  0100               	movlb	0	; () banked
 10561  001446  518E               	movf	(___ftadd@f1+1)& (0+255),w,b
 10562  001448  0100               	movlb	0	; () banked
 10563  00144A  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10564  00144C  0100               	movlb	0	; () banked
 10565  00144E  518F               	movf	(___ftadd@f1+2)& (0+255),w,b
 10566  001450  0100               	movlb	0	; () banked
 10567  001452  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10568                           
 10569                           ; BSR set to: 0
 10570  001454  0100               	movlb	0	; () banked
 10571  001456  AF92               	btfss	(___ftadd@f2+2)& (0+255),7,b
 10572  001458  D015               	goto	l3222
 10573                           
 10574                           ; BSR set to: 0
 10575  00145A  0EFF               	movlw	255
 10576  00145C  0100               	movlb	0	; () banked
 10577  00145E  1B90               	xorwf	___ftadd@f2& (0+255),f,b
 10578  001460  0EFF               	movlw	255
 10579  001462  0100               	movlb	0	; () banked
 10580  001464  1B91               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 10581  001466  0EFF               	movlw	255
 10582  001468  0100               	movlb	0	; () banked
 10583  00146A  1B92               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 10584  00146C  0E01               	movlw	1
 10585  00146E  0100               	movlb	0	; () banked
 10586  001470  2790               	addwf	___ftadd@f2& (0+255),f,b
 10587  001472  0E00               	movlw	0
 10588  001474  0100               	movlb	0	; () banked
 10589  001476  2391               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 10590  001478  0E00               	movlw	0
 10591  00147A  0100               	movlb	0	; () banked
 10592  00147C  2392               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 10593                           
 10594                           ; BSR set to: 0
 10595  00147E  0E01               	movlw	1
 10596  001480  0100               	movlb	0	; () banked
 10597  001482  6F96               	movwf	___ftadd@sign& (0+255),b
 10598  001484                     l3222:
 10599                           
 10600                           ; BSR set to: 0
 10601  001484  C090  F060         	movff	___ftadd@f2,___ftpack@arg
 10602  001488  C091  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 10603  00148C  C092  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 10604  001490  C098  F063         	movff	___ftadd@exp1,___ftpack@exp
 10605  001494  C096  F064         	movff	___ftadd@sign,___ftpack@sign
 10606  001498  ECD5  F00E         	call	___ftpack	;wreg free
 10607  00149C  C060  F08D         	movff	?___ftpack,?___ftadd
 10608  0014A0  C061  F08E         	movff	?___ftpack+1,?___ftadd+1
 10609  0014A4  C062  F08F         	movff	?___ftpack+2,?___ftadd+2
 10610  0014A8                     l1022:
 10611  0014A8  0012               	return	
 10612  0014AA                     __end_of___ftadd:
 10613                           	opt stack 0
 10614                           tblptru	equ	0xFF8
 10615                           tblptrh	equ	0xFF7
 10616                           tblptrl	equ	0xFF6
 10617                           tablat	equ	0xFF5
 10618                           prodh	equ	0xFF4
 10619                           prodl	equ	0xFF3
 10620                           intcon	equ	0xFF2
 10621                           intcon2	equ	0xFF1
 10622                           intcon3	equ	0xFF0
 10623                           indf0	equ	0xFEF
 10624                           postinc0	equ	0xFEE
 10625                           fsr0h	equ	0xFEA
 10626                           fsr0l	equ	0xFE9
 10627                           wreg	equ	0xFE8
 10628                           postinc1	equ	0xFE6
 10629                           postdec1	equ	0xFE5
 10630                           fsr1l	equ	0xFE1
 10631                           indf2	equ	0xFDF
 10632                           postinc2	equ	0xFDE
 10633                           postdec2	equ	0xFDD
 10634                           fsr2h	equ	0xFDA
 10635                           fsr2l	equ	0xFD9
 10636                           status	equ	0xFD8
 10637                           
 10638 ;; *************** function ___ftpack *****************
 10639 ;; Defined at:
 10640 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
 10641 ;; Parameters:    Size  Location     Type
 10642 ;;  arg             3    0[BANK0 ] unsigned um
 10643 ;;  exp             1    3[BANK0 ] unsigned char 
 10644 ;;  sign            1    4[BANK0 ] unsigned char 
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;		None
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  3    0[BANK0 ] float 
 10649 ;; Registers used:
 10650 ;;		wreg, status,2, status,0
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10656 ;;      Params:         0       5       0       0       0       0       0       0       0
 10657 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10658 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10659 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10660 ;;Total ram usage:        8 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; Hardware stack levels required when called:    4
 10663 ;; This function calls:
 10664 ;;		Nothing
 10665 ;; This function is called by:
 10666 ;;		___ftadd
 10667 ;;		___ftmul
 10668 ;;		___lbtoft
 10669 ;;		___lltoft
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           	psect	text43
 10674  001DAA                     __ptext43:
 10675                           	opt stack 0
 10676  001DAA                     ___ftpack:
 10677                           	opt stack 21
 10678                           
 10679                           ;incstack = 0
 10680  001DAA  0100               	movlb	0	; () banked
 10681  001DAC  5163               	movf	___ftpack@exp& (0+255),w,b
 10682  001DAE  B4D8               	btfsc	status,2,c
 10683  001DB0  D008               	goto	l3102
 10684                           
 10685                           ; BSR set to: 0
 10686  001DB2  0100               	movlb	0	; () banked
 10687  001DB4  5160               	movf	___ftpack@arg& (0+255),w,b
 10688  001DB6  0100               	movlb	0	; () banked
 10689  001DB8  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 10690  001DBA  0100               	movlb	0	; () banked
 10691  001DBC  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 10692  001DBE  A4D8               	btfss	status,2,c
 10693  001DC0  D014               	goto	l3108
 10694  001DC2                     l3102:
 10695                           
 10696                           ; BSR set to: 0
 10697  001DC2  0E00               	movlw	0
 10698  001DC4  0100               	movlb	0	; () banked
 10699  001DC6  6F60               	movwf	?___ftpack& (0+255),b
 10700  001DC8  0E00               	movlw	0
 10701  001DCA  0100               	movlb	0	; () banked
 10702  001DCC  6F61               	movwf	(?___ftpack+1)& (0+255),b
 10703  001DCE  0E00               	movlw	0
 10704  001DD0  0100               	movlb	0	; () banked
 10705  001DD2  6F62               	movwf	(?___ftpack+2)& (0+255),b
 10706  001DD4  D06E               	goto	l984
 10707  001DD6                     l3106:
 10708                           
 10709                           ; BSR set to: 0
 10710  001DD6  0100               	movlb	0	; () banked
 10711  001DD8  2B63               	incf	___ftpack@exp& (0+255),f,b
 10712  001DDA  0100               	movlb	0	; () banked
 10713  001DDC  90D8               	bcf	status,0,c
 10714  001DDE  0100               	movlb	0	; () banked
 10715  001DE0  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10716  001DE2  0100               	movlb	0	; () banked
 10717  001DE4  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10718  001DE6  0100               	movlb	0	; () banked
 10719  001DE8  3360               	rrcf	___ftpack@arg& (0+255),f,b
 10720  001DEA                     l3108:
 10721                           
 10722                           ; BSR set to: 0
 10723  001DEA  0E00               	movlw	0
 10724  001DEC  0100               	movlb	0	; () banked
 10725  001DEE  1560               	andwf	___ftpack@arg& (0+255),w,b
 10726  001DF0  0100               	movlb	0	; () banked
 10727  001DF2  6F65               	movwf	??___ftpack& (0+255),b
 10728  001DF4  0E00               	movlw	0
 10729  001DF6  0100               	movlb	0	; () banked
 10730  001DF8  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10731  001DFA  0100               	movlb	0	; () banked
 10732  001DFC  6F66               	movwf	(??___ftpack+1)& (0+255),b
 10733  001DFE  0EFE               	movlw	254
 10734  001E00  0100               	movlb	0	; () banked
 10735  001E02  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10736  001E04  0100               	movlb	0	; () banked
 10737  001E06  6F67               	movwf	(??___ftpack+2)& (0+255),b
 10738  001E08  0100               	movlb	0	; () banked
 10739  001E0A  5165               	movf	??___ftpack& (0+255),w,b
 10740  001E0C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 10741  001E0E  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 10742  001E10  B4D8               	btfsc	status,2,c
 10743  001E12  D014               	goto	l3114
 10744  001E14  D7E0               	goto	l3106
 10745  001E16                     l3110:
 10746                           
 10747                           ; BSR set to: 0
 10748  001E16  0100               	movlb	0	; () banked
 10749  001E18  2B63               	incf	___ftpack@exp& (0+255),f,b
 10750                           
 10751                           ; BSR set to: 0
 10752  001E1A  0E01               	movlw	1
 10753  001E1C  0100               	movlb	0	; () banked
 10754  001E1E  2760               	addwf	___ftpack@arg& (0+255),f,b
 10755  001E20  0E00               	movlw	0
 10756  001E22  0100               	movlb	0	; () banked
 10757  001E24  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 10758  001E26  0E00               	movlw	0
 10759  001E28  0100               	movlb	0	; () banked
 10760  001E2A  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 10761  001E2C  0100               	movlb	0	; () banked
 10762  001E2E  90D8               	bcf	status,0,c
 10763  001E30  0100               	movlb	0	; () banked
 10764  001E32  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 10765  001E34  0100               	movlb	0	; () banked
 10766  001E36  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 10767  001E38  0100               	movlb	0	; () banked
 10768  001E3A  3360               	rrcf	___ftpack@arg& (0+255),f,b
 10769  001E3C                     l3114:
 10770                           
 10771                           ; BSR set to: 0
 10772  001E3C  0E00               	movlw	0
 10773  001E3E  0100               	movlb	0	; () banked
 10774  001E40  1560               	andwf	___ftpack@arg& (0+255),w,b
 10775  001E42  0100               	movlb	0	; () banked
 10776  001E44  6F65               	movwf	??___ftpack& (0+255),b
 10777  001E46  0E00               	movlw	0
 10778  001E48  0100               	movlb	0	; () banked
 10779  001E4A  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 10780  001E4C  0100               	movlb	0	; () banked
 10781  001E4E  6F66               	movwf	(??___ftpack+1)& (0+255),b
 10782  001E50  0EFF               	movlw	255
 10783  001E52  0100               	movlb	0	; () banked
 10784  001E54  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 10785  001E56  0100               	movlb	0	; () banked
 10786  001E58  6F67               	movwf	(??___ftpack+2)& (0+255),b
 10787  001E5A  0100               	movlb	0	; () banked
 10788  001E5C  5165               	movf	??___ftpack& (0+255),w,b
 10789  001E5E  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 10790  001E60  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 10791  001E62  B4D8               	btfsc	status,2,c
 10792  001E64  D00B               	goto	l3118
 10793  001E66  D7D7               	goto	l3110
 10794  001E68                     l3116:
 10795                           
 10796                           ; BSR set to: 0
 10797  001E68  0100               	movlb	0	; () banked
 10798  001E6A  0763               	decf	___ftpack@exp& (0+255),f,b
 10799  001E6C  0100               	movlb	0	; () banked
 10800  001E6E  90D8               	bcf	status,0,c
 10801  001E70  0100               	movlb	0	; () banked
 10802  001E72  3760               	rlcf	___ftpack@arg& (0+255),f,b
 10803  001E74  0100               	movlb	0	; () banked
 10804  001E76  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 10805  001E78  0100               	movlb	0	; () banked
 10806  001E7A  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 10807  001E7C                     l3118:
 10808                           
 10809                           ; BSR set to: 0
 10810  001E7C  0100               	movlb	0	; () banked
 10811  001E7E  AF61               	btfss	(___ftpack@arg+1)& (0+255),7,b
 10812  001E80  D7F3               	goto	l3116
 10813                           
 10814                           ; BSR set to: 0
 10815  001E82  0100               	movlb	0	; () banked
 10816  001E84  B163               	btfsc	___ftpack@exp& (0+255),0,b
 10817  001E86  D002               	goto	l3122
 10818                           
 10819                           ; BSR set to: 0
 10820  001E88  0100               	movlb	0	; () banked
 10821  001E8A  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 10822  001E8C                     l3122:
 10823                           
 10824                           ; BSR set to: 0
 10825  001E8C  0100               	movlb	0	; () banked
 10826  001E8E  90D8               	bcf	status,0,c
 10827  001E90  3363               	rrcf	___ftpack@exp& (0+255),f,b
 10828  001E92  0100               	movlb	0	; () banked
 10829  001E94  5163               	movf	___ftpack@exp& (0+255),w,b
 10830  001E96  0100               	movlb	0	; () banked
 10831  001E98  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 10832                           
 10833                           ; BSR set to: 0
 10834  001E9A  0100               	movlb	0	; () banked
 10835  001E9C  5164               	movf	___ftpack@sign& (0+255),w,b
 10836  001E9E  B4D8               	btfsc	status,2,c
 10837  001EA0  D002               	goto	l3128
 10838                           
 10839                           ; BSR set to: 0
 10840  001EA2  0100               	movlb	0	; () banked
 10841  001EA4  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 10842  001EA6                     l3128:
 10843                           
 10844                           ; BSR set to: 0
 10845  001EA6  C060  F060         	movff	___ftpack@arg,?___ftpack
 10846  001EAA  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 10847  001EAE  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 10848  001EB2                     l984:
 10849                           
 10850                           ; BSR set to: 0
 10851  001EB2  0012               	return	
 10852  001EB4                     __end_of___ftpack:
 10853                           	opt stack 0
 10854                           tblptru	equ	0xFF8
 10855                           tblptrh	equ	0xFF7
 10856                           tblptrl	equ	0xFF6
 10857                           tablat	equ	0xFF5
 10858                           prodh	equ	0xFF4
 10859                           prodl	equ	0xFF3
 10860                           intcon	equ	0xFF2
 10861                           intcon2	equ	0xFF1
 10862                           intcon3	equ	0xFF0
 10863                           indf0	equ	0xFEF
 10864                           postinc0	equ	0xFEE
 10865                           fsr0h	equ	0xFEA
 10866                           fsr0l	equ	0xFE9
 10867                           wreg	equ	0xFE8
 10868                           postinc1	equ	0xFE6
 10869                           postdec1	equ	0xFE5
 10870                           fsr1l	equ	0xFE1
 10871                           indf2	equ	0xFDF
 10872                           postinc2	equ	0xFDE
 10873                           postdec2	equ	0xFDD
 10874                           fsr2h	equ	0xFDA
 10875                           fsr2l	equ	0xFD9
 10876                           status	equ	0xFD8
 10877                           
 10878 ;; *************** function ___ftneg *****************
 10879 ;; Defined at:
 10880 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftneg.c"
 10881 ;; Parameters:    Size  Location     Type
 10882 ;;  f1              3    0[BANK0 ] float 
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;		None
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  3    0[BANK0 ] float 
 10887 ;; Registers used:
 10888 ;;		wreg, status,2, status,0
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10894 ;;      Params:         0       3       0       0       0       0       0       0       0
 10895 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10896 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10897 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10898 ;;Total ram usage:        3 bytes
 10899 ;; Hardware stack levels used:    1
 10900 ;; Hardware stack levels required when called:    4
 10901 ;; This function calls:
 10902 ;;		Nothing
 10903 ;; This function is called by:
 10904 ;;		_sprintf
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           	psect	text44
 10909  003350                     __ptext44:
 10910                           	opt stack 0
 10911  003350                     ___ftneg:
 10912                           	opt stack 23
 10913                           
 10914                           ; BSR set to: 0
 10915                           ;incstack = 0
 10916  003350  0E7F               	movlw	127
 10917  003352  0100               	movlb	0	; () banked
 10918  003354  1562               	andwf	(___ftneg@f1+2)& (0+255),w,b
 10919  003356  0100               	movlb	0	; () banked
 10920  003358  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 10921  00335A  0100               	movlb	0	; () banked
 10922  00335C  1160               	iorwf	___ftneg@f1& (0+255),w,b
 10923  00335E  B4D8               	btfsc	status,2,c
 10924  003360  D009               	goto	l1095
 10925                           
 10926                           ; BSR set to: 0
 10927  003362  0E00               	movlw	0
 10928  003364  0100               	movlb	0	; () banked
 10929  003366  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 10930  003368  0E00               	movlw	0
 10931  00336A  0100               	movlb	0	; () banked
 10932  00336C  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 10933  00336E  0E80               	movlw	128
 10934  003370  0100               	movlb	0	; () banked
 10935  003372  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 10936  003374                     l1095:
 10937                           
 10938                           ; BSR set to: 0
 10939  003374  C060  F060         	movff	___ftneg@f1,?___ftneg
 10940  003378  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 10941  00337C  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 10942                           
 10943                           ; BSR set to: 0
 10944  003380  0012               	return	
 10945  003382                     __end_of___ftneg:
 10946                           	opt stack 0
 10947                           tblptru	equ	0xFF8
 10948                           tblptrh	equ	0xFF7
 10949                           tblptrl	equ	0xFF6
 10950                           tablat	equ	0xFF5
 10951                           prodh	equ	0xFF4
 10952                           prodl	equ	0xFF3
 10953                           intcon	equ	0xFF2
 10954                           intcon2	equ	0xFF1
 10955                           intcon3	equ	0xFF0
 10956                           indf0	equ	0xFEF
 10957                           postinc0	equ	0xFEE
 10958                           fsr0h	equ	0xFEA
 10959                           fsr0l	equ	0xFE9
 10960                           wreg	equ	0xFE8
 10961                           postinc1	equ	0xFE6
 10962                           postdec1	equ	0xFE5
 10963                           fsr1l	equ	0xFE1
 10964                           indf2	equ	0xFDF
 10965                           postinc2	equ	0xFDE
 10966                           postdec2	equ	0xFDD
 10967                           fsr2h	equ	0xFDA
 10968                           fsr2l	equ	0xFD9
 10969                           status	equ	0xFD8
 10970                           
 10971 ;; *************** function ___ftge *****************
 10972 ;; Defined at:
 10973 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftge.c"
 10974 ;; Parameters:    Size  Location     Type
 10975 ;;  ff1             3    0[BANK0 ] float 
 10976 ;;  ff2             3    3[BANK0 ] float 
 10977 ;; Auto vars:     Size  Location     Type
 10978 ;;		None
 10979 ;; Return value:  Size  Location     Type
 10980 ;;		None               void
 10981 ;; Registers used:
 10982 ;;		wreg, status,2, status,0
 10983 ;; Tracked objects:
 10984 ;;		On entry : 0/0
 10985 ;;		On exit  : 0/0
 10986 ;;		Unchanged: 0/0
 10987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10988 ;;      Params:         0       6       0       0       0       0       0       0       0
 10989 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10990 ;;      Temps:          0       3       0       0       0       0       0       0       0
 10991 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10992 ;;Total ram usage:        9 bytes
 10993 ;; Hardware stack levels used:    1
 10994 ;; Hardware stack levels required when called:    4
 10995 ;; This function calls:
 10996 ;;		Nothing
 10997 ;; This function is called by:
 10998 ;;		_sprintf
 10999 ;; This function uses a non-reentrant model
 11000 ;;
 11001                           
 11002                           	psect	text45
 11003  00223E                     __ptext45:
 11004                           	opt stack 0
 11005  00223E                     ___ftge:
 11006                           	opt stack 23
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;incstack = 0
 11010  00223E  0100               	movlb	0	; () banked
 11011  002240  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 11012  002242  D020               	goto	l3632
 11013                           
 11014                           ; BSR set to: 0
 11015  002244  0100               	movlb	0	; () banked
 11016  002246  C060  F066         	movff	___ftge@ff1,??___ftge
 11017  00224A  0100               	movlb	0	; () banked
 11018  00224C  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 11019  002250  0100               	movlb	0	; () banked
 11020  002252  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 11021  002256  0100               	movlb	0	; () banked
 11022  002258  1F66               	comf	??___ftge& (0+255),f,b
 11023  00225A  1F67               	comf	(??___ftge+1)& (0+255),f,b
 11024  00225C  1F68               	comf	(??___ftge+2)& (0+255),f,b
 11025  00225E  2B66               	incf	??___ftge& (0+255),f,b
 11026  002260  0E00               	movlw	0
 11027  002262  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 11028  002264  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 11029  002266  0E00               	movlw	0
 11030  002268  0100               	movlb	0	; () banked
 11031  00226A  2566               	addwf	??___ftge& (0+255),w,b
 11032  00226C  0100               	movlb	0	; () banked
 11033  00226E  6F60               	movwf	___ftge@ff1& (0+255),b
 11034  002270  0E00               	movlw	0
 11035  002272  0100               	movlb	0	; () banked
 11036  002274  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 11037  002276  0100               	movlb	0	; () banked
 11038  002278  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 11039  00227A  0E80               	movlw	128
 11040  00227C  0100               	movlb	0	; () banked
 11041  00227E  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 11042  002280  0100               	movlb	0	; () banked
 11043  002282  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 11044  002284                     l3632:
 11045                           
 11046                           ; BSR set to: 0
 11047  002284  0100               	movlb	0	; () banked
 11048  002286  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 11049  002288  D020               	goto	l3636
 11050                           
 11051                           ; BSR set to: 0
 11052  00228A  0100               	movlb	0	; () banked
 11053  00228C  C063  F066         	movff	___ftge@ff2,??___ftge
 11054  002290  0100               	movlb	0	; () banked
 11055  002292  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 11056  002296  0100               	movlb	0	; () banked
 11057  002298  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 11058  00229C  0100               	movlb	0	; () banked
 11059  00229E  1F66               	comf	??___ftge& (0+255),f,b
 11060  0022A0  1F67               	comf	(??___ftge+1)& (0+255),f,b
 11061  0022A2  1F68               	comf	(??___ftge+2)& (0+255),f,b
 11062  0022A4  2B66               	incf	??___ftge& (0+255),f,b
 11063  0022A6  0E00               	movlw	0
 11064  0022A8  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 11065  0022AA  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 11066  0022AC  0E00               	movlw	0
 11067  0022AE  0100               	movlb	0	; () banked
 11068  0022B0  2566               	addwf	??___ftge& (0+255),w,b
 11069  0022B2  0100               	movlb	0	; () banked
 11070  0022B4  6F63               	movwf	___ftge@ff2& (0+255),b
 11071  0022B6  0E00               	movlw	0
 11072  0022B8  0100               	movlb	0	; () banked
 11073  0022BA  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 11074  0022BC  0100               	movlb	0	; () banked
 11075  0022BE  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 11076  0022C0  0E80               	movlw	128
 11077  0022C2  0100               	movlb	0	; () banked
 11078  0022C4  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 11079  0022C6  0100               	movlb	0	; () banked
 11080  0022C8  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 11081  0022CA                     l3636:
 11082                           
 11083                           ; BSR set to: 0
 11084  0022CA  0E00               	movlw	0
 11085  0022CC  0100               	movlb	0	; () banked
 11086  0022CE  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 11087  0022D0  0E00               	movlw	0
 11088  0022D2  0100               	movlb	0	; () banked
 11089  0022D4  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 11090  0022D6  0E80               	movlw	128
 11091  0022D8  0100               	movlb	0	; () banked
 11092  0022DA  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 11093                           
 11094                           ; BSR set to: 0
 11095  0022DC  0E00               	movlw	0
 11096  0022DE  0100               	movlb	0	; () banked
 11097  0022E0  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 11098  0022E2  0E00               	movlw	0
 11099  0022E4  0100               	movlb	0	; () banked
 11100  0022E6  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 11101  0022E8  0E80               	movlw	128
 11102  0022EA  0100               	movlb	0	; () banked
 11103  0022EC  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 11104  0022EE  0100               	movlb	0	; () banked
 11105  0022F0  5163               	movf	___ftge@ff2& (0+255),w,b
 11106  0022F2  0100               	movlb	0	; () banked
 11107  0022F4  5D60               	subwf	___ftge@ff1& (0+255),w,b
 11108  0022F6  0100               	movlb	0	; () banked
 11109  0022F8  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 11110  0022FA  0100               	movlb	0	; () banked
 11111  0022FC  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 11112  0022FE  0100               	movlb	0	; () banked
 11113  002300  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 11114  002302  0100               	movlb	0	; () banked
 11115  002304  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 11116  002306  B0D8               	btfsc	status,0,c
 11117  002308  D002               	goto	l3642
 11118                           
 11119                           ; BSR set to: 0
 11120  00230A  90D8               	bcf	status,0,c
 11121  00230C  D001               	goto	l1079
 11122  00230E                     l3642:
 11123                           
 11124                           ; BSR set to: 0
 11125  00230E  80D8               	bsf	status,0,c
 11126  002310                     l1079:
 11127                           
 11128                           ; BSR set to: 0
 11129  002310  0012               	return	
 11130  002312                     __end_of___ftge:
 11131                           	opt stack 0
 11132                           tblptru	equ	0xFF8
 11133                           tblptrh	equ	0xFF7
 11134                           tblptrl	equ	0xFF6
 11135                           tablat	equ	0xFF5
 11136                           prodh	equ	0xFF4
 11137                           prodl	equ	0xFF3
 11138                           intcon	equ	0xFF2
 11139                           intcon2	equ	0xFF1
 11140                           intcon3	equ	0xFF0
 11141                           indf0	equ	0xFEF
 11142                           postinc0	equ	0xFEE
 11143                           fsr0h	equ	0xFEA
 11144                           fsr0l	equ	0xFE9
 11145                           wreg	equ	0xFE8
 11146                           postinc1	equ	0xFE6
 11147                           postdec1	equ	0xFE5
 11148                           fsr1l	equ	0xFE1
 11149                           indf2	equ	0xFDF
 11150                           postinc2	equ	0xFDE
 11151                           postdec2	equ	0xFDD
 11152                           fsr2h	equ	0xFDA
 11153                           fsr2l	equ	0xFD9
 11154                           status	equ	0xFD8
 11155                           
 11156 ;; *************** function _Lcd_Write_String *****************
 11157 ;; Defined at:
 11158 ;;		line 90 in file "lcd.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;  a               2    4[BANK0 ] PTR unsigned char 
 11161 ;;		 -> STR_24(11), STR_23(7), STR_22(18), STR_21(17), 
 11162 ;;		 -> STR_20(17), STR_19(17), Lcd_Write_Integer@s(20), Lcd_Write_Float@s(20), 
 11163 ;;		 -> STR_16(8), STR_14(2), STR_13(2), STR_12(2), 
 11164 ;;		 -> STR_11(16), STR_10(7), 
 11165 ;; Auto vars:     Size  Location     Type
 11166 ;;  i               2    8[BANK0 ] int 
 11167 ;; Return value:  Size  Location     Type
 11168 ;;		None               void
 11169 ;; Registers used:
 11170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11171 ;; Tracked objects:
 11172 ;;		On entry : 0/0
 11173 ;;		On exit  : 0/0
 11174 ;;		Unchanged: 0/0
 11175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11176 ;;      Params:         0       2       0       0       0       0       0       0       0
 11177 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11178 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11179 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11180 ;;Total ram usage:        6 bytes
 11181 ;; Hardware stack levels used:    1
 11182 ;; Hardware stack levels required when called:    6
 11183 ;; This function calls:
 11184 ;;		_Lcd_Write_Char
 11185 ;; This function is called by:
 11186 ;;		_Inicializa_Driveby
 11187 ;;		_Comando_Tablet
 11188 ;;		_Lcd_Write_Integer
 11189 ;;		_main
 11190 ;;		_Lcd_Write_Float
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text46
 11195  0028F8                     __ptext46:
 11196                           	opt stack 0
 11197  0028F8                     _Lcd_Write_String:
 11198                           	opt stack 24
 11199                           
 11200                           ;lcd.c: 91: int i;
 11201                           ;lcd.c: 92: for (i = 0; a[i] != '\0'; i++)
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;incstack = 0
 11205  0028F8  0E00               	movlw	0
 11206  0028FA  0100               	movlb	0	; () banked
 11207  0028FC  6F69               	movwf	(Lcd_Write_String@i+1)& (0+255),b
 11208  0028FE  0E00               	movlw	0
 11209  002900  0100               	movlb	0	; () banked
 11210  002902  6F68               	movwf	Lcd_Write_String@i& (0+255),b
 11211  002904  D023               	goto	l3974
 11212  002906                     l3970:
 11213                           
 11214                           ;lcd.c: 93: Lcd_Write_Char(a[i]);
 11215  002906  0100               	movlb	0	; () banked
 11216  002908  C064  F066         	movff	Lcd_Write_String@a,??_Lcd_Write_String
 11217  00290C  0100               	movlb	0	; () banked
 11218  00290E  C065  F067         	movff	Lcd_Write_String@a+1,??_Lcd_Write_String+1
 11219  002912  0100               	movlb	0	; () banked
 11220  002914  5168               	movf	Lcd_Write_String@i& (0+255),w,b
 11221  002916  0100               	movlb	0	; () banked
 11222  002918  2766               	addwf	??_Lcd_Write_String& (0+255),f,b
 11223  00291A  0100               	movlb	0	; () banked
 11224  00291C  5169               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
 11225  00291E  0100               	movlb	0	; () banked
 11226  002920  2367               	addwfc	(??_Lcd_Write_String+1)& (0+255),f,b
 11227  002922  C066  FFF6         	movff	??_Lcd_Write_String,tblptrl
 11228  002926  C067  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 11229  00292A  6AF8               	clrf	tblptru,c
 11230  00292C  0E07               	movlw	(high __ramtop+-1)
 11231  00292E  64F7               	cpfsgt	tblptrh,c
 11232  002930  D003               	bra	u4077
 11233  002932  0008               	tblrd		*
 11234  002934  50F5               	movf	tablat,w,c
 11235  002936  D005               	bra	u4070
 11236  002938                     u4077:
 11237  002938  CFF6 FFE9          	movff	tblptrl,fsr0l
 11238  00293C  CFF7 FFEA          	movff	tblptrh,fsr0h
 11239  002940  50EF               	movf	indf0,w,c
 11240  002942                     u4070:
 11241  002942  EC5F  F018         	call	_Lcd_Write_Char
 11242  002946  0100               	movlb	0	; () banked
 11243  002948  4B68               	infsnz	Lcd_Write_String@i& (0+255),f,b
 11244  00294A  2B69               	incf	(Lcd_Write_String@i+1)& (0+255),f,b
 11245  00294C                     l3974:
 11246                           
 11247                           ; BSR set to: 0
 11248  00294C  0100               	movlb	0	; () banked
 11249  00294E  C064  F066         	movff	Lcd_Write_String@a,??_Lcd_Write_String
 11250  002952  0100               	movlb	0	; () banked
 11251  002954  C065  F067         	movff	Lcd_Write_String@a+1,??_Lcd_Write_String+1
 11252  002958  0100               	movlb	0	; () banked
 11253  00295A  5168               	movf	Lcd_Write_String@i& (0+255),w,b
 11254  00295C  0100               	movlb	0	; () banked
 11255  00295E  2766               	addwf	??_Lcd_Write_String& (0+255),f,b
 11256  002960  0100               	movlb	0	; () banked
 11257  002962  5169               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
 11258  002964  0100               	movlb	0	; () banked
 11259  002966  2367               	addwfc	(??_Lcd_Write_String+1)& (0+255),f,b
 11260  002968  C066  FFF6         	movff	??_Lcd_Write_String,tblptrl
 11261  00296C  C067  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 11262  002970  6AF8               	clrf	tblptru,c
 11263  002972  0E07               	movlw	(high __ramtop+-1)
 11264  002974  64F7               	cpfsgt	tblptrh,c
 11265  002976  D003               	bra	u4087
 11266  002978  0008               	tblrd		*
 11267  00297A  50F5               	movf	tablat,w,c
 11268  00297C  D005               	bra	u4080
 11269  00297E                     u4087:
 11270  00297E  CFF6 FFE9          	movff	tblptrl,fsr0l
 11271  002982  CFF7 FFEA          	movff	tblptrh,fsr0h
 11272  002986  50EF               	movf	indf0,w,c
 11273  002988                     u4080:
 11274  002988  0900               	iorlw	0
 11275  00298A  B4D8               	btfsc	status,2,c
 11276  00298C  0012               	return	
 11277  00298E  D7BB               	goto	l3970
 11278  002990                     __end_of_Lcd_Write_String:
 11279                           	opt stack 0
 11280                           tblptru	equ	0xFF8
 11281                           tblptrh	equ	0xFF7
 11282                           tblptrl	equ	0xFF6
 11283                           tablat	equ	0xFF5
 11284                           prodh	equ	0xFF4
 11285                           prodl	equ	0xFF3
 11286                           intcon	equ	0xFF2
 11287                           intcon2	equ	0xFF1
 11288                           intcon3	equ	0xFF0
 11289                           indf0	equ	0xFEF
 11290                           postinc0	equ	0xFEE
 11291                           fsr0h	equ	0xFEA
 11292                           fsr0l	equ	0xFE9
 11293                           wreg	equ	0xFE8
 11294                           postinc1	equ	0xFE6
 11295                           postdec1	equ	0xFE5
 11296                           fsr1l	equ	0xFE1
 11297                           indf2	equ	0xFDF
 11298                           postinc2	equ	0xFDE
 11299                           postdec2	equ	0xFDD
 11300                           fsr2h	equ	0xFDA
 11301                           fsr2l	equ	0xFD9
 11302                           status	equ	0xFD8
 11303                           
 11304 ;; *************** function _Lcd_Write_Char *****************
 11305 ;; Defined at:
 11306 ;;		line 75 in file "lcd.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;  a               1    wreg     unsigned char 
 11309 ;; Auto vars:     Size  Location     Type
 11310 ;;  a               1    3[BANK0 ] unsigned char 
 11311 ;;  y               1    2[BANK0 ] unsigned char 
 11312 ;;  temp            1    1[BANK0 ] unsigned char 
 11313 ;; Return value:  Size  Location     Type
 11314 ;;		None               void
 11315 ;; Registers used:
 11316 ;;		wreg, status,2, status,0, cstack
 11317 ;; Tracked objects:
 11318 ;;		On entry : 0/0
 11319 ;;		On exit  : 0/0
 11320 ;;		Unchanged: 0/0
 11321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11322 ;;      Params:         0       0       0       0       0       0       0       0       0
 11323 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11324 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11325 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11326 ;;Total ram usage:        3 bytes
 11327 ;; Hardware stack levels used:    1
 11328 ;; Hardware stack levels required when called:    5
 11329 ;; This function calls:
 11330 ;;		_Lcd_Port
 11331 ;; This function is called by:
 11332 ;;		_Lcd_Write_String
 11333 ;; This function uses a non-reentrant model
 11334 ;;
 11335                           
 11336                           	psect	text47
 11337  0030BE                     __ptext47:
 11338                           	opt stack 0
 11339  0030BE                     _Lcd_Write_Char:
 11340                           	opt stack 24
 11341                           
 11342                           ;incstack = 0
 11343                           ;Lcd_Write_Char@a stored from wreg
 11344  0030BE  0100               	movlb	0	; () banked
 11345  0030C0  6F63               	movwf	Lcd_Write_Char@a& (0+255),b
 11346                           
 11347                           ; BSR set to: 0
 11348                           ;lcd.c: 76: char temp, y;
 11349                           ;lcd.c: 77: temp = a & 0x0F;
 11350  0030C2  0100               	movlb	0	; () banked
 11351  0030C4  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 11352  0030C6  0B0F               	andlw	15
 11353  0030C8  0100               	movlb	0	; () banked
 11354  0030CA  6F61               	movwf	Lcd_Write_Char@temp& (0+255),b
 11355                           
 11356                           ;lcd.c: 78: y = a & 0xF0;
 11357  0030CC  0100               	movlb	0	; () banked
 11358  0030CE  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 11359  0030D0  0BF0               	andlw	240
 11360  0030D2  0100               	movlb	0	; () banked
 11361  0030D4  6F62               	movwf	Lcd_Write_Char@y& (0+255),b
 11362                           
 11363                           ; BSR set to: 0
 11364                           ;lcd.c: 79: PORTEbits.RE0 = 1;
 11365  0030D6  8084               	bsf	3972,0,c	;volatile
 11366                           
 11367                           ; BSR set to: 0
 11368                           ;lcd.c: 80: Lcd_Port(y >> 4);
 11369  0030D8  0100               	movlb	0	; () banked
 11370  0030DA  3962               	swapf	Lcd_Write_Char@y& (0+255),w,b
 11371  0030DC  0B0F               	andlw	15
 11372  0030DE  EC74  F019         	call	_Lcd_Port
 11373                           
 11374                           ;lcd.c: 81: PORTEbits.RE2 = 1;
 11375  0030E2  8484               	bsf	3972,2,c	;volatile
 11376                           
 11377                           ;lcd.c: 82: _delay((unsigned long)((40)*(4000000/4000000.0)));
 11378  0030E4  0E0D               	movlw	13
 11379  0030E6                     u5327:
 11380  0030E6  2EE8               	decfsz	wreg,f,c
 11381  0030E8  D7FE               	goto	u5327
 11382  0030EA  F000               	nop	
 11383                           
 11384                           ;lcd.c: 83: PORTEbits.RE2 = 0;
 11385  0030EC  9484               	bcf	3972,2,c	;volatile
 11386                           
 11387                           ;lcd.c: 84: Lcd_Port(temp);
 11388  0030EE  0100               	movlb	0	; () banked
 11389  0030F0  5161               	movf	Lcd_Write_Char@temp& (0+255),w,b
 11390  0030F2  EC74  F019         	call	_Lcd_Port
 11391                           
 11392                           ;lcd.c: 85: PORTEbits.RE2 = 1;
 11393  0030F6  8484               	bsf	3972,2,c	;volatile
 11394                           
 11395                           ;lcd.c: 86: _delay((unsigned long)((40)*(4000000/4000000.0)));
 11396  0030F8  0E0D               	movlw	13
 11397  0030FA                     u5337:
 11398  0030FA  2EE8               	decfsz	wreg,f,c
 11399  0030FC  D7FE               	goto	u5337
 11400  0030FE  F000               	nop	
 11401                           
 11402                           ;lcd.c: 87: PORTEbits.RE2 = 0;
 11403  003100  9484               	bcf	3972,2,c	;volatile
 11404  003102  0012               	return	
 11405  003104                     __end_of_Lcd_Write_Char:
 11406                           	opt stack 0
 11407                           tblptru	equ	0xFF8
 11408                           tblptrh	equ	0xFF7
 11409                           tblptrl	equ	0xFF6
 11410                           tablat	equ	0xFF5
 11411                           prodh	equ	0xFF4
 11412                           prodl	equ	0xFF3
 11413                           intcon	equ	0xFF2
 11414                           intcon2	equ	0xFF1
 11415                           intcon3	equ	0xFF0
 11416                           indf0	equ	0xFEF
 11417                           postinc0	equ	0xFEE
 11418                           fsr0h	equ	0xFEA
 11419                           fsr0l	equ	0xFE9
 11420                           wreg	equ	0xFE8
 11421                           postinc1	equ	0xFE6
 11422                           postdec1	equ	0xFE5
 11423                           fsr1l	equ	0xFE1
 11424                           indf2	equ	0xFDF
 11425                           postinc2	equ	0xFDE
 11426                           postdec2	equ	0xFDD
 11427                           fsr2h	equ	0xFDA
 11428                           fsr2l	equ	0xFD9
 11429                           status	equ	0xFD8
 11430                           
 11431 ;; *************** function _Lcd_Set_Cursor *****************
 11432 ;; Defined at:
 11433 ;;		line 40 in file "lcd.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;  a               1    wreg     unsigned char 
 11436 ;;  b               1    3[BANK0 ] unsigned char 
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;  a               1    4[BANK0 ] unsigned char 
 11439 ;;  temp            1    7[BANK0 ] unsigned char 
 11440 ;;  y               1    6[BANK0 ] unsigned char 
 11441 ;;  z               1    5[BANK0 ] unsigned char 
 11442 ;; Return value:  Size  Location     Type
 11443 ;;		None               void
 11444 ;; Registers used:
 11445 ;;		wreg, status,2, status,0, cstack
 11446 ;; Tracked objects:
 11447 ;;		On entry : 0/0
 11448 ;;		On exit  : 0/0
 11449 ;;		Unchanged: 0/0
 11450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11451 ;;      Params:         0       1       0       0       0       0       0       0       0
 11452 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11453 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11454 ;;      Totals:         0       5       0       0       0       0       0       0       0
 11455 ;;Total ram usage:        5 bytes
 11456 ;; Hardware stack levels used:    1
 11457 ;; Hardware stack levels required when called:    6
 11458 ;; This function calls:
 11459 ;;		_Lcd_Cmd
 11460 ;; This function is called by:
 11461 ;;		_Inicializa_Driveby
 11462 ;;		_Comando_Tablet
 11463 ;;		_main
 11464 ;; This function uses a non-reentrant model
 11465 ;;
 11466                           
 11467                           	psect	text48
 11468  002D86                     __ptext48:
 11469                           	opt stack 0
 11470  002D86                     _Lcd_Set_Cursor:
 11471                           	opt stack 24
 11472                           
 11473                           ;incstack = 0
 11474                           ;Lcd_Set_Cursor@a stored from wreg
 11475  002D86  0100               	movlb	0	; () banked
 11476  002D88  6F64               	movwf	Lcd_Set_Cursor@a& (0+255),b
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;lcd.c: 41: char temp, z, y;
 11480                           ;lcd.c: 42: if (a == 1) {
 11481  002D8A  0100               	movlb	0	; () banked
 11482  002D8C  0564               	decf	Lcd_Set_Cursor@a& (0+255),w,b
 11483  002D8E  A4D8               	btfss	status,2,c
 11484  002D90  D018               	goto	l4156
 11485                           
 11486                           ; BSR set to: 0
 11487                           ;lcd.c: 43: temp = 0x80 + b - 1;
 11488  002D92  0100               	movlb	0	; () banked
 11489  002D94  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 11490  002D96  0F7F               	addlw	127
 11491  002D98  0100               	movlb	0	; () banked
 11492  002D9A  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 11493                           
 11494                           ;lcd.c: 44: z = temp >> 4;
 11495  002D9C  0100               	movlb	0	; () banked
 11496  002D9E  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 11497  002DA0  0B0F               	andlw	15
 11498  002DA2  0100               	movlb	0	; () banked
 11499  002DA4  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 11500                           
 11501                           ;lcd.c: 45: y = temp & 0x0F;
 11502  002DA6  0100               	movlb	0	; () banked
 11503  002DA8  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 11504  002DAA  0B0F               	andlw	15
 11505  002DAC  0100               	movlb	0	; () banked
 11506  002DAE  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 11507                           
 11508                           ; BSR set to: 0
 11509                           ;lcd.c: 46: Lcd_Cmd(z);
 11510  002DB0  0100               	movlb	0	; () banked
 11511  002DB2  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 11512  002DB4  ECFD  F019         	call	_Lcd_Cmd
 11513                           
 11514                           ;lcd.c: 47: Lcd_Cmd(y);
 11515  002DB8  0100               	movlb	0	; () banked
 11516  002DBA  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 11517  002DBC  ECFD  F019         	call	_Lcd_Cmd
 11518                           
 11519                           ;lcd.c: 48: } else if (a == 2) {
 11520  002DC0  D01C               	goto	l273
 11521  002DC2                     l4156:
 11522  002DC2  0100               	movlb	0	; () banked
 11523  002DC4  5164               	movf	Lcd_Set_Cursor@a& (0+255),w,b
 11524  002DC6  0A02               	xorlw	2
 11525  002DC8  A4D8               	btfss	status,2,c
 11526  002DCA  D017               	goto	l273
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;lcd.c: 49: temp = 0xC0 + b - 1;
 11530  002DCC  0100               	movlb	0	; () banked
 11531  002DCE  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 11532  002DD0  0FBF               	addlw	191
 11533  002DD2  0100               	movlb	0	; () banked
 11534  002DD4  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 11535                           
 11536                           ;lcd.c: 50: z = temp >> 4;
 11537  002DD6  0100               	movlb	0	; () banked
 11538  002DD8  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 11539  002DDA  0B0F               	andlw	15
 11540  002DDC  0100               	movlb	0	; () banked
 11541  002DDE  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 11542                           
 11543                           ;lcd.c: 51: y = temp & 0x0F;
 11544  002DE0  0100               	movlb	0	; () banked
 11545  002DE2  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 11546  002DE4  0B0F               	andlw	15
 11547  002DE6  0100               	movlb	0	; () banked
 11548  002DE8  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 11549                           
 11550                           ; BSR set to: 0
 11551                           ;lcd.c: 52: Lcd_Cmd(z);
 11552  002DEA  0100               	movlb	0	; () banked
 11553  002DEC  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 11554  002DEE  ECFD  F019         	call	_Lcd_Cmd
 11555                           
 11556                           ;lcd.c: 53: Lcd_Cmd(y);
 11557  002DF2  0100               	movlb	0	; () banked
 11558  002DF4  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 11559  002DF6  ECFD  F019         	call	_Lcd_Cmd
 11560  002DFA                     l273:
 11561  002DFA  0012               	return	
 11562  002DFC                     __end_of_Lcd_Set_Cursor:
 11563                           	opt stack 0
 11564                           tblptru	equ	0xFF8
 11565                           tblptrh	equ	0xFF7
 11566                           tblptrl	equ	0xFF6
 11567                           tablat	equ	0xFF5
 11568                           prodh	equ	0xFF4
 11569                           prodl	equ	0xFF3
 11570                           intcon	equ	0xFF2
 11571                           intcon2	equ	0xFF1
 11572                           intcon3	equ	0xFF0
 11573                           indf0	equ	0xFEF
 11574                           postinc0	equ	0xFEE
 11575                           fsr0h	equ	0xFEA
 11576                           fsr0l	equ	0xFE9
 11577                           wreg	equ	0xFE8
 11578                           postinc1	equ	0xFE6
 11579                           postdec1	equ	0xFE5
 11580                           fsr1l	equ	0xFE1
 11581                           indf2	equ	0xFDF
 11582                           postinc2	equ	0xFDE
 11583                           postdec2	equ	0xFDD
 11584                           fsr2h	equ	0xFDA
 11585                           fsr2l	equ	0xFD9
 11586                           status	equ	0xFD8
 11587                           
 11588 ;; *************** function _Lcd_Clear *****************
 11589 ;; Defined at:
 11590 ;;		line 35 in file "lcd.c"
 11591 ;; Parameters:    Size  Location     Type
 11592 ;;		None
 11593 ;; Auto vars:     Size  Location     Type
 11594 ;;		None
 11595 ;; Return value:  Size  Location     Type
 11596 ;;		None               void
 11597 ;; Registers used:
 11598 ;;		wreg, status,2, cstack
 11599 ;; Tracked objects:
 11600 ;;		On entry : 0/0
 11601 ;;		On exit  : 0/0
 11602 ;;		Unchanged: 0/0
 11603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11604 ;;      Params:         0       0       0       0       0       0       0       0       0
 11605 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11606 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11607 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11608 ;;Total ram usage:        0 bytes
 11609 ;; Hardware stack levels used:    1
 11610 ;; Hardware stack levels required when called:    6
 11611 ;; This function calls:
 11612 ;;		_Lcd_Cmd
 11613 ;; This function is called by:
 11614 ;;		_Inicializa_Driveby
 11615 ;;		_Comando_Tablet
 11616 ;;		_main
 11617 ;; This function uses a non-reentrant model
 11618 ;;
 11619                           
 11620                           	psect	text49
 11621  003518                     __ptext49:
 11622                           	opt stack 0
 11623  003518                     _Lcd_Clear:
 11624                           	opt stack 24
 11625                           
 11626                           ;lcd.c: 36: Lcd_Cmd(0);
 11627                           
 11628                           ;incstack = 0
 11629  003518  0E00               	movlw	0
 11630  00351A  ECFD  F019         	call	_Lcd_Cmd
 11631                           
 11632                           ;lcd.c: 37: Lcd_Cmd(1);
 11633  00351E  0E01               	movlw	1
 11634  003520  ECFD  F019         	call	_Lcd_Cmd
 11635  003524  0012               	return	
 11636  003526                     __end_of_Lcd_Clear:
 11637                           	opt stack 0
 11638                           tblptru	equ	0xFF8
 11639                           tblptrh	equ	0xFF7
 11640                           tblptrl	equ	0xFF6
 11641                           tablat	equ	0xFF5
 11642                           prodh	equ	0xFF4
 11643                           prodl	equ	0xFF3
 11644                           intcon	equ	0xFF2
 11645                           intcon2	equ	0xFF1
 11646                           intcon3	equ	0xFF0
 11647                           indf0	equ	0xFEF
 11648                           postinc0	equ	0xFEE
 11649                           fsr0h	equ	0xFEA
 11650                           fsr0l	equ	0xFE9
 11651                           wreg	equ	0xFE8
 11652                           postinc1	equ	0xFE6
 11653                           postdec1	equ	0xFE5
 11654                           fsr1l	equ	0xFE1
 11655                           indf2	equ	0xFDF
 11656                           postinc2	equ	0xFDE
 11657                           postdec2	equ	0xFDD
 11658                           fsr2h	equ	0xFDA
 11659                           fsr2l	equ	0xFD9
 11660                           status	equ	0xFD8
 11661                           
 11662 ;; *************** function _Lcd_Cmd *****************
 11663 ;; Defined at:
 11664 ;;		line 27 in file "lcd.c"
 11665 ;; Parameters:    Size  Location     Type
 11666 ;;  a               1    wreg     unsigned char 
 11667 ;; Auto vars:     Size  Location     Type
 11668 ;;  a               1    2[BANK0 ] unsigned char 
 11669 ;; Return value:  Size  Location     Type
 11670 ;;		None               void
 11671 ;; Registers used:
 11672 ;;		wreg, status,2, cstack
 11673 ;; Tracked objects:
 11674 ;;		On entry : 0/0
 11675 ;;		On exit  : 0/0
 11676 ;;		Unchanged: 0/0
 11677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11678 ;;      Params:         0       0       0       0       0       0       0       0       0
 11679 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11680 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11681 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11682 ;;Total ram usage:        2 bytes
 11683 ;; Hardware stack levels used:    1
 11684 ;; Hardware stack levels required when called:    5
 11685 ;; This function calls:
 11686 ;;		_Lcd_Port
 11687 ;; This function is called by:
 11688 ;;		_Lcd_Clear
 11689 ;;		_Lcd_Set_Cursor
 11690 ;;		_Lcd_Init
 11691 ;;		_Lcd_Shift_Right
 11692 ;;		_Lcd_Shift_Left
 11693 ;; This function uses a non-reentrant model
 11694 ;;
 11695                           
 11696                           	psect	text50
 11697  0033FA                     __ptext50:
 11698                           	opt stack 0
 11699  0033FA                     _Lcd_Cmd:
 11700                           	opt stack 24
 11701                           
 11702                           ;incstack = 0
 11703                           ;Lcd_Cmd@a stored from wreg
 11704  0033FA  0100               	movlb	0	; () banked
 11705  0033FC  6F62               	movwf	Lcd_Cmd@a& (0+255),b
 11706                           
 11707                           ; BSR set to: 0
 11708                           ;lcd.c: 28: PORTEbits.RE0 = 0;
 11709  0033FE  9084               	bcf	3972,0,c	;volatile
 11710                           
 11711                           ; BSR set to: 0
 11712                           ;lcd.c: 29: Lcd_Port(a);
 11713  003400  0100               	movlb	0	; () banked
 11714  003402  5162               	movf	Lcd_Cmd@a& (0+255),w,b
 11715  003404  EC74  F019         	call	_Lcd_Port
 11716                           
 11717                           ;lcd.c: 30: PORTEbits.RE2 = 1;
 11718  003408  8484               	bsf	3972,2,c	;volatile
 11719                           
 11720                           ;lcd.c: 31: _delay((unsigned long)((4)*(4000000/4000.0)));
 11721  00340A  0E06               	movlw	6
 11722  00340C  0100               	movlb	0	; () banked
 11723  00340E  6F61               	movwf	??_Lcd_Cmd& (0+255),b
 11724  003410  0E30               	movlw	48
 11725  003412                     u5347:
 11726  003412  2EE8               	decfsz	wreg,f,c
 11727  003414  D7FE               	goto	u5347
 11728  003416  2F61               	decfsz	??_Lcd_Cmd& (0+255),f,b
 11729  003418  D7FC               	goto	u5347
 11730  00341A  D000               	nop2	
 11731                           
 11732                           ;lcd.c: 32: PORTEbits.RE2 = 0;
 11733  00341C  9484               	bcf	3972,2,c	;volatile
 11734  00341E  0012               	return	
 11735  003420                     __end_of_Lcd_Cmd:
 11736                           	opt stack 0
 11737                           tblptru	equ	0xFF8
 11738                           tblptrh	equ	0xFF7
 11739                           tblptrl	equ	0xFF6
 11740                           tablat	equ	0xFF5
 11741                           prodh	equ	0xFF4
 11742                           prodl	equ	0xFF3
 11743                           intcon	equ	0xFF2
 11744                           intcon2	equ	0xFF1
 11745                           intcon3	equ	0xFF0
 11746                           indf0	equ	0xFEF
 11747                           postinc0	equ	0xFEE
 11748                           fsr0h	equ	0xFEA
 11749                           fsr0l	equ	0xFE9
 11750                           wreg	equ	0xFE8
 11751                           postinc1	equ	0xFE6
 11752                           postdec1	equ	0xFE5
 11753                           fsr1l	equ	0xFE1
 11754                           indf2	equ	0xFDF
 11755                           postinc2	equ	0xFDE
 11756                           postdec2	equ	0xFDD
 11757                           fsr2h	equ	0xFDA
 11758                           fsr2l	equ	0xFD9
 11759                           status	equ	0xFD8
 11760                           
 11761 ;; *************** function _Lcd_Port *****************
 11762 ;; Defined at:
 11763 ;;		line 6 in file "lcd.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;  a               1    wreg     unsigned char 
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;  a               1    0[BANK0 ] unsigned char 
 11768 ;; Return value:  Size  Location     Type
 11769 ;;		None               void
 11770 ;; Registers used:
 11771 ;;		wreg
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11777 ;;      Params:         0       0       0       0       0       0       0       0       0
 11778 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11779 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11780 ;;      Totals:         0       1       0       0       0       0       0       0       0
 11781 ;;Total ram usage:        1 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:    4
 11784 ;; This function calls:
 11785 ;;		Nothing
 11786 ;; This function is called by:
 11787 ;;		_Lcd_Cmd
 11788 ;;		_Lcd_Init
 11789 ;;		_Lcd_Write_Char
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           	psect	text51
 11794  0032E8                     __ptext51:
 11795                           	opt stack 0
 11796  0032E8                     _Lcd_Port:
 11797                           	opt stack 24
 11798                           
 11799                           ;incstack = 0
 11800                           ;Lcd_Port@a stored from wreg
 11801  0032E8  0100               	movlb	0	; () banked
 11802  0032EA  6F60               	movwf	Lcd_Port@a& (0+255),b
 11803                           
 11804                           ; BSR set to: 0
 11805                           ;lcd.c: 7: if (a & 1)
 11806  0032EC  0100               	movlb	0	; () banked
 11807  0032EE  A160               	btfss	Lcd_Port@a& (0+255),0,b
 11808  0032F0  D002               	goto	l253
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;lcd.c: 8: PORTDbits.RD4 = 1;
 11812  0032F2  8883               	bsf	3971,4,c	;volatile
 11813  0032F4  D001               	goto	l3138
 11814  0032F6                     l253:
 11815                           
 11816                           ; BSR set to: 0
 11817                           ;lcd.c: 9: else
 11818                           ;lcd.c: 10: PORTDbits.RD4 = 0;
 11819  0032F6  9883               	bcf	3971,4,c	;volatile
 11820  0032F8                     l3138:
 11821                           
 11822                           ; BSR set to: 0
 11823                           ;lcd.c: 12: if (a & 2)
 11824  0032F8  0100               	movlb	0	; () banked
 11825  0032FA  A360               	btfss	Lcd_Port@a& (0+255),1,b
 11826  0032FC  D002               	goto	l255
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;lcd.c: 13: PORTDbits.RD5 = 1;
 11830  0032FE  8A83               	bsf	3971,5,c	;volatile
 11831  003300  D001               	goto	l3142
 11832  003302                     l255:
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;lcd.c: 14: else
 11836                           ;lcd.c: 15: PORTDbits.RD5 = 0;
 11837  003302  9A83               	bcf	3971,5,c	;volatile
 11838  003304                     l3142:
 11839                           
 11840                           ; BSR set to: 0
 11841                           ;lcd.c: 17: if (a & 4)
 11842  003304  0100               	movlb	0	; () banked
 11843  003306  A560               	btfss	Lcd_Port@a& (0+255),2,b
 11844  003308  D002               	goto	l257
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;lcd.c: 18: PORTDbits.RD6 = 1;
 11848  00330A  8C83               	bsf	3971,6,c	;volatile
 11849  00330C  D001               	goto	l3146
 11850  00330E                     l257:
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;lcd.c: 19: else
 11854                           ;lcd.c: 20: PORTDbits.RD6 = 0;
 11855  00330E  9C83               	bcf	3971,6,c	;volatile
 11856  003310                     l3146:
 11857                           
 11858                           ; BSR set to: 0
 11859                           ;lcd.c: 22: if (a & 8)
 11860  003310  0100               	movlb	0	; () banked
 11861  003312  A760               	btfss	Lcd_Port@a& (0+255),3,b
 11862  003314  D002               	goto	l259
 11863                           
 11864                           ; BSR set to: 0
 11865                           ;lcd.c: 23: PORTDbits.RD7 = 1;
 11866  003316  8E83               	bsf	3971,7,c	;volatile
 11867  003318  D001               	goto	l261
 11868  00331A                     l259:
 11869                           
 11870                           ; BSR set to: 0
 11871                           ;lcd.c: 24: else
 11872                           ;lcd.c: 25: PORTDbits.RD7 = 0;
 11873  00331A  9E83               	bcf	3971,7,c	;volatile
 11874  00331C                     l261:
 11875                           
 11876                           ; BSR set to: 0
 11877  00331C  0012               	return	
 11878  00331E                     __end_of_Lcd_Port:
 11879                           	opt stack 0
 11880                           tblptru	equ	0xFF8
 11881                           tblptrh	equ	0xFF7
 11882                           tblptrl	equ	0xFF6
 11883                           tablat	equ	0xFF5
 11884                           prodh	equ	0xFF4
 11885                           prodl	equ	0xFF3
 11886                           intcon	equ	0xFF2
 11887                           intcon2	equ	0xFF1
 11888                           intcon3	equ	0xFF0
 11889                           indf0	equ	0xFEF
 11890                           postinc0	equ	0xFEE
 11891                           fsr0h	equ	0xFEA
 11892                           fsr0l	equ	0xFE9
 11893                           wreg	equ	0xFE8
 11894                           postinc1	equ	0xFE6
 11895                           postdec1	equ	0xFE5
 11896                           fsr1l	equ	0xFE1
 11897                           indf2	equ	0xFDF
 11898                           postinc2	equ	0xFDE
 11899                           postdec2	equ	0xFDD
 11900                           fsr2h	equ	0xFDA
 11901                           fsr2l	equ	0xFD9
 11902                           status	equ	0xFD8
 11903                           
 11904 ;; *************** function _TMRO_USART *****************
 11905 ;; Defined at:
 11906 ;;		line 84 in file "robot.c"
 11907 ;; Parameters:    Size  Location     Type
 11908 ;;		None
 11909 ;; Auto vars:     Size  Location     Type
 11910 ;;		None
 11911 ;; Return value:  Size  Location     Type
 11912 ;;		None               void
 11913 ;; Registers used:
 11914 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11915 ;; Tracked objects:
 11916 ;;		On entry : 0/0
 11917 ;;		On exit  : 0/0
 11918 ;;		Unchanged: 0/0
 11919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11920 ;;      Params:         0       0       0       0       0       0       0       0       0
 11921 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11922 ;;      Temps:         14       0       0       0       0       0       0       0       0
 11923 ;;      Totals:        14       0       0       0       0       0       0       0       0
 11924 ;;Total ram usage:       14 bytes
 11925 ;; Hardware stack levels used:    1
 11926 ;; Hardware stack levels required when called:    3
 11927 ;; This function calls:
 11928 ;;		_ReadUSART
 11929 ;;		i2_Lcd_Clear
 11930 ;;		i2_Lcd_Set_Cursor
 11931 ;;		i2_Lcd_Write_String
 11932 ;;		i2_PWM_DutyCycle1
 11933 ;;		i2_PWM_DutyCycle2
 11934 ;; This function is called by:
 11935 ;;		Interrupt level 2
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           	psect	intcode
 11940  000008                     __pintcode:
 11941                           	opt stack 0
 11942  000008                     _TMRO_USART:
 11943                           	opt stack 21
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;incstack = 0
 11947  000008  CFFA F034          	movff	pclath,??_TMRO_USART
 11948  00000C  CFFB F035          	movff	pclatu,??_TMRO_USART+1
 11949  000010  CFE9 F036          	movff	fsr0l,??_TMRO_USART+2
 11950  000014  ED0F  F00C         	call	int_func,f	;refresh shadow registers
 11951                           pclatu	equ	0xFFB
 11952                           pclath	equ	0xFFA
 11953                           tblptru	equ	0xFF8
 11954                           tblptrh	equ	0xFF7
 11955                           tblptrl	equ	0xFF6
 11956                           tablat	equ	0xFF5
 11957                           prodh	equ	0xFF4
 11958                           prodl	equ	0xFF3
 11959                           intcon	equ	0xFF2
 11960                           intcon2	equ	0xFF1
 11961                           intcon3	equ	0xFF0
 11962                           indf0	equ	0xFEF
 11963                           postinc0	equ	0xFEE
 11964                           fsr0h	equ	0xFEA
 11965                           fsr0l	equ	0xFE9
 11966                           wreg	equ	0xFE8
 11967                           postinc1	equ	0xFE6
 11968                           postdec1	equ	0xFE5
 11969                           fsr1l	equ	0xFE1
 11970                           indf2	equ	0xFDF
 11971                           postinc2	equ	0xFDE
 11972                           postdec2	equ	0xFDD
 11973                           fsr2h	equ	0xFDA
 11974                           fsr2l	equ	0xFD9
 11975                           status	equ	0xFD8
 11976                           
 11977                           	psect	intcode_body
 11978  00181E                     __pintcode_body:
 11979                           	opt stack 21
 11980  00181E                     int_func:
 11981                           	opt stack 21
 11982  00181E  0006               	pop		; remove dummy address from shadow register refresh
 11983  001820  CFEA F037          	movff	fsr0h,??_TMRO_USART+3
 11984  001824  CFE1 F038          	movff	fsr1l,??_TMRO_USART+4
 11985  001828  CFE2 F039          	movff	fsr1h,??_TMRO_USART+5
 11986  00182C  CFD9 F03A          	movff	fsr2l,??_TMRO_USART+6
 11987  001830  CFDA F03B          	movff	fsr2h,??_TMRO_USART+7
 11988  001834  CFF3 F03C          	movff	prodl,??_TMRO_USART+8
 11989  001838  CFF4 F03D          	movff	prodh,??_TMRO_USART+9
 11990  00183C  CFF6 F03E          	movff	tblptrl,??_TMRO_USART+10
 11991  001840  CFF7 F03F          	movff	tblptrh,??_TMRO_USART+11
 11992  001844  CFF8 F040          	movff	tblptru,??_TMRO_USART+12
 11993  001848  CFF5 F041          	movff	tablat,??_TMRO_USART+13
 11994                           
 11995                           ;robot.c: 89: if (PIR1bits.RCIF) {
 11996  00184C  AA9E               	btfss	3998,5,c	;volatile
 11997  00184E  D034               	goto	i2l380
 11998                           
 11999                           ;robot.c: 91: BluetoothDato[cad] = ReadUSART();
 12000  001850  5055               	movf	_cad,w,c
 12001  001852  0D01               	mullw	1
 12002  001854  0101               	movlb	1	; () banked
 12003  001856  0E28               	movlw	low _BluetoothDato
 12004  001858  24F3               	addwf	prodl,w,c
 12005  00185A  6ED9               	movwf	fsr2l,c
 12006  00185C  0101               	movlb	1	; () banked
 12007  00185E  0E01               	movlw	high _BluetoothDato
 12008  001860  20F4               	addwfc	prodh,w,c
 12009  001862  6EDA               	movwf	fsr2h,c
 12010  001864  EC32  F01A         	call	_ReadUSART	;wreg free
 12011  001868  6EDF               	movwf	indf2,c
 12012                           
 12013                           ;robot.c: 92: if (BluetoothDato[cad] == '#') {
 12014  00186A  5055               	movf	_cad,w,c
 12015  00186C  0D01               	mullw	1
 12016  00186E  0101               	movlb	1	; () banked
 12017  001870  0E28               	movlw	low _BluetoothDato
 12018  001872  24F3               	addwf	prodl,w,c
 12019  001874  6ED9               	movwf	fsr2l,c
 12020  001876  0101               	movlb	1	; () banked
 12021  001878  0E01               	movlw	high _BluetoothDato
 12022  00187A  20F4               	addwfc	prodh,w,c
 12023  00187C  6EDA               	movwf	fsr2h,c
 12024  00187E  0E23               	movlw	35
 12025  001880  62DF               	cpfseq	indf2,c
 12026  001882  D015               	goto	i2l4764
 12027                           
 12028                           ; BSR set to: 1
 12029                           ;robot.c: 93: if (ComanTFlag == 0) {
 12030  001884  664C               	tstfsz	_ComanTFlag,c
 12031  001886  D008               	goto	i2l4760
 12032                           
 12033                           ; BSR set to: 1
 12034                           ;robot.c: 94: EntTrama = 1;
 12035  001888  0E01               	movlw	1
 12036  00188A  6E4F               	movwf	_EntTrama,c
 12037                           
 12038                           ;robot.c: 95: FinComandT = 0;
 12039  00188C  0E00               	movlw	0
 12040  00188E  0100               	movlb	0	; () banked
 12041  001890  6FEC               	movwf	_FinComandT& (0+255),b
 12042                           
 12043                           ;robot.c: 96: ComanTFlag = 1;
 12044  001892  0E01               	movlw	1
 12045  001894  6E4C               	movwf	_ComanTFlag,c
 12046  001896  D00E               	goto	i2u518_40
 12047  001898                     i2l4760:
 12048                           
 12049                           ;robot.c: 99: else if (ComanTFlag == 1) {
 12050  001898  044C               	decf	_ComanTFlag,w,c
 12051  00189A  A4D8               	btfss	status,2,c
 12052  00189C  D05F               	goto	i2l4806
 12053                           
 12054                           ;robot.c: 100: ComanTFlag = 0;
 12055  00189E  0E00               	movlw	0
 12056  0018A0  6E4C               	movwf	_ComanTFlag,c
 12057                           
 12058                           ;robot.c: 101: FinComandT = 1;
 12059  0018A2  0E01               	movlw	1
 12060  0018A4  0100               	movlb	0	; () banked
 12061  0018A6  6FEC               	movwf	_FinComandT& (0+255),b
 12062                           
 12063                           ;robot.c: 102: EntTrama = 0;
 12064  0018A8  0E00               	movlw	0
 12065  0018AA  6E4F               	movwf	_EntTrama,c
 12066  0018AC  D057               	goto	i2l4806
 12067  0018AE                     i2l4764:
 12068                           
 12069                           ;robot.c: 106: else if (EntTrama == 1)
 12070  0018AE  044F               	decf	_EntTrama,w,c
 12071  0018B0  A4D8               	btfss	status,2,c
 12072  0018B2  D054               	goto	i2l4806
 12073  0018B4                     i2u518_40:
 12074                           
 12075                           ;robot.c: 107: cad++;
 12076  0018B4  2A55               	incf	_cad,f,c
 12077  0018B6  D052               	goto	i2l4806
 12078  0018B8                     i2l380:
 12079                           
 12080                           ;robot.c: 111: else if(INTCONbits.INT0F == 1){
 12081  0018B8  A2F2               	btfss	intcon,1,c	;volatile
 12082  0018BA  D014               	goto	i2l388
 12083                           
 12084                           ;robot.c: 112: Lcd_Clear();
 12085  0018BC  EC93  F01A         	call	i2_Lcd_Clear	;wreg free
 12086                           
 12087                           ;robot.c: 113: Lcd_Set_Cursor(1,1);
 12088  0018C0  0E01               	movlw	1
 12089  0018C2  6E04               	movwf	i2Lcd_Set_Cursor@b,c
 12090  0018C4  0E01               	movlw	1
 12091  0018C6  ECCC  F017         	call	i2_Lcd_Set_Cursor
 12092                           
 12093                           ;robot.c: 114: Lcd_Write_String("Interruption RB0");
 12094  0018CA  0E7F               	movlw	high STR_19
 12095  0018CC  6E06               	movwf	i2Lcd_Write_String@a+1,c
 12096  0018CE  0E25               	movlw	low STR_19
 12097  0018D0  6E05               	movwf	i2Lcd_Write_String@a,c
 12098  0018D2  EC4A  F016         	call	i2_Lcd_Write_String	;wreg free
 12099                           
 12100                           ;robot.c: 117: PWM_DutyCycle1(100);
 12101  0018D6  0E64               	movlw	100
 12102  0018D8  EC33  F017         	call	i2_PWM_DutyCycle1
 12103                           
 12104                           ;robot.c: 118: PWM_DutyCycle2(0);
 12105  0018DC  0E00               	movlw	0
 12106  0018DE  ECFE  F016         	call	i2_PWM_DutyCycle2
 12107                           
 12108                           ;robot.c: 119: }
 12109  0018E2  D03C               	goto	i2l4806
 12110  0018E4                     i2l388:
 12111                           
 12112                           ;robot.c: 121: else if(INTCON3bits.INT1F == 1){
 12113  0018E4  A0F0               	btfss	intcon3,0,c	;volatile
 12114  0018E6  D014               	goto	i2l390
 12115                           
 12116                           ;robot.c: 122: Lcd_Clear();
 12117  0018E8  EC93  F01A         	call	i2_Lcd_Clear	;wreg free
 12118                           
 12119                           ;robot.c: 123: Lcd_Set_Cursor(1,1);
 12120  0018EC  0E01               	movlw	1
 12121  0018EE  6E04               	movwf	i2Lcd_Set_Cursor@b,c
 12122  0018F0  0E01               	movlw	1
 12123  0018F2  ECCC  F017         	call	i2_Lcd_Set_Cursor
 12124                           
 12125                           ;robot.c: 124: Lcd_Write_String("Interruption RB1");
 12126  0018F6  0E7F               	movlw	high STR_20
 12127  0018F8  6E06               	movwf	i2Lcd_Write_String@a+1,c
 12128  0018FA  0E36               	movlw	low STR_20
 12129  0018FC  6E05               	movwf	i2Lcd_Write_String@a,c
 12130  0018FE  EC4A  F016         	call	i2_Lcd_Write_String	;wreg free
 12131                           
 12132                           ;robot.c: 127: PWM_DutyCycle1(0);
 12133  001902  0E00               	movlw	0
 12134  001904  EC33  F017         	call	i2_PWM_DutyCycle1
 12135                           
 12136                           ;robot.c: 128: PWM_DutyCycle2(100);
 12137  001908  0E64               	movlw	100
 12138  00190A  ECFE  F016         	call	i2_PWM_DutyCycle2
 12139                           
 12140                           ;robot.c: 129: }
 12141  00190E  D026               	goto	i2l4806
 12142  001910                     i2l390:
 12143                           
 12144                           ;robot.c: 130: else if(INTCON3bits.INT2F == 1){
 12145  001910  A2F0               	btfss	intcon3,1,c	;volatile
 12146  001912  D014               	goto	i2l392
 12147                           
 12148                           ;robot.c: 131: Lcd_Clear();
 12149  001914  EC93  F01A         	call	i2_Lcd_Clear	;wreg free
 12150                           
 12151                           ;robot.c: 132: Lcd_Set_Cursor(1,1);
 12152  001918  0E01               	movlw	1
 12153  00191A  6E04               	movwf	i2Lcd_Set_Cursor@b,c
 12154  00191C  0E01               	movlw	1
 12155  00191E  ECCC  F017         	call	i2_Lcd_Set_Cursor
 12156                           
 12157                           ;robot.c: 133: Lcd_Write_String("Interruption RB2");
 12158  001922  0E7F               	movlw	high STR_21
 12159  001924  6E06               	movwf	i2Lcd_Write_String@a+1,c
 12160  001926  0E47               	movlw	low STR_21
 12161  001928  6E05               	movwf	i2Lcd_Write_String@a,c
 12162  00192A  EC4A  F016         	call	i2_Lcd_Write_String	;wreg free
 12163                           
 12164                           ;robot.c: 136: PWM_DutyCycle1(100);
 12165  00192E  0E64               	movlw	100
 12166  001930  EC33  F017         	call	i2_PWM_DutyCycle1
 12167                           
 12168                           ;robot.c: 137: PWM_DutyCycle2(100);
 12169  001934  0E64               	movlw	100
 12170  001936  ECFE  F016         	call	i2_PWM_DutyCycle2
 12171                           
 12172                           ;robot.c: 138: }
 12173  00193A  D010               	goto	i2l4806
 12174  00193C                     i2l392:
 12175                           
 12176                           ;robot.c: 139: else if(PIR1bits.TMR2IF){
 12177  00193C  A29E               	btfss	3998,1,c	;volatile
 12178  00193E  D00E               	goto	i2l4806
 12179                           
 12180                           ;robot.c: 140: Lcd_Clear();
 12181  001940  EC93  F01A         	call	i2_Lcd_Clear	;wreg free
 12182                           
 12183                           ;robot.c: 141: Lcd_Set_Cursor(1,1);
 12184  001944  0E01               	movlw	1
 12185  001946  6E04               	movwf	i2Lcd_Set_Cursor@b,c
 12186  001948  0E01               	movlw	1
 12187  00194A  ECCC  F017         	call	i2_Lcd_Set_Cursor
 12188                           
 12189                           ;robot.c: 142: Lcd_Write_String("Interruption TMR2");
 12190  00194E  0E7F               	movlw	high STR_22
 12191  001950  6E06               	movwf	i2Lcd_Write_String@a+1,c
 12192  001952  0E13               	movlw	low STR_22
 12193  001954  6E05               	movwf	i2Lcd_Write_String@a,c
 12194  001956  EC4A  F016         	call	i2_Lcd_Write_String	;wreg free
 12195                           
 12196                           ;robot.c: 143: PIE1bits.TMR2IE = 0;
 12197  00195A  929D               	bcf	3997,1,c	;volatile
 12198  00195C                     i2l4806:
 12199                           
 12200                           ;robot.c: 144: }
 12201                           ;robot.c: 145: INTCON3bits.INT2F = 0;
 12202  00195C  92F0               	bcf	intcon3,1,c	;volatile
 12203                           
 12204                           ;robot.c: 146: INTCON3bits.INT1F = 0;
 12205  00195E  90F0               	bcf	intcon3,0,c	;volatile
 12206                           
 12207                           ;robot.c: 147: INTCONbits.INT0F = 0;
 12208  001960  92F2               	bcf	intcon,1,c	;volatile
 12209                           
 12210                           ;robot.c: 148: PIR1bits.TMR2IF=0;
 12211  001962  929E               	bcf	3998,1,c	;volatile
 12212                           
 12213                           ;robot.c: 149: PIR1bits.RCIF=0;
 12214  001964  9A9E               	bcf	3998,5,c	;volatile
 12215                           
 12216                           ;robot.c: 151: return;
 12217  001966  C041  FFF5         	movff	??_TMRO_USART+13,tablat
 12218  00196A  C040  FFF8         	movff	??_TMRO_USART+12,tblptru
 12219  00196E  C03F  FFF7         	movff	??_TMRO_USART+11,tblptrh
 12220  001972  C03E  FFF6         	movff	??_TMRO_USART+10,tblptrl
 12221  001976  C03D  FFF4         	movff	??_TMRO_USART+9,prodh
 12222  00197A  C03C  FFF3         	movff	??_TMRO_USART+8,prodl
 12223  00197E  C03B  FFDA         	movff	??_TMRO_USART+7,fsr2h
 12224  001982  C03A  FFD9         	movff	??_TMRO_USART+6,fsr2l
 12225  001986  C039  FFE2         	movff	??_TMRO_USART+5,fsr1h
 12226  00198A  C038  FFE1         	movff	??_TMRO_USART+4,fsr1l
 12227  00198E  C037  FFEA         	movff	??_TMRO_USART+3,fsr0h
 12228  001992  C036  FFE9         	movff	??_TMRO_USART+2,fsr0l
 12229  001996  C035  FFFB         	movff	??_TMRO_USART+1,pclatu
 12230  00199A  C034  FFFA         	movff	??_TMRO_USART,pclath
 12231  00199E  0011               	retfie		f
 12232  0019A0                     __end_of_TMRO_USART:
 12233                           	opt stack 0
 12234                           pclatu	equ	0xFFB
 12235                           pclath	equ	0xFFA
 12236                           tblptru	equ	0xFF8
 12237                           tblptrh	equ	0xFF7
 12238                           tblptrl	equ	0xFF6
 12239                           tablat	equ	0xFF5
 12240                           prodh	equ	0xFF4
 12241                           prodl	equ	0xFF3
 12242                           intcon	equ	0xFF2
 12243                           intcon2	equ	0xFF1
 12244                           intcon3	equ	0xFF0
 12245                           indf0	equ	0xFEF
 12246                           postinc0	equ	0xFEE
 12247                           fsr0h	equ	0xFEA
 12248                           fsr0l	equ	0xFE9
 12249                           wreg	equ	0xFE8
 12250                           postinc1	equ	0xFE6
 12251                           postdec1	equ	0xFE5
 12252                           fsr1h	equ	0xFE2
 12253                           fsr1l	equ	0xFE1
 12254                           indf2	equ	0xFDF
 12255                           postinc2	equ	0xFDE
 12256                           postdec2	equ	0xFDD
 12257                           fsr2h	equ	0xFDA
 12258                           fsr2l	equ	0xFD9
 12259                           status	equ	0xFD8
 12260                           
 12261 ;; *************** function i2_PWM_DutyCycle2 *****************
 12262 ;; Defined at:
 12263 ;;		line 55 in file "pwm.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;  percentageDu    1    wreg     unsigned char 
 12266 ;; Auto vars:     Size  Location     Type
 12267 ;;  percentageDu    1   48[COMRAM] unsigned char 
 12268 ;;  PWM_DutyCycl    2   49[COMRAM] unsigned int 
 12269 ;;  PWM_DutyCycl    2   46[COMRAM] unsigned int 
 12270 ;; Return value:  Size  Location     Type
 12271 ;;		None               void
 12272 ;; Registers used:
 12273 ;;		wreg, status,2, status,0, cstack
 12274 ;; Tracked objects:
 12275 ;;		On entry : 0/0
 12276 ;;		On exit  : 0/0
 12277 ;;		Unchanged: 0/0
 12278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12279 ;;      Params:         0       0       0       0       0       0       0       0       0
 12280 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12281 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12282 ;;      Totals:         9       0       0       0       0       0       0       0       0
 12283 ;;Total ram usage:        9 bytes
 12284 ;; Hardware stack levels used:    1
 12285 ;; Hardware stack levels required when called:    2
 12286 ;; This function calls:
 12287 ;;		i2_SetDCPWM2
 12288 ;;		i2___ftmul
 12289 ;;		i2___fttol
 12290 ;;		i2___lbtoft
 12291 ;; This function is called by:
 12292 ;;		_TMRO_USART
 12293 ;; This function uses a non-reentrant model
 12294 ;;
 12295                           
 12296                           	psect	text53
 12297  002DFC                     __ptext53:
 12298                           	opt stack 0
 12299  002DFC                     i2_PWM_DutyCycle2:
 12300                           	opt stack 21
 12301                           
 12302                           ;incstack = 0
 12303                           ;i2PWM_DutyCycle2@percentageDuty stored from wreg
 12304  002DFC  6E31               	movwf	i2PWM_DutyCycle2@percentageDuty,c
 12305                           
 12306                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
 12307  002DFE  0E00               	movlw	0
 12308  002E00  6E33               	movwf	i2PWM_DutyCycle2@DC+1,c
 12309  002E02  0E00               	movlw	0
 12310  002E04  6E32               	movwf	i2PWM_DutyCycle2@DC,c
 12311  002E06  0E00               	movlw	0
 12312  002E08  6E30               	movwf	i2PWM_DutyCycle2@DutyCycle+1,c
 12313  002E0A  0E00               	movlw	0
 12314  002E0C  6E2F               	movwf	i2PWM_DutyCycle2@DutyCycle,c
 12315                           
 12316                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
 12317  002E0E  0EAE               	movlw	174
 12318  002E10  6E10               	movwf	i2___ftmul@f2,c
 12319  002E12  0E23               	movlw	35
 12320  002E14  6E11               	movwf	i2___ftmul@f2+1,c
 12321  002E16  0E41               	movlw	65
 12322  002E18  6E12               	movwf	i2___ftmul@f2+2,c
 12323  002E1A  5031               	movf	i2PWM_DutyCycle2@percentageDuty,w,c
 12324  002E1C  EC10  F01A         	call	i2___lbtoft
 12325  002E20  C009  F00D         	movff	?i2___lbtoft,i2___ftmul@f1
 12326  002E24  C00A  F00E         	movff	?i2___lbtoft+1,i2___ftmul@f1+1
 12327  002E28  C00B  F00F         	movff	?i2___lbtoft+2,i2___ftmul@f1+2
 12328  002E2C  ECD2  F00F         	call	i2___ftmul	;wreg free
 12329  002E30  C00D  F01C         	movff	?i2___ftmul,i2___fttol@f1
 12330  002E34  C00E  F01D         	movff	?i2___ftmul+1,i2___fttol@f1+1
 12331  002E38  C00F  F01E         	movff	?i2___ftmul+2,i2___fttol@f1+2
 12332  002E3C  EC89  F011         	call	i2___fttol	;wreg free
 12333  002E40  C01C  F02B         	movff	?i2___fttol,??i2_PWM_DutyCycle2
 12334  002E44  C01D  F02C         	movff	?i2___fttol+1,??i2_PWM_DutyCycle2+1
 12335  002E48  C01E  F02D         	movff	?i2___fttol+2,??i2_PWM_DutyCycle2+2
 12336  002E4C  C01F  F02E         	movff	?i2___fttol+3,??i2_PWM_DutyCycle2+3
 12337  002E50  C02B  F032         	movff	??i2_PWM_DutyCycle2,i2PWM_DutyCycle2@DC
 12338  002E54  C02C  F033         	movff	??i2_PWM_DutyCycle2+1,i2PWM_DutyCycle2@DC+1
 12339                           
 12340                           ;pwm.c: 60: SetDCPWM2(DC);
 12341  002E58  C032  F001         	movff	i2PWM_DutyCycle2@DC,i2SetDCPWM2@dutycycle
 12342  002E5C  C033  F002         	movff	i2PWM_DutyCycle2@DC+1,i2SetDCPWM2@dutycycle+1
 12343  002E60  EC03  F019         	call	i2_SetDCPWM2	;wreg free
 12344                           
 12345                           ;pwm.c: 61: return;
 12346  002E64  0012               	return	
 12347  002E66                     __end_ofi2_PWM_DutyCycle2:
 12348                           	opt stack 0
 12349                           pclatu	equ	0xFFB
 12350                           pclath	equ	0xFFA
 12351                           tblptru	equ	0xFF8
 12352                           tblptrh	equ	0xFF7
 12353                           tblptrl	equ	0xFF6
 12354                           tablat	equ	0xFF5
 12355                           prodh	equ	0xFF4
 12356                           prodl	equ	0xFF3
 12357                           intcon	equ	0xFF2
 12358                           intcon2	equ	0xFF1
 12359                           intcon3	equ	0xFF0
 12360                           indf0	equ	0xFEF
 12361                           postinc0	equ	0xFEE
 12362                           fsr0h	equ	0xFEA
 12363                           fsr0l	equ	0xFE9
 12364                           wreg	equ	0xFE8
 12365                           postinc1	equ	0xFE6
 12366                           postdec1	equ	0xFE5
 12367                           fsr1h	equ	0xFE2
 12368                           fsr1l	equ	0xFE1
 12369                           indf2	equ	0xFDF
 12370                           postinc2	equ	0xFDE
 12371                           postdec2	equ	0xFDD
 12372                           fsr2h	equ	0xFDA
 12373                           fsr2l	equ	0xFD9
 12374                           status	equ	0xFD8
 12375                           
 12376 ;; *************** function i2_SetDCPWM2 *****************
 12377 ;; Defined at:
 12378 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
 12379 ;; Parameters:    Size  Location     Type
 12380 ;;  dutycycle       2    0[COMRAM] unsigned int 
 12381 ;; Auto vars:     Size  Location     Type
 12382 ;;  SetDCPWM2       2    4[COMRAM] struct PWMDC
 12383 ;; Return value:  Size  Location     Type
 12384 ;;		None               void
 12385 ;; Registers used:
 12386 ;;		wreg, status,2, status,0
 12387 ;; Tracked objects:
 12388 ;;		On entry : 0/0
 12389 ;;		On exit  : 0/0
 12390 ;;		Unchanged: 0/0
 12391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12392 ;;      Params:         2       0       0       0       0       0       0       0       0
 12393 ;;      Locals:         2       0       0       0       0       0       0       0       0
 12394 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12395 ;;      Totals:         6       0       0       0       0       0       0       0       0
 12396 ;;Total ram usage:        6 bytes
 12397 ;; Hardware stack levels used:    1
 12398 ;; This function calls:
 12399 ;;		Nothing
 12400 ;; This function is called by:
 12401 ;;		i2_PWM_DutyCycle2
 12402 ;; This function uses a non-reentrant model
 12403 ;;
 12404                           
 12405                           	psect	text54
 12406  003206                     __ptext54:
 12407                           	opt stack 0
 12408  003206                     i2_SetDCPWM2:
 12409                           	opt stack 22
 12410                           
 12411                           ;incstack = 0
 12412  003206  C001  F003         	movff	i2SetDCPWM2@dutycycle,??i2_SetDCPWM2
 12413  00320A  C002  F004         	movff	i2SetDCPWM2@dutycycle+1,??i2_SetDCPWM2+1
 12414  00320E  0E06               	movlw	6
 12415  003210                     i2u480_45:
 12416  003210  90D8               	bcf	status,0,c
 12417  003212  3603               	rlcf	??i2_SetDCPWM2,f,c
 12418  003214  3604               	rlcf	??i2_SetDCPWM2+1,f,c
 12419  003216  2EE8               	decfsz	wreg,f,c
 12420  003218  D7FB               	goto	i2u480_45
 12421  00321A  C003  F005         	movff	??i2_SetDCPWM2,i2SetDCPWM2@DCycle
 12422  00321E  C004  F006         	movff	??i2_SetDCPWM2+1,i2SetDCPWM2@DCycle+1
 12423  003222  C006  FFBB         	movff	i2SetDCPWM2@DCycle+1,4027	;volatile
 12424  003226  C005  F003         	movff	i2SetDCPWM2@DCycle,??i2_SetDCPWM2
 12425  00322A  90D8               	bcf	status,0,c
 12426  00322C  3203               	rrcf	??i2_SetDCPWM2,f,c
 12427  00322E  90D8               	bcf	status,0,c
 12428  003230  3203               	rrcf	??i2_SetDCPWM2,f,c
 12429  003232  0E30               	movlw	48
 12430  003234  1603               	andwf	??i2_SetDCPWM2,f,c
 12431  003236  50BA               	movf	4026,w,c	;volatile
 12432  003238  0BCF               	andlw	207
 12433  00323A  1003               	iorwf	??i2_SetDCPWM2,w,c
 12434  00323C  6EBA               	movwf	4026,c	;volatile
 12435  00323E  0012               	return	
 12436  003240                     __end_ofi2_SetDCPWM2:
 12437                           	opt stack 0
 12438                           pclatu	equ	0xFFB
 12439                           pclath	equ	0xFFA
 12440                           tblptru	equ	0xFF8
 12441                           tblptrh	equ	0xFF7
 12442                           tblptrl	equ	0xFF6
 12443                           tablat	equ	0xFF5
 12444                           prodh	equ	0xFF4
 12445                           prodl	equ	0xFF3
 12446                           intcon	equ	0xFF2
 12447                           intcon2	equ	0xFF1
 12448                           intcon3	equ	0xFF0
 12449                           indf0	equ	0xFEF
 12450                           postinc0	equ	0xFEE
 12451                           fsr0h	equ	0xFEA
 12452                           fsr0l	equ	0xFE9
 12453                           wreg	equ	0xFE8
 12454                           postinc1	equ	0xFE6
 12455                           postdec1	equ	0xFE5
 12456                           fsr1h	equ	0xFE2
 12457                           fsr1l	equ	0xFE1
 12458                           indf2	equ	0xFDF
 12459                           postinc2	equ	0xFDE
 12460                           postdec2	equ	0xFDD
 12461                           fsr2h	equ	0xFDA
 12462                           fsr2l	equ	0xFD9
 12463                           status	equ	0xFD8
 12464                           
 12465 ;; *************** function i2_PWM_DutyCycle1 *****************
 12466 ;; Defined at:
 12467 ;;		line 33 in file "pwm.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;  percentageDu    1    wreg     unsigned char 
 12470 ;; Auto vars:     Size  Location     Type
 12471 ;;  percentageDu    1   48[COMRAM] unsigned char 
 12472 ;;  PWM_DutyCycl    2   49[COMRAM] unsigned int 
 12473 ;;  PWM_DutyCycl    2   46[COMRAM] unsigned int 
 12474 ;; Return value:  Size  Location     Type
 12475 ;;		None               void
 12476 ;; Registers used:
 12477 ;;		wreg, status,2, status,0, cstack
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/0
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12483 ;;      Params:         0       0       0       0       0       0       0       0       0
 12484 ;;      Locals:         5       0       0       0       0       0       0       0       0
 12485 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12486 ;;      Totals:         9       0       0       0       0       0       0       0       0
 12487 ;;Total ram usage:        9 bytes
 12488 ;; Hardware stack levels used:    1
 12489 ;; Hardware stack levels required when called:    2
 12490 ;; This function calls:
 12491 ;;		i2_SetDCPWM1
 12492 ;;		i2___ftmul
 12493 ;;		i2___fttol
 12494 ;;		i2___lbtoft
 12495 ;; This function is called by:
 12496 ;;		_TMRO_USART
 12497 ;; This function uses a non-reentrant model
 12498 ;;
 12499                           
 12500                           	psect	text55
 12501  002E66                     __ptext55:
 12502                           	opt stack 0
 12503  002E66                     i2_PWM_DutyCycle1:
 12504                           	opt stack 21
 12505                           
 12506                           ;incstack = 0
 12507                           ;i2PWM_DutyCycle1@percentageDuty stored from wreg
 12508  002E66  6E31               	movwf	i2PWM_DutyCycle1@percentageDuty,c
 12509                           
 12510                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
 12511  002E68  0E00               	movlw	0
 12512  002E6A  6E33               	movwf	i2PWM_DutyCycle1@DC+1,c
 12513  002E6C  0E00               	movlw	0
 12514  002E6E  6E32               	movwf	i2PWM_DutyCycle1@DC,c
 12515  002E70  0E00               	movlw	0
 12516  002E72  6E30               	movwf	i2PWM_DutyCycle1@DutyCycle+1,c
 12517  002E74  0E00               	movlw	0
 12518  002E76  6E2F               	movwf	i2PWM_DutyCycle1@DutyCycle,c
 12519                           
 12520                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
 12521  002E78  0EAE               	movlw	174
 12522  002E7A  6E10               	movwf	i2___ftmul@f2,c
 12523  002E7C  0E23               	movlw	35
 12524  002E7E  6E11               	movwf	i2___ftmul@f2+1,c
 12525  002E80  0E41               	movlw	65
 12526  002E82  6E12               	movwf	i2___ftmul@f2+2,c
 12527  002E84  5031               	movf	i2PWM_DutyCycle1@percentageDuty,w,c
 12528  002E86  EC10  F01A         	call	i2___lbtoft
 12529  002E8A  C009  F00D         	movff	?i2___lbtoft,i2___ftmul@f1
 12530  002E8E  C00A  F00E         	movff	?i2___lbtoft+1,i2___ftmul@f1+1
 12531  002E92  C00B  F00F         	movff	?i2___lbtoft+2,i2___ftmul@f1+2
 12532  002E96  ECD2  F00F         	call	i2___ftmul	;wreg free
 12533  002E9A  C00D  F01C         	movff	?i2___ftmul,i2___fttol@f1
 12534  002E9E  C00E  F01D         	movff	?i2___ftmul+1,i2___fttol@f1+1
 12535  002EA2  C00F  F01E         	movff	?i2___ftmul+2,i2___fttol@f1+2
 12536  002EA6  EC89  F011         	call	i2___fttol	;wreg free
 12537  002EAA  C01C  F02B         	movff	?i2___fttol,??i2_PWM_DutyCycle1
 12538  002EAE  C01D  F02C         	movff	?i2___fttol+1,??i2_PWM_DutyCycle1+1
 12539  002EB2  C01E  F02D         	movff	?i2___fttol+2,??i2_PWM_DutyCycle1+2
 12540  002EB6  C01F  F02E         	movff	?i2___fttol+3,??i2_PWM_DutyCycle1+3
 12541  002EBA  C02B  F032         	movff	??i2_PWM_DutyCycle1,i2PWM_DutyCycle1@DC
 12542  002EBE  C02C  F033         	movff	??i2_PWM_DutyCycle1+1,i2PWM_DutyCycle1@DC+1
 12543                           
 12544                           ;pwm.c: 38: SetDCPWM1(DC);
 12545  002EC2  C032  F001         	movff	i2PWM_DutyCycle1@DC,i2SetDCPWM1@dutycycle
 12546  002EC6  C033  F002         	movff	i2PWM_DutyCycle1@DC+1,i2SetDCPWM1@dutycycle+1
 12547  002ECA  EC20  F019         	call	i2_SetDCPWM1	;wreg free
 12548                           
 12549                           ;pwm.c: 39: return;
 12550  002ECE  0012               	return	
 12551  002ED0                     __end_ofi2_PWM_DutyCycle1:
 12552                           	opt stack 0
 12553                           pclatu	equ	0xFFB
 12554                           pclath	equ	0xFFA
 12555                           tblptru	equ	0xFF8
 12556                           tblptrh	equ	0xFF7
 12557                           tblptrl	equ	0xFF6
 12558                           tablat	equ	0xFF5
 12559                           prodh	equ	0xFF4
 12560                           prodl	equ	0xFF3
 12561                           intcon	equ	0xFF2
 12562                           intcon2	equ	0xFF1
 12563                           intcon3	equ	0xFF0
 12564                           indf0	equ	0xFEF
 12565                           postinc0	equ	0xFEE
 12566                           fsr0h	equ	0xFEA
 12567                           fsr0l	equ	0xFE9
 12568                           wreg	equ	0xFE8
 12569                           postinc1	equ	0xFE6
 12570                           postdec1	equ	0xFE5
 12571                           fsr1h	equ	0xFE2
 12572                           fsr1l	equ	0xFE1
 12573                           indf2	equ	0xFDF
 12574                           postinc2	equ	0xFDE
 12575                           postdec2	equ	0xFDD
 12576                           fsr2h	equ	0xFDA
 12577                           fsr2l	equ	0xFD9
 12578                           status	equ	0xFD8
 12579                           
 12580 ;; *************** function i2___lbtoft *****************
 12581 ;; Defined at:
 12582 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\lbtoft.c"
 12583 ;; Parameters:    Size  Location     Type
 12584 ;;  c               1    wreg     unsigned char 
 12585 ;; Auto vars:     Size  Location     Type
 12586 ;;  c               1   11[COMRAM] unsigned char 
 12587 ;; Return value:  Size  Location     Type
 12588 ;;                  3    8[COMRAM] float 
 12589 ;; Registers used:
 12590 ;;		wreg, status,2, status,0, cstack
 12591 ;; Tracked objects:
 12592 ;;		On entry : 0/0
 12593 ;;		On exit  : 0/0
 12594 ;;		Unchanged: 0/0
 12595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12596 ;;      Params:         3       0       0       0       0       0       0       0       0
 12597 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12598 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12599 ;;      Totals:         4       0       0       0       0       0       0       0       0
 12600 ;;Total ram usage:        4 bytes
 12601 ;; Hardware stack levels used:    1
 12602 ;; Hardware stack levels required when called:    1
 12603 ;; This function calls:
 12604 ;;		i2___ftpack
 12605 ;; This function is called by:
 12606 ;;		i2_PWM_DutyCycle1
 12607 ;;		i2_PWM_DutyCycle2
 12608 ;; This function uses a non-reentrant model
 12609 ;;
 12610                           
 12611                           	psect	text56
 12612  003420                     __ptext56:
 12613                           	opt stack 0
 12614  003420                     i2___lbtoft:
 12615                           	opt stack 21
 12616                           
 12617                           ;incstack = 0
 12618                           ;i2___lbtoft@c stored from wreg
 12619  003420  6E0C               	movwf	i2___lbtoft@c,c
 12620  003422  500C               	movf	i2___lbtoft@c,w,c
 12621  003424  6E01               	movwf	i2___ftpack@arg,c
 12622  003426  6A02               	clrf	i2___ftpack@arg+1,c
 12623  003428  6A03               	clrf	i2___ftpack@arg+2,c
 12624  00342A  0E8E               	movlw	142
 12625  00342C  6E04               	movwf	i2___ftpack@exp,c
 12626  00342E  0E00               	movlw	0
 12627  003430  6E05               	movwf	i2___ftpack@sign,c
 12628  003432  ECD6  F013         	call	i2___ftpack	;wreg free
 12629  003436  C001  F009         	movff	?i2___ftpack,?i2___lbtoft
 12630  00343A  C002  F00A         	movff	?i2___ftpack+1,?i2___lbtoft+1
 12631  00343E  C003  F00B         	movff	?i2___ftpack+2,?i2___lbtoft+2
 12632  003442  0012               	return	
 12633  003444                     __end_ofi2___lbtoft:
 12634                           	opt stack 0
 12635                           pclatu	equ	0xFFB
 12636                           pclath	equ	0xFFA
 12637                           tblptru	equ	0xFF8
 12638                           tblptrh	equ	0xFF7
 12639                           tblptrl	equ	0xFF6
 12640                           tablat	equ	0xFF5
 12641                           prodh	equ	0xFF4
 12642                           prodl	equ	0xFF3
 12643                           intcon	equ	0xFF2
 12644                           intcon2	equ	0xFF1
 12645                           intcon3	equ	0xFF0
 12646                           indf0	equ	0xFEF
 12647                           postinc0	equ	0xFEE
 12648                           fsr0h	equ	0xFEA
 12649                           fsr0l	equ	0xFE9
 12650                           wreg	equ	0xFE8
 12651                           postinc1	equ	0xFE6
 12652                           postdec1	equ	0xFE5
 12653                           fsr1h	equ	0xFE2
 12654                           fsr1l	equ	0xFE1
 12655                           indf2	equ	0xFDF
 12656                           postinc2	equ	0xFDE
 12657                           postdec2	equ	0xFDD
 12658                           fsr2h	equ	0xFDA
 12659                           fsr2l	equ	0xFD9
 12660                           status	equ	0xFD8
 12661                           
 12662 ;; *************** function i2___fttol *****************
 12663 ;; Defined at:
 12664 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\fttol.c"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;  f1              3   27[COMRAM] float 
 12667 ;; Auto vars:     Size  Location     Type
 12668 ;;  __fttol         4   37[COMRAM] unsigned long 
 12669 ;;  __fttol         1   41[COMRAM] unsigned char 
 12670 ;;  __fttol         1   36[COMRAM] unsigned char 
 12671 ;; Return value:  Size  Location     Type
 12672 ;;                  4   27[COMRAM] long 
 12673 ;; Registers used:
 12674 ;;		wreg, status,2, status,0
 12675 ;; Tracked objects:
 12676 ;;		On entry : 0/0
 12677 ;;		On exit  : 0/0
 12678 ;;		Unchanged: 0/0
 12679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12680 ;;      Params:         4       0       0       0       0       0       0       0       0
 12681 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12682 ;;      Temps:          5       0       0       0       0       0       0       0       0
 12683 ;;      Totals:        15       0       0       0       0       0       0       0       0
 12684 ;;Total ram usage:       15 bytes
 12685 ;; Hardware stack levels used:    1
 12686 ;; This function calls:
 12687 ;;		Nothing
 12688 ;; This function is called by:
 12689 ;;		i2_PWM_DutyCycle1
 12690 ;;		i2_PWM_DutyCycle2
 12691 ;; This function uses a non-reentrant model
 12692 ;;
 12693                           
 12694                           	psect	text57
 12695  002312                     __ptext57:
 12696                           	opt stack 0
 12697  002312                     i2___fttol:
 12698                           	opt stack 22
 12699                           
 12700                           ;incstack = 0
 12701  002312  C01E  F020         	movff	i2___fttol@f1+2,??i2___fttol
 12702  002316  6A21               	clrf	(??i2___fttol+1)& (0+255),c
 12703  002318  6A22               	clrf	(??i2___fttol+2)& (0+255),c
 12704  00231A  341D               	rlcf	i2___fttol@f1+1,w,c
 12705  00231C  3620               	rlcf	??i2___fttol& (0+255),f,c
 12706  00231E  E301               	bnc	u487_41
 12707  002320  8021               	bsf	(??i2___fttol+1)& (0+255),0,c
 12708  002322                     u487_41:
 12709  002322  5020               	movf	??i2___fttol,w,c
 12710  002324  6E2A               	movwf	i2___fttol@exp1,c
 12711  002326  662A               	tstfsz	i2___fttol@exp1& (0+255),c
 12712  002328  D001               	goto	i2l4436
 12713  00232A  D038               	goto	i2u492_40
 12714  00232C                     i2l4436:
 12715  00232C  0E17               	movlw	23
 12716  00232E  6E20               	movwf	??i2___fttol& (0+255),c
 12717  002330  C01C  F021         	movff	i2___fttol@f1,??i2___fttol+1
 12718  002334  C01D  F022         	movff	i2___fttol@f1+1,??i2___fttol+2
 12719  002338  C01E  F023         	movff	i2___fttol@f1+2,??i2___fttol+3
 12720  00233C  2820               	incf	??i2___fttol,w,c
 12721  00233E  6E24               	movwf	(??i2___fttol+4)& (0+255),c
 12722  002340  D004               	goto	i2u489_40
 12723  002342                     i2u489_45:
 12724  002342  90D8               	bcf	status,0,c
 12725  002344  3223               	rrcf	??i2___fttol+3,f,c
 12726  002346  3222               	rrcf	??i2___fttol+2,f,c
 12727  002348  3221               	rrcf	??i2___fttol+1,f,c
 12728  00234A                     i2u489_40:
 12729  00234A  2E24               	decfsz	(??i2___fttol+4)& (0+255),f,c
 12730  00234C  D7FA               	goto	i2u489_45
 12731  00234E  5021               	movf	??i2___fttol+1,w,c
 12732  002350  6E25               	movwf	i2___fttol@sign1,c
 12733  002352  8E1D               	bsf	i2___fttol@f1+1,7,c
 12734  002354  0EFF               	movlw	255
 12735  002356  161C               	andwf	i2___fttol@f1,f,c
 12736  002358  0EFF               	movlw	255
 12737  00235A  161D               	andwf	i2___fttol@f1+1,f,c
 12738  00235C  0E00               	movlw	0
 12739  00235E  161E               	andwf	i2___fttol@f1+2,f,c
 12740  002360  501C               	movf	i2___fttol@f1,w,c
 12741  002362  6E26               	movwf	i2___fttol@lval,c
 12742  002364  501D               	movf	i2___fttol@f1+1,w,c
 12743  002366  6E27               	movwf	i2___fttol@lval+1,c
 12744  002368  501E               	movf	i2___fttol@f1+2,w,c
 12745  00236A  6E28               	movwf	i2___fttol@lval+2,c
 12746  00236C  6A29               	clrf	i2___fttol@lval+3,c
 12747  00236E  0E8E               	movlw	142
 12748  002370  5E2A               	subwf	i2___fttol@exp1,f,c
 12749  002372  AE2A               	btfss	i2___fttol@exp1,7,c
 12750  002374  D010               	goto	i2l4458
 12751  002376  502A               	movf	i2___fttol@exp1,w,c
 12752  002378  0A80               	xorlw	128
 12753  00237A  6E20               	movwf	??i2___fttol& (0+255),c
 12754  00237C  0EF1               	movlw	241
 12755  00237E  0A80               	xorlw	128
 12756  002380  5C20               	subwf	??i2___fttol,w,c
 12757  002382  A0D8               	btfss	status,0,c
 12758  002384  D00B               	goto	i2u492_40
 12759  002386                     i2l4454:
 12760  002386  90D8               	bcf	status,0,c
 12761  002388  3229               	rrcf	i2___fttol@lval+3,f,c
 12762  00238A  3228               	rrcf	i2___fttol@lval+2,f,c
 12763  00238C  3227               	rrcf	i2___fttol@lval+1,f,c
 12764  00238E  3226               	rrcf	i2___fttol@lval,f,c
 12765  002390  3E2A               	incfsz	i2___fttol@exp1,f,c
 12766  002392  D7F9               	goto	i2l4454
 12767  002394  D014               	goto	i2l4468
 12768  002396                     i2l4458:
 12769  002396  0E17               	movlw	23
 12770  002398  642A               	cpfsgt	i2___fttol@exp1,c
 12771  00239A  D00F               	goto	i2l4466
 12772  00239C                     i2u492_40:
 12773  00239C  0E00               	movlw	0
 12774  00239E  6E1C               	movwf	?i2___fttol,c
 12775  0023A0  0E00               	movlw	0
 12776  0023A2  6E1D               	movwf	?i2___fttol+1,c
 12777  0023A4  0E00               	movlw	0
 12778  0023A6  6E1E               	movwf	?i2___fttol+2,c
 12779  0023A8  0E00               	movlw	0
 12780  0023AA  6E1F               	movwf	?i2___fttol+3,c
 12781  0023AC  D01B               	goto	i2l1105
 12782  0023AE                     i2l4464:
 12783  0023AE  90D8               	bcf	status,0,c
 12784  0023B0  3626               	rlcf	i2___fttol@lval,f,c
 12785  0023B2  3627               	rlcf	i2___fttol@lval+1,f,c
 12786  0023B4  3628               	rlcf	i2___fttol@lval+2,f,c
 12787  0023B6  3629               	rlcf	i2___fttol@lval+3,f,c
 12788  0023B8  062A               	decf	i2___fttol@exp1,f,c
 12789  0023BA                     i2l4466:
 12790  0023BA  662A               	tstfsz	i2___fttol@exp1,c
 12791  0023BC  D7F8               	goto	i2l4464
 12792  0023BE                     i2l4468:
 12793  0023BE  5025               	movf	i2___fttol@sign1,w,c
 12794  0023C0  B4D8               	btfsc	status,2,c
 12795  0023C2  D008               	goto	i2l4472
 12796  0023C4  1E29               	comf	i2___fttol@lval+3,f,c
 12797  0023C6  1E28               	comf	i2___fttol@lval+2,f,c
 12798  0023C8  1E27               	comf	i2___fttol@lval+1,f,c
 12799  0023CA  6C26               	negf	i2___fttol@lval,c
 12800  0023CC  0E00               	movlw	0
 12801  0023CE  2227               	addwfc	i2___fttol@lval+1,f,c
 12802  0023D0  2228               	addwfc	i2___fttol@lval+2,f,c
 12803  0023D2  2229               	addwfc	i2___fttol@lval+3,f,c
 12804  0023D4                     i2l4472:
 12805  0023D4  C026  F01C         	movff	i2___fttol@lval,?i2___fttol
 12806  0023D8  C027  F01D         	movff	i2___fttol@lval+1,?i2___fttol+1
 12807  0023DC  C028  F01E         	movff	i2___fttol@lval+2,?i2___fttol+2
 12808  0023E0  C029  F01F         	movff	i2___fttol@lval+3,?i2___fttol+3
 12809  0023E4                     i2l1105:
 12810  0023E4  0012               	return	
 12811  0023E6                     __end_ofi2___fttol:
 12812                           	opt stack 0
 12813                           pclatu	equ	0xFFB
 12814                           pclath	equ	0xFFA
 12815                           tblptru	equ	0xFF8
 12816                           tblptrh	equ	0xFF7
 12817                           tblptrl	equ	0xFF6
 12818                           tablat	equ	0xFF5
 12819                           prodh	equ	0xFF4
 12820                           prodl	equ	0xFF3
 12821                           intcon	equ	0xFF2
 12822                           intcon2	equ	0xFF1
 12823                           intcon3	equ	0xFF0
 12824                           indf0	equ	0xFEF
 12825                           postinc0	equ	0xFEE
 12826                           fsr0h	equ	0xFEA
 12827                           fsr0l	equ	0xFE9
 12828                           wreg	equ	0xFE8
 12829                           postinc1	equ	0xFE6
 12830                           postdec1	equ	0xFE5
 12831                           fsr1h	equ	0xFE2
 12832                           fsr1l	equ	0xFE1
 12833                           indf2	equ	0xFDF
 12834                           postinc2	equ	0xFDE
 12835                           postdec2	equ	0xFDD
 12836                           fsr2h	equ	0xFDA
 12837                           fsr2l	equ	0xFD9
 12838                           status	equ	0xFD8
 12839                           
 12840 ;; *************** function i2___ftmul *****************
 12841 ;; Defined at:
 12842 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\ftmul.c"
 12843 ;; Parameters:    Size  Location     Type
 12844 ;;  f1              3   12[COMRAM] float 
 12845 ;;  f2              3   15[COMRAM] float 
 12846 ;; Auto vars:     Size  Location     Type
 12847 ;;  __ftmul         3   22[COMRAM] unsigned um
 12848 ;;  __ftmul         1   26[COMRAM] unsigned char 
 12849 ;;  __ftmul         1   25[COMRAM] unsigned char 
 12850 ;;  __ftmul         1   21[COMRAM] unsigned char 
 12851 ;; Return value:  Size  Location     Type
 12852 ;;                  3   12[COMRAM] float 
 12853 ;; Registers used:
 12854 ;;		wreg, status,2, status,0, cstack
 12855 ;; Tracked objects:
 12856 ;;		On entry : 0/0
 12857 ;;		On exit  : 0/0
 12858 ;;		Unchanged: 0/0
 12859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12860 ;;      Params:         6       0       0       0       0       0       0       0       0
 12861 ;;      Locals:         6       0       0       0       0       0       0       0       0
 12862 ;;      Temps:          3       0       0       0       0       0       0       0       0
 12863 ;;      Totals:        15       0       0       0       0       0       0       0       0
 12864 ;;Total ram usage:       15 bytes
 12865 ;; Hardware stack levels used:    1
 12866 ;; Hardware stack levels required when called:    1
 12867 ;; This function calls:
 12868 ;;		i2___ftpack
 12869 ;; This function is called by:
 12870 ;;		i2_PWM_DutyCycle1
 12871 ;;		i2_PWM_DutyCycle2
 12872 ;; This function uses a non-reentrant model
 12873 ;;
 12874                           
 12875                           	psect	text58
 12876  001FA4                     __ptext58:
 12877                           	opt stack 0
 12878  001FA4                     i2___ftmul:
 12879                           	opt stack 21
 12880                           
 12881                           ;incstack = 0
 12882  001FA4  C00F  F013         	movff	i2___ftmul@f1+2,??i2___ftmul
 12883  001FA8  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
 12884  001FAA  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
 12885  001FAC  340E               	rlcf	i2___ftmul@f1+1,w,c
 12886  001FAE  3613               	rlcf	??i2___ftmul& (0+255),f,c
 12887  001FB0  E301               	bnc	u481_41
 12888  001FB2  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
 12889  001FB4                     u481_41:
 12890  001FB4  5013               	movf	??i2___ftmul,w,c
 12891  001FB6  6E16               	movwf	i2___ftmul@exp,c
 12892  001FB8  6616               	tstfsz	i2___ftmul@exp& (0+255),c
 12893  001FBA  D001               	goto	i2l4388
 12894  001FBC  D00C               	goto	i2u484_40
 12895  001FBE                     i2l4388:
 12896  001FBE  C012  F013         	movff	i2___ftmul@f2+2,??i2___ftmul
 12897  001FC2  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
 12898  001FC4  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
 12899  001FC6  3411               	rlcf	i2___ftmul@f2+1,w,c
 12900  001FC8  3613               	rlcf	??i2___ftmul& (0+255),f,c
 12901  001FCA  E301               	bnc	u483_41
 12902  001FCC  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
 12903  001FCE                     u483_41:
 12904  001FCE  5013               	movf	??i2___ftmul,w,c
 12905  001FD0  6E1B               	movwf	i2___ftmul@sign,c
 12906  001FD2  661B               	tstfsz	i2___ftmul@sign& (0+255),c
 12907  001FD4  D007               	goto	i2l4394
 12908  001FD6                     i2u484_40:
 12909  001FD6  0E00               	movlw	0
 12910  001FD8  6E0D               	movwf	?i2___ftmul,c
 12911  001FDA  0E00               	movlw	0
 12912  001FDC  6E0E               	movwf	?i2___ftmul+1,c
 12913  001FDE  0E00               	movlw	0
 12914  001FE0  6E0F               	movwf	?i2___ftmul+2,c
 12915  001FE2  D051               	goto	i2l1085
 12916  001FE4                     i2l4394:
 12917  001FE4  501B               	movf	i2___ftmul@sign,w,c
 12918  001FE6  0F7B               	addlw	123
 12919  001FE8  2616               	addwf	i2___ftmul@exp,f,c
 12920  001FEA  C00F  F01B         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 12921  001FEE  5012               	movf	i2___ftmul@f2+2,w,c
 12922  001FF0  1A1B               	xorwf	i2___ftmul@sign,f,c
 12923  001FF2  0E80               	movlw	128
 12924  001FF4  161B               	andwf	i2___ftmul@sign,f,c
 12925  001FF6  8E0E               	bsf	i2___ftmul@f1+1,7,c
 12926  001FF8  8E11               	bsf	i2___ftmul@f2+1,7,c
 12927  001FFA  0EFF               	movlw	255
 12928  001FFC  1610               	andwf	i2___ftmul@f2,f,c
 12929  001FFE  0EFF               	movlw	255
 12930  002000  1611               	andwf	i2___ftmul@f2+1,f,c
 12931  002002  0E00               	movlw	0
 12932  002004  1612               	andwf	i2___ftmul@f2+2,f,c
 12933  002006  0E00               	movlw	0
 12934  002008  6E17               	movwf	i2___ftmul@f3_as_product,c
 12935  00200A  0E00               	movlw	0
 12936  00200C  6E18               	movwf	i2___ftmul@f3_as_product+1,c
 12937  00200E  0E00               	movlw	0
 12938  002010  6E19               	movwf	i2___ftmul@f3_as_product+2,c
 12939  002012  0E07               	movlw	7
 12940  002014  6E1A               	movwf	i2___ftmul@cntr,c
 12941  002016                     i2l4408:
 12942  002016  A00D               	btfss	i2___ftmul@f1,0,c
 12943  002018  D006               	goto	i2l4412
 12944  00201A  5010               	movf	i2___ftmul@f2,w,c
 12945  00201C  2617               	addwf	i2___ftmul@f3_as_product,f,c
 12946  00201E  5011               	movf	i2___ftmul@f2+1,w,c
 12947  002020  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
 12948  002022  5012               	movf	i2___ftmul@f2+2,w,c
 12949  002024  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
 12950  002026                     i2l4412:
 12951  002026  90D8               	bcf	status,0,c
 12952  002028  320F               	rrcf	i2___ftmul@f1+2,f,c
 12953  00202A  320E               	rrcf	i2___ftmul@f1+1,f,c
 12954  00202C  320D               	rrcf	i2___ftmul@f1,f,c
 12955  00202E  90D8               	bcf	status,0,c
 12956  002030  3610               	rlcf	i2___ftmul@f2,f,c
 12957  002032  3611               	rlcf	i2___ftmul@f2+1,f,c
 12958  002034  3612               	rlcf	i2___ftmul@f2+2,f,c
 12959  002036  2E1A               	decfsz	i2___ftmul@cntr,f,c
 12960  002038  D7EE               	goto	i2l4408
 12961  00203A  0E09               	movlw	9
 12962  00203C  6E1A               	movwf	i2___ftmul@cntr,c
 12963  00203E                     i2l4418:
 12964  00203E  A00D               	btfss	i2___ftmul@f1,0,c
 12965  002040  D006               	goto	i2l4422
 12966  002042  5010               	movf	i2___ftmul@f2,w,c
 12967  002044  2617               	addwf	i2___ftmul@f3_as_product,f,c
 12968  002046  5011               	movf	i2___ftmul@f2+1,w,c
 12969  002048  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
 12970  00204A  5012               	movf	i2___ftmul@f2+2,w,c
 12971  00204C  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
 12972  00204E                     i2l4422:
 12973  00204E  90D8               	bcf	status,0,c
 12974  002050  320F               	rrcf	i2___ftmul@f1+2,f,c
 12975  002052  320E               	rrcf	i2___ftmul@f1+1,f,c
 12976  002054  320D               	rrcf	i2___ftmul@f1,f,c
 12977  002056  90D8               	bcf	status,0,c
 12978  002058  3219               	rrcf	i2___ftmul@f3_as_product+2,f,c
 12979  00205A  3218               	rrcf	i2___ftmul@f3_as_product+1,f,c
 12980  00205C  3217               	rrcf	i2___ftmul@f3_as_product,f,c
 12981  00205E  2E1A               	decfsz	i2___ftmul@cntr,f,c
 12982  002060  D7EE               	goto	i2l4418
 12983  002062  C017  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 12984  002066  C018  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 12985  00206A  C019  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 12986  00206E  C016  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 12987  002072  C01B  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 12988  002076  ECD6  F013         	call	i2___ftpack	;wreg free
 12989  00207A  C001  F00D         	movff	?i2___ftpack,?i2___ftmul
 12990  00207E  C002  F00E         	movff	?i2___ftpack+1,?i2___ftmul+1
 12991  002082  C003  F00F         	movff	?i2___ftpack+2,?i2___ftmul+2
 12992  002086                     i2l1085:
 12993  002086  0012               	return	
 12994  002088                     __end_ofi2___ftmul:
 12995                           	opt stack 0
 12996                           pclatu	equ	0xFFB
 12997                           pclath	equ	0xFFA
 12998                           tblptru	equ	0xFF8
 12999                           tblptrh	equ	0xFF7
 13000                           tblptrl	equ	0xFF6
 13001                           tablat	equ	0xFF5
 13002                           prodh	equ	0xFF4
 13003                           prodl	equ	0xFF3
 13004                           intcon	equ	0xFF2
 13005                           intcon2	equ	0xFF1
 13006                           intcon3	equ	0xFF0
 13007                           indf0	equ	0xFEF
 13008                           postinc0	equ	0xFEE
 13009                           fsr0h	equ	0xFEA
 13010                           fsr0l	equ	0xFE9
 13011                           wreg	equ	0xFE8
 13012                           postinc1	equ	0xFE6
 13013                           postdec1	equ	0xFE5
 13014                           fsr1h	equ	0xFE2
 13015                           fsr1l	equ	0xFE1
 13016                           indf2	equ	0xFDF
 13017                           postinc2	equ	0xFDE
 13018                           postdec2	equ	0xFDD
 13019                           fsr2h	equ	0xFDA
 13020                           fsr2l	equ	0xFD9
 13021                           status	equ	0xFD8
 13022                           
 13023 ;; *************** function i2___ftpack *****************
 13024 ;; Defined at:
 13025 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.33\sources\common\float.c"
 13026 ;; Parameters:    Size  Location     Type
 13027 ;;  arg             3    0[COMRAM] unsigned um
 13028 ;;  exp             1    3[COMRAM] unsigned char 
 13029 ;;  sign            1    4[COMRAM] unsigned char 
 13030 ;; Auto vars:     Size  Location     Type
 13031 ;;		None
 13032 ;; Return value:  Size  Location     Type
 13033 ;;                  3    0[COMRAM] float 
 13034 ;; Registers used:
 13035 ;;		wreg, status,2, status,0
 13036 ;; Tracked objects:
 13037 ;;		On entry : 0/0
 13038 ;;		On exit  : 0/0
 13039 ;;		Unchanged: 0/0
 13040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13041 ;;      Params:         5       0       0       0       0       0       0       0       0
 13042 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13043 ;;      Temps:          3       0       0       0       0       0       0       0       0
 13044 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13045 ;;Total ram usage:        8 bytes
 13046 ;; Hardware stack levels used:    1
 13047 ;; This function calls:
 13048 ;;		Nothing
 13049 ;; This function is called by:
 13050 ;;		i2___ftmul
 13051 ;;		i2___lbtoft
 13052 ;; This function uses a non-reentrant model
 13053 ;;
 13054                           
 13055                           	psect	text59
 13056  0027AC                     __ptext59:
 13057                           	opt stack 0
 13058  0027AC                     i2___ftpack:
 13059                           	opt stack 21
 13060                           
 13061                           ;incstack = 0
 13062  0027AC  5004               	movf	i2___ftpack@exp,w,c
 13063  0027AE  B4D8               	btfsc	status,2,c
 13064  0027B0  D005               	goto	i2l4038
 13065  0027B2  5001               	movf	i2___ftpack@arg,w,c
 13066  0027B4  1002               	iorwf	i2___ftpack@arg+1,w,c
 13067  0027B6  1003               	iorwf	i2___ftpack@arg+2,w,c
 13068  0027B8  A4D8               	btfss	status,2,c
 13069  0027BA  D00C               	goto	i2l4044
 13070  0027BC                     i2l4038:
 13071  0027BC  0E00               	movlw	0
 13072  0027BE  6E01               	movwf	?i2___ftpack,c
 13073  0027C0  0E00               	movlw	0
 13074  0027C2  6E02               	movwf	?i2___ftpack+1,c
 13075  0027C4  0E00               	movlw	0
 13076  0027C6  6E03               	movwf	?i2___ftpack+2,c
 13077  0027C8  D044               	goto	i2l984
 13078  0027CA                     i2l4042:
 13079  0027CA  2A04               	incf	i2___ftpack@exp,f,c
 13080  0027CC  90D8               	bcf	status,0,c
 13081  0027CE  3203               	rrcf	i2___ftpack@arg+2,f,c
 13082  0027D0  3202               	rrcf	i2___ftpack@arg+1,f,c
 13083  0027D2  3201               	rrcf	i2___ftpack@arg,f,c
 13084  0027D4                     i2l4044:
 13085  0027D4  0E00               	movlw	0
 13086  0027D6  1401               	andwf	i2___ftpack@arg,w,c
 13087  0027D8  6E06               	movwf	??i2___ftpack& (0+255),c
 13088  0027DA  0E00               	movlw	0
 13089  0027DC  1402               	andwf	i2___ftpack@arg+1,w,c
 13090  0027DE  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 13091  0027E0  0EFE               	movlw	254
 13092  0027E2  1403               	andwf	i2___ftpack@arg+2,w,c
 13093  0027E4  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 13094  0027E6  5006               	movf	??i2___ftpack,w,c
 13095  0027E8  1007               	iorwf	??i2___ftpack+1,w,c
 13096  0027EA  1008               	iorwf	??i2___ftpack+2,w,c
 13097  0027EC  B4D8               	btfsc	status,2,c
 13098  0027EE  D00C               	goto	i2l4050
 13099  0027F0  D7EC               	goto	i2l4042
 13100  0027F2                     i2l4046:
 13101  0027F2  2A04               	incf	i2___ftpack@exp,f,c
 13102  0027F4  0E01               	movlw	1
 13103  0027F6  2601               	addwf	i2___ftpack@arg,f,c
 13104  0027F8  0E00               	movlw	0
 13105  0027FA  2202               	addwfc	i2___ftpack@arg+1,f,c
 13106  0027FC  0E00               	movlw	0
 13107  0027FE  2203               	addwfc	i2___ftpack@arg+2,f,c
 13108  002800  90D8               	bcf	status,0,c
 13109  002802  3203               	rrcf	i2___ftpack@arg+2,f,c
 13110  002804  3202               	rrcf	i2___ftpack@arg+1,f,c
 13111  002806  3201               	rrcf	i2___ftpack@arg,f,c
 13112  002808                     i2l4050:
 13113  002808  0E00               	movlw	0
 13114  00280A  1401               	andwf	i2___ftpack@arg,w,c
 13115  00280C  6E06               	movwf	??i2___ftpack& (0+255),c
 13116  00280E  0E00               	movlw	0
 13117  002810  1402               	andwf	i2___ftpack@arg+1,w,c
 13118  002812  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 13119  002814  0EFF               	movlw	255
 13120  002816  1403               	andwf	i2___ftpack@arg+2,w,c
 13121  002818  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 13122  00281A  5006               	movf	??i2___ftpack,w,c
 13123  00281C  1007               	iorwf	??i2___ftpack+1,w,c
 13124  00281E  1008               	iorwf	??i2___ftpack+2,w,c
 13125  002820  B4D8               	btfsc	status,2,c
 13126  002822  D006               	goto	i2l4054
 13127  002824  D7E6               	goto	i2l4046
 13128  002826                     i2l4052:
 13129  002826  0604               	decf	i2___ftpack@exp,f,c
 13130  002828  90D8               	bcf	status,0,c
 13131  00282A  3601               	rlcf	i2___ftpack@arg,f,c
 13132  00282C  3602               	rlcf	i2___ftpack@arg+1,f,c
 13133  00282E  3603               	rlcf	i2___ftpack@arg+2,f,c
 13134  002830                     i2l4054:
 13135  002830  AE02               	btfss	i2___ftpack@arg+1,7,c
 13136  002832  D7F9               	goto	i2l4052
 13137  002834  A004               	btfss	i2___ftpack@exp,0,c
 13138  002836  9E02               	bcf	i2___ftpack@arg+1,7,c
 13139  002838  90D8               	bcf	status,0,c
 13140  00283A  3204               	rrcf	i2___ftpack@exp,f,c
 13141  00283C  5004               	movf	i2___ftpack@exp,w,c
 13142  00283E  1203               	iorwf	i2___ftpack@arg+2,f,c
 13143  002840  5005               	movf	i2___ftpack@sign,w,c
 13144  002842  A4D8               	btfss	status,2,c
 13145  002844  8E03               	bsf	i2___ftpack@arg+2,7,c
 13146  002846  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 13147  00284A  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 13148  00284E  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 13149  002852                     i2l984:
 13150  002852  0012               	return	
 13151  002854                     __end_ofi2___ftpack:
 13152                           	opt stack 0
 13153                           pclatu	equ	0xFFB
 13154                           pclath	equ	0xFFA
 13155                           tblptru	equ	0xFF8
 13156                           tblptrh	equ	0xFF7
 13157                           tblptrl	equ	0xFF6
 13158                           tablat	equ	0xFF5
 13159                           prodh	equ	0xFF4
 13160                           prodl	equ	0xFF3
 13161                           intcon	equ	0xFF2
 13162                           intcon2	equ	0xFF1
 13163                           intcon3	equ	0xFF0
 13164                           indf0	equ	0xFEF
 13165                           postinc0	equ	0xFEE
 13166                           fsr0h	equ	0xFEA
 13167                           fsr0l	equ	0xFE9
 13168                           wreg	equ	0xFE8
 13169                           postinc1	equ	0xFE6
 13170                           postdec1	equ	0xFE5
 13171                           fsr1h	equ	0xFE2
 13172                           fsr1l	equ	0xFE1
 13173                           indf2	equ	0xFDF
 13174                           postinc2	equ	0xFDE
 13175                           postdec2	equ	0xFDD
 13176                           fsr2h	equ	0xFDA
 13177                           fsr2l	equ	0xFD9
 13178                           status	equ	0xFD8
 13179                           
 13180 ;; *************** function i2_SetDCPWM1 *****************
 13181 ;; Defined at:
 13182 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
 13183 ;; Parameters:    Size  Location     Type
 13184 ;;  dutycycle       2    0[COMRAM] unsigned int 
 13185 ;; Auto vars:     Size  Location     Type
 13186 ;;  SetDCPWM1       2    4[COMRAM] struct PWMDC
 13187 ;; Return value:  Size  Location     Type
 13188 ;;		None               void
 13189 ;; Registers used:
 13190 ;;		wreg, status,2, status,0
 13191 ;; Tracked objects:
 13192 ;;		On entry : 0/0
 13193 ;;		On exit  : 0/0
 13194 ;;		Unchanged: 0/0
 13195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13196 ;;      Params:         2       0       0       0       0       0       0       0       0
 13197 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13198 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13199 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13200 ;;Total ram usage:        6 bytes
 13201 ;; Hardware stack levels used:    1
 13202 ;; This function calls:
 13203 ;;		Nothing
 13204 ;; This function is called by:
 13205 ;;		i2_PWM_DutyCycle1
 13206 ;; This function uses a non-reentrant model
 13207 ;;
 13208                           
 13209                           	psect	text60
 13210  003240                     __ptext60:
 13211                           	opt stack 0
 13212  003240                     i2_SetDCPWM1:
 13213                           	opt stack 22
 13214                           
 13215                           ;incstack = 0
 13216  003240  C001  F003         	movff	i2SetDCPWM1@dutycycle,??i2_SetDCPWM1
 13217  003244  C002  F004         	movff	i2SetDCPWM1@dutycycle+1,??i2_SetDCPWM1+1
 13218  003248  0E06               	movlw	6
 13219  00324A                     i2u479_45:
 13220  00324A  90D8               	bcf	status,0,c
 13221  00324C  3603               	rlcf	??i2_SetDCPWM1,f,c
 13222  00324E  3604               	rlcf	??i2_SetDCPWM1+1,f,c
 13223  003250  2EE8               	decfsz	wreg,f,c
 13224  003252  D7FB               	goto	i2u479_45
 13225  003254  C003  F005         	movff	??i2_SetDCPWM1,i2SetDCPWM1@DCycle
 13226  003258  C004  F006         	movff	??i2_SetDCPWM1+1,i2SetDCPWM1@DCycle+1
 13227  00325C  C006  FFBE         	movff	i2SetDCPWM1@DCycle+1,4030	;volatile
 13228  003260  C005  F003         	movff	i2SetDCPWM1@DCycle,??i2_SetDCPWM1
 13229  003264  90D8               	bcf	status,0,c
 13230  003266  3203               	rrcf	??i2_SetDCPWM1,f,c
 13231  003268  90D8               	bcf	status,0,c
 13232  00326A  3203               	rrcf	??i2_SetDCPWM1,f,c
 13233  00326C  0E30               	movlw	48
 13234  00326E  1603               	andwf	??i2_SetDCPWM1,f,c
 13235  003270  50BD               	movf	4029,w,c	;volatile
 13236  003272  0BCF               	andlw	207
 13237  003274  1003               	iorwf	??i2_SetDCPWM1,w,c
 13238  003276  6EBD               	movwf	4029,c	;volatile
 13239  003278  0012               	return	
 13240  00327A                     __end_ofi2_SetDCPWM1:
 13241                           	opt stack 0
 13242                           pclatu	equ	0xFFB
 13243                           pclath	equ	0xFFA
 13244                           tblptru	equ	0xFF8
 13245                           tblptrh	equ	0xFF7
 13246                           tblptrl	equ	0xFF6
 13247                           tablat	equ	0xFF5
 13248                           prodh	equ	0xFF4
 13249                           prodl	equ	0xFF3
 13250                           intcon	equ	0xFF2
 13251                           intcon2	equ	0xFF1
 13252                           intcon3	equ	0xFF0
 13253                           indf0	equ	0xFEF
 13254                           postinc0	equ	0xFEE
 13255                           fsr0h	equ	0xFEA
 13256                           fsr0l	equ	0xFE9
 13257                           wreg	equ	0xFE8
 13258                           postinc1	equ	0xFE6
 13259                           postdec1	equ	0xFE5
 13260                           fsr1h	equ	0xFE2
 13261                           fsr1l	equ	0xFE1
 13262                           indf2	equ	0xFDF
 13263                           postinc2	equ	0xFDE
 13264                           postdec2	equ	0xFDD
 13265                           fsr2h	equ	0xFDA
 13266                           fsr2l	equ	0xFD9
 13267                           status	equ	0xFD8
 13268                           
 13269 ;; *************** function i2_Lcd_Write_String *****************
 13270 ;; Defined at:
 13271 ;;		line 90 in file "lcd.c"
 13272 ;; Parameters:    Size  Location     Type
 13273 ;;  a               2    4[COMRAM] PTR unsigned char 
 13274 ;;		 -> STR_24(11), STR_23(7), STR_22(18), STR_21(17), 
 13275 ;;		 -> STR_20(17), STR_19(17), Lcd_Write_Integer@s(20), Lcd_Write_Float@s(20), 
 13276 ;;		 -> STR_16(8), STR_14(2), STR_13(2), STR_12(2), 
 13277 ;;		 -> STR_11(16), STR_10(7), 
 13278 ;; Auto vars:     Size  Location     Type
 13279 ;;  Lcd_Write_St    2    8[COMRAM] int 
 13280 ;; Return value:  Size  Location     Type
 13281 ;;		None               void
 13282 ;; Registers used:
 13283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13284 ;; Tracked objects:
 13285 ;;		On entry : 0/0
 13286 ;;		On exit  : 0/0
 13287 ;;		Unchanged: 0/0
 13288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13289 ;;      Params:         2       0       0       0       0       0       0       0       0
 13290 ;;      Locals:         2       0       0       0       0       0       0       0       0
 13291 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13292 ;;      Totals:         6       0       0       0       0       0       0       0       0
 13293 ;;Total ram usage:        6 bytes
 13294 ;; Hardware stack levels used:    1
 13295 ;; Hardware stack levels required when called:    2
 13296 ;; This function calls:
 13297 ;;		i2_Lcd_Write_Char
 13298 ;; This function is called by:
 13299 ;;		_TMRO_USART
 13300 ;; This function uses a non-reentrant model
 13301 ;;
 13302                           
 13303                           	psect	text61
 13304  002C94                     __ptext61:
 13305                           	opt stack 0
 13306  002C94                     i2_Lcd_Write_String:
 13307                           	opt stack 21
 13308                           
 13309                           ;lcd.c: 91: int i;
 13310                           ;lcd.c: 92: for (i = 0; a[i] != '\0'; i++)
 13311                           
 13312                           ;incstack = 0
 13313  002C94  0E00               	movlw	0
 13314  002C96  6E0A               	movwf	i2Lcd_Write_String@i+1,c
 13315  002C98  0E00               	movlw	0
 13316  002C9A  6E09               	movwf	i2Lcd_Write_String@i,c
 13317  002C9C  D01C               	goto	i2l4682
 13318  002C9E                     i2l4678:
 13319                           
 13320                           ;lcd.c: 93: Lcd_Write_Char(a[i]);
 13321  002C9E  C005  F007         	movff	i2Lcd_Write_String@a,??i2_Lcd_Write_String
 13322  002CA2  C006  F008         	movff	i2Lcd_Write_String@a+1,??i2_Lcd_Write_String+1
 13323  002CA6  5009               	movf	i2Lcd_Write_String@i,w,c
 13324  002CA8  2607               	addwf	??i2_Lcd_Write_String,f,c
 13325  002CAA  500A               	movf	i2Lcd_Write_String@i+1,w,c
 13326  002CAC  2208               	addwfc	??i2_Lcd_Write_String+1,f,c
 13327  002CAE  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
 13328  002CB2  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
 13329  002CB6  6AF8               	clrf	tblptru,c
 13330  002CB8  0E07               	movlw	(high __ramtop+-1)
 13331  002CBA  64F7               	cpfsgt	tblptrh,c
 13332  002CBC  D003               	bra	i2u506_47
 13333  002CBE  0008               	tblrd		*
 13334  002CC0  50F5               	movf	tablat,w,c
 13335  002CC2  D005               	bra	i2u506_40
 13336  002CC4                     i2u506_47:
 13337  002CC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 13338  002CC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 13339  002CCC  50EF               	movf	indf0,w,c
 13340  002CCE                     i2u506_40:
 13341  002CCE  EC3D  F019         	call	i2_Lcd_Write_Char
 13342  002CD2  4A09               	infsnz	i2Lcd_Write_String@i,f,c
 13343  002CD4  2A0A               	incf	i2Lcd_Write_String@i+1,f,c
 13344  002CD6                     i2l4682:
 13345  002CD6  C005  F007         	movff	i2Lcd_Write_String@a,??i2_Lcd_Write_String
 13346  002CDA  C006  F008         	movff	i2Lcd_Write_String@a+1,??i2_Lcd_Write_String+1
 13347  002CDE  5009               	movf	i2Lcd_Write_String@i,w,c
 13348  002CE0  2607               	addwf	??i2_Lcd_Write_String,f,c
 13349  002CE2  500A               	movf	i2Lcd_Write_String@i+1,w,c
 13350  002CE4  2208               	addwfc	??i2_Lcd_Write_String+1,f,c
 13351  002CE6  C007  FFF6         	movff	??i2_Lcd_Write_String,tblptrl
 13352  002CEA  C008  FFF7         	movff	??i2_Lcd_Write_String+1,tblptrh
 13353  002CEE  6AF8               	clrf	tblptru,c
 13354  002CF0  0E07               	movlw	(high __ramtop+-1)
 13355  002CF2  64F7               	cpfsgt	tblptrh,c
 13356  002CF4  D003               	bra	i2u507_47
 13357  002CF6  0008               	tblrd		*
 13358  002CF8  50F5               	movf	tablat,w,c
 13359  002CFA  D005               	bra	i2u507_40
 13360  002CFC                     i2u507_47:
 13361  002CFC  CFF6 FFE9          	movff	tblptrl,fsr0l
 13362  002D00  CFF7 FFEA          	movff	tblptrh,fsr0h
 13363  002D04  50EF               	movf	indf0,w,c
 13364  002D06                     i2u507_40:
 13365  002D06  0900               	iorlw	0
 13366  002D08  B4D8               	btfsc	status,2,c
 13367  002D0A  0012               	return	
 13368  002D0C  D7C8               	goto	i2l4678
 13369  002D0E                     __end_ofi2_Lcd_Write_String:
 13370                           	opt stack 0
 13371                           pclatu	equ	0xFFB
 13372                           pclath	equ	0xFFA
 13373                           tblptru	equ	0xFF8
 13374                           tblptrh	equ	0xFF7
 13375                           tblptrl	equ	0xFF6
 13376                           tablat	equ	0xFF5
 13377                           prodh	equ	0xFF4
 13378                           prodl	equ	0xFF3
 13379                           intcon	equ	0xFF2
 13380                           intcon2	equ	0xFF1
 13381                           intcon3	equ	0xFF0
 13382                           indf0	equ	0xFEF
 13383                           postinc0	equ	0xFEE
 13384                           fsr0h	equ	0xFEA
 13385                           fsr0l	equ	0xFE9
 13386                           wreg	equ	0xFE8
 13387                           postinc1	equ	0xFE6
 13388                           postdec1	equ	0xFE5
 13389                           fsr1h	equ	0xFE2
 13390                           fsr1l	equ	0xFE1
 13391                           indf2	equ	0xFDF
 13392                           postinc2	equ	0xFDE
 13393                           postdec2	equ	0xFDD
 13394                           fsr2h	equ	0xFDA
 13395                           fsr2l	equ	0xFD9
 13396                           status	equ	0xFD8
 13397                           
 13398 ;; *************** function i2_Lcd_Write_Char *****************
 13399 ;; Defined at:
 13400 ;;		line 75 in file "lcd.c"
 13401 ;; Parameters:    Size  Location     Type
 13402 ;;  a               1    wreg     unsigned char 
 13403 ;; Auto vars:     Size  Location     Type
 13404 ;;  a               1    3[COMRAM] unsigned char 
 13405 ;;  Lcd_Write_Ch    1    2[COMRAM] unsigned char 
 13406 ;;  Lcd_Write_Ch    1    1[COMRAM] unsigned char 
 13407 ;; Return value:  Size  Location     Type
 13408 ;;		None               void
 13409 ;; Registers used:
 13410 ;;		wreg, status,2, status,0, cstack
 13411 ;; Tracked objects:
 13412 ;;		On entry : 0/0
 13413 ;;		On exit  : 0/0
 13414 ;;		Unchanged: 0/0
 13415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13416 ;;      Params:         0       0       0       0       0       0       0       0       0
 13417 ;;      Locals:         3       0       0       0       0       0       0       0       0
 13418 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13419 ;;      Totals:         3       0       0       0       0       0       0       0       0
 13420 ;;Total ram usage:        3 bytes
 13421 ;; Hardware stack levels used:    1
 13422 ;; Hardware stack levels required when called:    1
 13423 ;; This function calls:
 13424 ;;		i2_Lcd_Port
 13425 ;; This function is called by:
 13426 ;;		i2_Lcd_Write_String
 13427 ;; This function uses a non-reentrant model
 13428 ;;
 13429                           
 13430                           	psect	text62
 13431  00327A                     __ptext62:
 13432                           	opt stack 0
 13433  00327A                     i2_Lcd_Write_Char:
 13434                           	opt stack 21
 13435                           
 13436                           ;incstack = 0
 13437                           ;i2Lcd_Write_Char@a stored from wreg
 13438  00327A  6E04               	movwf	i2Lcd_Write_Char@a,c
 13439                           
 13440                           ;lcd.c: 76: char temp, y;
 13441                           ;lcd.c: 77: temp = a & 0x0F;
 13442  00327C  5004               	movf	i2Lcd_Write_Char@a,w,c
 13443  00327E  0B0F               	andlw	15
 13444  003280  6E02               	movwf	i2Lcd_Write_Char@temp,c
 13445                           
 13446                           ;lcd.c: 78: y = a & 0xF0;
 13447  003282  5004               	movf	i2Lcd_Write_Char@a,w,c
 13448  003284  0BF0               	andlw	240
 13449  003286  6E03               	movwf	i2Lcd_Write_Char@y,c
 13450                           
 13451                           ;lcd.c: 79: PORTEbits.RE0 = 1;
 13452  003288  8084               	bsf	3972,0,c	;volatile
 13453                           
 13454                           ;lcd.c: 80: Lcd_Port(y >> 4);
 13455  00328A  3803               	swapf	i2Lcd_Write_Char@y,w,c
 13456  00328C  0B0F               	andlw	15
 13457  00328E  ECC1  F019         	call	i2_Lcd_Port
 13458                           
 13459                           ;lcd.c: 81: PORTEbits.RE2 = 1;
 13460  003292  8484               	bsf	3972,2,c	;volatile
 13461                           
 13462                           ;lcd.c: 82: _delay((unsigned long)((40)*(4000000/4000000.0)));
 13463  003294  0E0D               	movlw	13
 13464  003296                     i2u535_47:
 13465  003296  2EE8               	decfsz	wreg,f,c
 13466  003298  D7FE               	goto	i2u535_47
 13467  00329A  F000               	nop	
 13468                           
 13469                           ;lcd.c: 83: PORTEbits.RE2 = 0;
 13470  00329C  9484               	bcf	3972,2,c	;volatile
 13471                           
 13472                           ;lcd.c: 84: Lcd_Port(temp);
 13473  00329E  5002               	movf	i2Lcd_Write_Char@temp,w,c
 13474  0032A0  ECC1  F019         	call	i2_Lcd_Port
 13475                           
 13476                           ;lcd.c: 85: PORTEbits.RE2 = 1;
 13477  0032A4  8484               	bsf	3972,2,c	;volatile
 13478                           
 13479                           ;lcd.c: 86: _delay((unsigned long)((40)*(4000000/4000000.0)));
 13480  0032A6  0E0D               	movlw	13
 13481  0032A8                     i2u536_47:
 13482  0032A8  2EE8               	decfsz	wreg,f,c
 13483  0032AA  D7FE               	goto	i2u536_47
 13484  0032AC  F000               	nop	
 13485                           
 13486                           ;lcd.c: 87: PORTEbits.RE2 = 0;
 13487  0032AE  9484               	bcf	3972,2,c	;volatile
 13488  0032B0  0012               	return	
 13489  0032B2                     __end_ofi2_Lcd_Write_Char:
 13490                           	opt stack 0
 13491                           pclatu	equ	0xFFB
 13492                           pclath	equ	0xFFA
 13493                           tblptru	equ	0xFF8
 13494                           tblptrh	equ	0xFF7
 13495                           tblptrl	equ	0xFF6
 13496                           tablat	equ	0xFF5
 13497                           prodh	equ	0xFF4
 13498                           prodl	equ	0xFF3
 13499                           intcon	equ	0xFF2
 13500                           intcon2	equ	0xFF1
 13501                           intcon3	equ	0xFF0
 13502                           indf0	equ	0xFEF
 13503                           postinc0	equ	0xFEE
 13504                           fsr0h	equ	0xFEA
 13505                           fsr0l	equ	0xFE9
 13506                           wreg	equ	0xFE8
 13507                           postinc1	equ	0xFE6
 13508                           postdec1	equ	0xFE5
 13509                           fsr1h	equ	0xFE2
 13510                           fsr1l	equ	0xFE1
 13511                           indf2	equ	0xFDF
 13512                           postinc2	equ	0xFDE
 13513                           postdec2	equ	0xFDD
 13514                           fsr2h	equ	0xFDA
 13515                           fsr2l	equ	0xFD9
 13516                           status	equ	0xFD8
 13517                           
 13518 ;; *************** function i2_Lcd_Set_Cursor *****************
 13519 ;; Defined at:
 13520 ;;		line 40 in file "lcd.c"
 13521 ;; Parameters:    Size  Location     Type
 13522 ;;  a               1    wreg     unsigned char 
 13523 ;;  b               1    3[COMRAM] unsigned char 
 13524 ;; Auto vars:     Size  Location     Type
 13525 ;;  a               1    4[COMRAM] unsigned char 
 13526 ;;  Lcd_Set_Curs    1    7[COMRAM] unsigned char 
 13527 ;;  Lcd_Set_Curs    1    6[COMRAM] unsigned char 
 13528 ;;  Lcd_Set_Curs    1    5[COMRAM] unsigned char 
 13529 ;; Return value:  Size  Location     Type
 13530 ;;		None               void
 13531 ;; Registers used:
 13532 ;;		wreg, status,2, status,0, cstack
 13533 ;; Tracked objects:
 13534 ;;		On entry : 0/0
 13535 ;;		On exit  : 0/0
 13536 ;;		Unchanged: 0/0
 13537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13538 ;;      Params:         1       0       0       0       0       0       0       0       0
 13539 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13540 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13541 ;;      Totals:         5       0       0       0       0       0       0       0       0
 13542 ;;Total ram usage:        5 bytes
 13543 ;; Hardware stack levels used:    1
 13544 ;; Hardware stack levels required when called:    2
 13545 ;; This function calls:
 13546 ;;		i2_Lcd_Cmd
 13547 ;; This function is called by:
 13548 ;;		_TMRO_USART
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552                           	psect	text63
 13553  002F98                     __ptext63:
 13554                           	opt stack 0
 13555  002F98                     i2_Lcd_Set_Cursor:
 13556                           	opt stack 21
 13557                           
 13558                           ;incstack = 0
 13559                           ;i2Lcd_Set_Cursor@a stored from wreg
 13560  002F98  6E05               	movwf	i2Lcd_Set_Cursor@a,c
 13561                           
 13562                           ;lcd.c: 41: char temp, z, y;
 13563                           ;lcd.c: 42: if (a == 1) {
 13564  002F9A  0405               	decf	i2Lcd_Set_Cursor@a,w,c
 13565  002F9C  A4D8               	btfss	status,2,c
 13566  002F9E  D010               	goto	i2l4668
 13567                           
 13568                           ;lcd.c: 43: temp = 0x80 + b - 1;
 13569  002FA0  5004               	movf	i2Lcd_Set_Cursor@b,w,c
 13570  002FA2  0F7F               	addlw	127
 13571  002FA4  6E08               	movwf	i2Lcd_Set_Cursor@temp,c
 13572                           
 13573                           ;lcd.c: 44: z = temp >> 4;
 13574  002FA6  3808               	swapf	i2Lcd_Set_Cursor@temp,w,c
 13575  002FA8  0B0F               	andlw	15
 13576  002FAA  6E06               	movwf	i2Lcd_Set_Cursor@z,c
 13577                           
 13578                           ;lcd.c: 45: y = temp & 0x0F;
 13579  002FAC  5008               	movf	i2Lcd_Set_Cursor@temp,w,c
 13580  002FAE  0B0F               	andlw	15
 13581  002FB0  6E07               	movwf	i2Lcd_Set_Cursor@y,c
 13582                           
 13583                           ;lcd.c: 46: Lcd_Cmd(z);
 13584  002FB2  5006               	movf	i2Lcd_Set_Cursor@z,w,c
 13585  002FB4  EC22  F01A         	call	i2_Lcd_Cmd
 13586                           
 13587                           ;lcd.c: 47: Lcd_Cmd(y);
 13588  002FB8  5007               	movf	i2Lcd_Set_Cursor@y,w,c
 13589  002FBA  EC22  F01A         	call	i2_Lcd_Cmd
 13590                           
 13591                           ;lcd.c: 48: } else if (a == 2) {
 13592  002FBE  D013               	goto	i2l273
 13593  002FC0                     i2l4668:
 13594  002FC0  5005               	movf	i2Lcd_Set_Cursor@a,w,c
 13595  002FC2  0A02               	xorlw	2
 13596  002FC4  A4D8               	btfss	status,2,c
 13597  002FC6  D00F               	goto	i2l273
 13598                           
 13599                           ;lcd.c: 49: temp = 0xC0 + b - 1;
 13600  002FC8  5004               	movf	i2Lcd_Set_Cursor@b,w,c
 13601  002FCA  0FBF               	addlw	191
 13602  002FCC  6E08               	movwf	i2Lcd_Set_Cursor@temp,c
 13603                           
 13604                           ;lcd.c: 50: z = temp >> 4;
 13605  002FCE  3808               	swapf	i2Lcd_Set_Cursor@temp,w,c
 13606  002FD0  0B0F               	andlw	15
 13607  002FD2  6E06               	movwf	i2Lcd_Set_Cursor@z,c
 13608                           
 13609                           ;lcd.c: 51: y = temp & 0x0F;
 13610  002FD4  5008               	movf	i2Lcd_Set_Cursor@temp,w,c
 13611  002FD6  0B0F               	andlw	15
 13612  002FD8  6E07               	movwf	i2Lcd_Set_Cursor@y,c
 13613                           
 13614                           ;lcd.c: 52: Lcd_Cmd(z);
 13615  002FDA  5006               	movf	i2Lcd_Set_Cursor@z,w,c
 13616  002FDC  EC22  F01A         	call	i2_Lcd_Cmd
 13617                           
 13618                           ;lcd.c: 53: Lcd_Cmd(y);
 13619  002FE0  5007               	movf	i2Lcd_Set_Cursor@y,w,c
 13620  002FE2  EC22  F01A         	call	i2_Lcd_Cmd
 13621  002FE6                     i2l273:
 13622  002FE6  0012               	return	
 13623  002FE8                     __end_ofi2_Lcd_Set_Cursor:
 13624                           	opt stack 0
 13625                           pclatu	equ	0xFFB
 13626                           pclath	equ	0xFFA
 13627                           tblptru	equ	0xFF8
 13628                           tblptrh	equ	0xFF7
 13629                           tblptrl	equ	0xFF6
 13630                           tablat	equ	0xFF5
 13631                           prodh	equ	0xFF4
 13632                           prodl	equ	0xFF3
 13633                           intcon	equ	0xFF2
 13634                           intcon2	equ	0xFF1
 13635                           intcon3	equ	0xFF0
 13636                           indf0	equ	0xFEF
 13637                           postinc0	equ	0xFEE
 13638                           fsr0h	equ	0xFEA
 13639                           fsr0l	equ	0xFE9
 13640                           wreg	equ	0xFE8
 13641                           postinc1	equ	0xFE6
 13642                           postdec1	equ	0xFE5
 13643                           fsr1h	equ	0xFE2
 13644                           fsr1l	equ	0xFE1
 13645                           indf2	equ	0xFDF
 13646                           postinc2	equ	0xFDE
 13647                           postdec2	equ	0xFDD
 13648                           fsr2h	equ	0xFDA
 13649                           fsr2l	equ	0xFD9
 13650                           status	equ	0xFD8
 13651                           
 13652 ;; *************** function i2_Lcd_Clear *****************
 13653 ;; Defined at:
 13654 ;;		line 35 in file "lcd.c"
 13655 ;; Parameters:    Size  Location     Type
 13656 ;;		None
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;		None
 13659 ;; Return value:  Size  Location     Type
 13660 ;;		None               void
 13661 ;; Registers used:
 13662 ;;		wreg, status,2, cstack
 13663 ;; Tracked objects:
 13664 ;;		On entry : 0/0
 13665 ;;		On exit  : 0/0
 13666 ;;		Unchanged: 0/0
 13667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13668 ;;      Params:         0       0       0       0       0       0       0       0       0
 13669 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13670 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13671 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13672 ;;Total ram usage:        0 bytes
 13673 ;; Hardware stack levels used:    1
 13674 ;; Hardware stack levels required when called:    2
 13675 ;; This function calls:
 13676 ;;		i2_Lcd_Cmd
 13677 ;; This function is called by:
 13678 ;;		_TMRO_USART
 13679 ;; This function uses a non-reentrant model
 13680 ;;
 13681                           
 13682                           	psect	text64
 13683  003526                     __ptext64:
 13684                           	opt stack 0
 13685  003526                     i2_Lcd_Clear:
 13686                           	opt stack 21
 13687                           
 13688                           ;lcd.c: 36: Lcd_Cmd(0);
 13689                           
 13690                           ;incstack = 0
 13691  003526  0E00               	movlw	0
 13692  003528  EC22  F01A         	call	i2_Lcd_Cmd
 13693                           
 13694                           ;lcd.c: 37: Lcd_Cmd(1);
 13695  00352C  0E01               	movlw	1
 13696  00352E  EC22  F01A         	call	i2_Lcd_Cmd
 13697  003532  0012               	return	
 13698  003534                     __end_ofi2_Lcd_Clear:
 13699                           	opt stack 0
 13700                           pclatu	equ	0xFFB
 13701                           pclath	equ	0xFFA
 13702                           tblptru	equ	0xFF8
 13703                           tblptrh	equ	0xFF7
 13704                           tblptrl	equ	0xFF6
 13705                           tablat	equ	0xFF5
 13706                           prodh	equ	0xFF4
 13707                           prodl	equ	0xFF3
 13708                           intcon	equ	0xFF2
 13709                           intcon2	equ	0xFF1
 13710                           intcon3	equ	0xFF0
 13711                           indf0	equ	0xFEF
 13712                           postinc0	equ	0xFEE
 13713                           fsr0h	equ	0xFEA
 13714                           fsr0l	equ	0xFE9
 13715                           wreg	equ	0xFE8
 13716                           postinc1	equ	0xFE6
 13717                           postdec1	equ	0xFE5
 13718                           fsr1h	equ	0xFE2
 13719                           fsr1l	equ	0xFE1
 13720                           indf2	equ	0xFDF
 13721                           postinc2	equ	0xFDE
 13722                           postdec2	equ	0xFDD
 13723                           fsr2h	equ	0xFDA
 13724                           fsr2l	equ	0xFD9
 13725                           status	equ	0xFD8
 13726                           
 13727 ;; *************** function i2_Lcd_Cmd *****************
 13728 ;; Defined at:
 13729 ;;		line 27 in file "lcd.c"
 13730 ;; Parameters:    Size  Location     Type
 13731 ;;  a               1    wreg     unsigned char 
 13732 ;; Auto vars:     Size  Location     Type
 13733 ;;  a               1    2[COMRAM] unsigned char 
 13734 ;; Return value:  Size  Location     Type
 13735 ;;		None               void
 13736 ;; Registers used:
 13737 ;;		wreg, status,2, cstack
 13738 ;; Tracked objects:
 13739 ;;		On entry : 0/0
 13740 ;;		On exit  : 0/0
 13741 ;;		Unchanged: 0/0
 13742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13743 ;;      Params:         0       0       0       0       0       0       0       0       0
 13744 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13745 ;;      Temps:          1       0       0       0       0       0       0       0       0
 13746 ;;      Totals:         2       0       0       0       0       0       0       0       0
 13747 ;;Total ram usage:        2 bytes
 13748 ;; Hardware stack levels used:    1
 13749 ;; Hardware stack levels required when called:    1
 13750 ;; This function calls:
 13751 ;;		i2_Lcd_Port
 13752 ;; This function is called by:
 13753 ;;		i2_Lcd_Clear
 13754 ;;		i2_Lcd_Set_Cursor
 13755 ;; This function uses a non-reentrant model
 13756 ;;
 13757                           
 13758                           	psect	text65
 13759  003444                     __ptext65:
 13760                           	opt stack 0
 13761  003444                     i2_Lcd_Cmd:
 13762                           	opt stack 21
 13763                           
 13764                           ;incstack = 0
 13765                           ;i2Lcd_Cmd@a stored from wreg
 13766  003444  6E03               	movwf	i2Lcd_Cmd@a,c
 13767                           
 13768                           ;lcd.c: 28: PORTEbits.RE0 = 0;
 13769  003446  9084               	bcf	3972,0,c	;volatile
 13770                           
 13771                           ;lcd.c: 29: Lcd_Port(a);
 13772  003448  5003               	movf	i2Lcd_Cmd@a,w,c
 13773  00344A  ECC1  F019         	call	i2_Lcd_Port
 13774                           
 13775                           ;lcd.c: 30: PORTEbits.RE2 = 1;
 13776  00344E  8484               	bsf	3972,2,c	;volatile
 13777                           
 13778                           ;lcd.c: 31: _delay((unsigned long)((4)*(4000000/4000.0)));
 13779  003450  0E06               	movlw	6
 13780  003452  6E02               	movwf	??i2_Lcd_Cmd& (0+255),c
 13781  003454  0E30               	movlw	48
 13782  003456                     i2u537_47:
 13783  003456  2EE8               	decfsz	wreg,f,c
 13784  003458  D7FE               	goto	i2u537_47
 13785  00345A  2E02               	decfsz	??i2_Lcd_Cmd& (0+255),f,c
 13786  00345C  D7FC               	goto	i2u537_47
 13787  00345E  D000               	nop2	
 13788                           
 13789                           ;lcd.c: 32: PORTEbits.RE2 = 0;
 13790  003460  9484               	bcf	3972,2,c	;volatile
 13791  003462  0012               	return	
 13792  003464                     __end_ofi2_Lcd_Cmd:
 13793                           	opt stack 0
 13794                           pclatu	equ	0xFFB
 13795                           pclath	equ	0xFFA
 13796                           tblptru	equ	0xFF8
 13797                           tblptrh	equ	0xFF7
 13798                           tblptrl	equ	0xFF6
 13799                           tablat	equ	0xFF5
 13800                           prodh	equ	0xFF4
 13801                           prodl	equ	0xFF3
 13802                           intcon	equ	0xFF2
 13803                           intcon2	equ	0xFF1
 13804                           intcon3	equ	0xFF0
 13805                           indf0	equ	0xFEF
 13806                           postinc0	equ	0xFEE
 13807                           fsr0h	equ	0xFEA
 13808                           fsr0l	equ	0xFE9
 13809                           wreg	equ	0xFE8
 13810                           postinc1	equ	0xFE6
 13811                           postdec1	equ	0xFE5
 13812                           fsr1h	equ	0xFE2
 13813                           fsr1l	equ	0xFE1
 13814                           indf2	equ	0xFDF
 13815                           postinc2	equ	0xFDE
 13816                           postdec2	equ	0xFDD
 13817                           fsr2h	equ	0xFDA
 13818                           fsr2l	equ	0xFD9
 13819                           status	equ	0xFD8
 13820                           
 13821 ;; *************** function i2_Lcd_Port *****************
 13822 ;; Defined at:
 13823 ;;		line 6 in file "lcd.c"
 13824 ;; Parameters:    Size  Location     Type
 13825 ;;  a               1    wreg     unsigned char 
 13826 ;; Auto vars:     Size  Location     Type
 13827 ;;  a               1    0[COMRAM] unsigned char 
 13828 ;; Return value:  Size  Location     Type
 13829 ;;		None               void
 13830 ;; Registers used:
 13831 ;;		wreg
 13832 ;; Tracked objects:
 13833 ;;		On entry : 0/0
 13834 ;;		On exit  : 0/0
 13835 ;;		Unchanged: 0/0
 13836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13837 ;;      Params:         0       0       0       0       0       0       0       0       0
 13838 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13839 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13840 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13841 ;;Total ram usage:        1 bytes
 13842 ;; Hardware stack levels used:    1
 13843 ;; This function calls:
 13844 ;;		Nothing
 13845 ;; This function is called by:
 13846 ;;		i2_Lcd_Cmd
 13847 ;;		i2_Lcd_Write_Char
 13848 ;; This function uses a non-reentrant model
 13849 ;;
 13850                           
 13851                           	psect	text66
 13852  003382                     __ptext66:
 13853                           	opt stack 0
 13854  003382                     i2_Lcd_Port:
 13855                           	opt stack 21
 13856                           
 13857                           ;incstack = 0
 13858                           ;i2Lcd_Port@a stored from wreg
 13859  003382  6E01               	movwf	i2Lcd_Port@a,c
 13860                           
 13861                           ;lcd.c: 7: if (a & 1)
 13862  003384  A001               	btfss	i2Lcd_Port@a,0,c
 13863  003386  D002               	goto	i2l253
 13864                           
 13865                           ;lcd.c: 8: PORTDbits.RD4 = 1;
 13866  003388  8883               	bsf	3971,4,c	;volatile
 13867  00338A  D001               	goto	i2l4022
 13868  00338C                     i2l253:
 13869                           
 13870                           ;lcd.c: 9: else
 13871                           ;lcd.c: 10: PORTDbits.RD4 = 0;
 13872  00338C  9883               	bcf	3971,4,c	;volatile
 13873  00338E                     i2l4022:
 13874                           
 13875                           ;lcd.c: 12: if (a & 2)
 13876  00338E  A201               	btfss	i2Lcd_Port@a,1,c
 13877  003390  D002               	goto	i2l255
 13878                           
 13879                           ;lcd.c: 13: PORTDbits.RD5 = 1;
 13880  003392  8A83               	bsf	3971,5,c	;volatile
 13881  003394  D001               	goto	i2l4026
 13882  003396                     i2l255:
 13883                           
 13884                           ;lcd.c: 14: else
 13885                           ;lcd.c: 15: PORTDbits.RD5 = 0;
 13886  003396  9A83               	bcf	3971,5,c	;volatile
 13887  003398                     i2l4026:
 13888                           
 13889                           ;lcd.c: 17: if (a & 4)
 13890  003398  A401               	btfss	i2Lcd_Port@a,2,c
 13891  00339A  D002               	goto	i2l257
 13892                           
 13893                           ;lcd.c: 18: PORTDbits.RD6 = 1;
 13894  00339C  8C83               	bsf	3971,6,c	;volatile
 13895  00339E  D001               	goto	i2l4030
 13896  0033A0                     i2l257:
 13897                           
 13898                           ;lcd.c: 19: else
 13899                           ;lcd.c: 20: PORTDbits.RD6 = 0;
 13900  0033A0  9C83               	bcf	3971,6,c	;volatile
 13901  0033A2                     i2l4030:
 13902                           
 13903                           ;lcd.c: 22: if (a & 8)
 13904  0033A2  A601               	btfss	i2Lcd_Port@a,3,c
 13905  0033A4  D002               	goto	i2l259
 13906                           
 13907                           ;lcd.c: 23: PORTDbits.RD7 = 1;
 13908  0033A6  8E83               	bsf	3971,7,c	;volatile
 13909  0033A8  D001               	goto	i2l261
 13910  0033AA                     i2l259:
 13911                           
 13912                           ;lcd.c: 24: else
 13913                           ;lcd.c: 25: PORTDbits.RD7 = 0;
 13914  0033AA  9E83               	bcf	3971,7,c	;volatile
 13915  0033AC                     i2l261:
 13916  0033AC  0012               	return	
 13917  0033AE                     __end_ofi2_Lcd_Port:
 13918                           	opt stack 0
 13919                           pclatu	equ	0xFFB
 13920                           pclath	equ	0xFFA
 13921                           tblptru	equ	0xFF8
 13922                           tblptrh	equ	0xFF7
 13923                           tblptrl	equ	0xFF6
 13924                           tablat	equ	0xFF5
 13925                           prodh	equ	0xFF4
 13926                           prodl	equ	0xFF3
 13927                           intcon	equ	0xFF2
 13928                           intcon2	equ	0xFF1
 13929                           intcon3	equ	0xFF0
 13930                           indf0	equ	0xFEF
 13931                           postinc0	equ	0xFEE
 13932                           fsr0h	equ	0xFEA
 13933                           fsr0l	equ	0xFE9
 13934                           wreg	equ	0xFE8
 13935                           postinc1	equ	0xFE6
 13936                           postdec1	equ	0xFE5
 13937                           fsr1h	equ	0xFE2
 13938                           fsr1l	equ	0xFE1
 13939                           indf2	equ	0xFDF
 13940                           postinc2	equ	0xFDE
 13941                           postdec2	equ	0xFDD
 13942                           fsr2h	equ	0xFDA
 13943                           fsr2l	equ	0xFD9
 13944                           status	equ	0xFD8
 13945                           
 13946 ;; *************** function _ReadUSART *****************
 13947 ;; Defined at:
 13948 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
 13949 ;; Parameters:    Size  Location     Type
 13950 ;;		None
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;  data            1    0[COMRAM] unsigned char 
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  1    wreg      unsigned char 
 13955 ;; Registers used:
 13956 ;;		wreg, status,2, status,0
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/0
 13959 ;;		On exit  : 0/0
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13962 ;;      Params:         0       0       0       0       0       0       0       0       0
 13963 ;;      Locals:         1       0       0       0       0       0       0       0       0
 13964 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13965 ;;      Totals:         1       0       0       0       0       0       0       0       0
 13966 ;;Total ram usage:        1 bytes
 13967 ;; Hardware stack levels used:    1
 13968 ;; This function calls:
 13969 ;;		Nothing
 13970 ;; This function is called by:
 13971 ;;		_TMRO_USART
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           	psect	text67
 13976  003464                     __ptext67:
 13977                           	opt stack 0
 13978  003464                     _ReadUSART:
 13979                           	opt stack 23
 13980                           
 13981                           ;incstack = 0
 13982  003464  0EF2               	movlw	242
 13983  003466  1654               	andwf	_USART_Status,f,c
 13984  003468  ACAB               	btfss	4011,6,c	;volatile
 13985  00346A  D003               	goto	i2l643
 13986  00346C  9054               	bcf	_USART_Status,0,c
 13987  00346E  B0AB               	btfsc	4011,0,c	;volatile
 13988  003470  8054               	bsf	_USART_Status,0,c
 13989  003472                     i2l643:
 13990  003472  B4AB               	btfsc	4011,2,c	;volatile
 13991  003474  8454               	bsf	_USART_Status,2,c
 13992  003476  B2AB               	btfsc	4011,1,c	;volatile
 13993  003478  8654               	bsf	_USART_Status,3,c
 13994  00347A  CFAE F001          	movff	4014,ReadUSART@data	;volatile
 13995  00347E  5001               	movf	ReadUSART@data,w,c
 13996  003480  0012               	return	
 13997  003482                     __end_of_ReadUSART:
 13998                           	opt stack 0
 13999                           pclatu	equ	0xFFB
 14000                           pclath	equ	0xFFA
 14001                           tblptru	equ	0xFF8
 14002                           tblptrh	equ	0xFF7
 14003                           tblptrl	equ	0xFF6
 14004                           tablat	equ	0xFF5
 14005                           prodh	equ	0xFF4
 14006                           prodl	equ	0xFF3
 14007                           intcon	equ	0xFF2
 14008                           intcon2	equ	0xFF1
 14009                           intcon3	equ	0xFF0
 14010                           indf0	equ	0xFEF
 14011                           postinc0	equ	0xFEE
 14012                           fsr0h	equ	0xFEA
 14013                           fsr0l	equ	0xFE9
 14014                           wreg	equ	0xFE8
 14015                           postinc1	equ	0xFE6
 14016                           postdec1	equ	0xFE5
 14017                           fsr1h	equ	0xFE2
 14018                           fsr1l	equ	0xFE1
 14019                           indf2	equ	0xFDF
 14020                           postinc2	equ	0xFDE
 14021                           postdec2	equ	0xFDD
 14022                           fsr2h	equ	0xFDA
 14023                           fsr2l	equ	0xFD9
 14024                           status	equ	0xFD8
 14025                           pclatu	equ	0xFFB
 14026                           pclath	equ	0xFFA
 14027                           tblptru	equ	0xFF8
 14028                           tblptrh	equ	0xFF7
 14029                           tblptrl	equ	0xFF6
 14030                           tablat	equ	0xFF5
 14031                           prodh	equ	0xFF4
 14032                           prodl	equ	0xFF3
 14033                           intcon	equ	0xFF2
 14034                           intcon2	equ	0xFF1
 14035                           intcon3	equ	0xFF0
 14036                           indf0	equ	0xFEF
 14037                           postinc0	equ	0xFEE
 14038                           fsr0h	equ	0xFEA
 14039                           fsr0l	equ	0xFE9
 14040                           wreg	equ	0xFE8
 14041                           postinc1	equ	0xFE6
 14042                           postdec1	equ	0xFE5
 14043                           fsr1h	equ	0xFE2
 14044                           fsr1l	equ	0xFE1
 14045                           indf2	equ	0xFDF
 14046                           postinc2	equ	0xFDE
 14047                           postdec2	equ	0xFDD
 14048                           fsr2h	equ	0xFDA
 14049                           fsr2l	equ	0xFD9
 14050                           status	equ	0xFD8
 14051                           
 14052                           	psect	rparam
 14053  0000                     pclatu	equ	0xFFB
 14054                           pclath	equ	0xFFA
 14055                           tblptru	equ	0xFF8
 14056                           tblptrh	equ	0xFF7
 14057                           tblptrl	equ	0xFF6
 14058                           tablat	equ	0xFF5
 14059                           prodh	equ	0xFF4
 14060                           prodl	equ	0xFF3
 14061                           intcon	equ	0xFF2
 14062                           intcon2	equ	0xFF1
 14063                           intcon3	equ	0xFF0
 14064                           indf0	equ	0xFEF
 14065                           postinc0	equ	0xFEE
 14066                           fsr0h	equ	0xFEA
 14067                           fsr0l	equ	0xFE9
 14068                           wreg	equ	0xFE8
 14069                           postinc1	equ	0xFE6
 14070                           postdec1	equ	0xFE5
 14071                           fsr1h	equ	0xFE2
 14072                           fsr1l	equ	0xFE1
 14073                           indf2	equ	0xFDF
 14074                           postinc2	equ	0xFDE
 14075                           postdec2	equ	0xFDD
 14076                           fsr2h	equ	0xFDA
 14077                           fsr2l	equ	0xFD9
 14078                           status	equ	0xFD8


Data Sizes:
    Strings     236
    Constant    118
    Data        20
    BSS         144
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     65      95
    BANK0           160    137     143
    BANK1           256      0     128
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_18(CODE[13]), STR_17(CODE[11]), STR_5(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> Lcd_Write_Integer@s(BANK0[20]), Lcd_Write_Float@s(COMRAM[20]), putcBluetoothInt@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1724$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_24(CODE[11]), STR_23(CODE[7]), STR_22(CODE[18]), STR_21(CODE[17]), 
		 -> STR_20(CODE[17]), STR_19(CODE[17]), Lcd_Write_Integer@s(BANK0[20]), Lcd_Write_Float@s(COMRAM[20]), 
		 -> STR_16(CODE[8]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[16]), STR_10(CODE[7]), 

    putSTRINGU1@dato	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[12]), 
		 -> BT_Init@nameBT(BANK0[18]), 

    putcBluetoothString@a	PTR unsigned char  size(2) Largest target is 2
		 -> STR_15(CODE[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> comando(BANK1[20]), 

    SendBlueToothCommand@command	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[12]), 
		 -> BT_Init@nameBT(BANK0[18]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMRO_USART in COMRAM

    _TMRO_USART->i2_PWM_DutyCycle1
    _TMRO_USART->i2_PWM_DutyCycle2
    i2_PWM_DutyCycle2->i2___fttol
    i2_PWM_DutyCycle1->i2___fttol
    i2___lbtoft->i2___ftpack
    i2___fttol->i2___ftmul
    i2___ftmul->i2___lbtoft
    i2_Lcd_Write_String->i2_Lcd_Write_Char
    i2_Lcd_Write_Char->i2_Lcd_Port
    i2_Lcd_Set_Cursor->i2_Lcd_Cmd
    i2_Lcd_Clear->i2_Lcd_Cmd
    i2_Lcd_Cmd->i2_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Comando_Tablet
    _Lcd_Init->_Lcd_Cmd
    _Inicializa_Driveby->_BT_Init
    _PWM_init2->_OpenPWM2
    _PWM_init1->_OpenPWM1
    _BT_Init->_SendBlueToothCommand
    _SendBlueToothCommand->_putSTRINGU1
    _putSTRINGU1->_putcTxU1
    _putcTxU1->_WriteUSART
    _Pause_seg->_Pause_ms
    _Comando_Tablet->_putcBluetoothInt
    _putcBluetoothString->_UART1_Init
    _putcBluetoothInt->_sprintf
    _UART1_Init->_OpenUSART
    _PWM_DutyCycle2->___fttol
    _PWM_DutyCycle1->___fttol
    ___lbtoft->___ftpack
    _Lcd_Write_Integer->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TMRO_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMRO_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMRO_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMRO_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMRO_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMRO_USART in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMRO_USART in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMRO_USART in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  113815
                     _Comando_Tablet
                 _Inicializa_Driveby
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _UART1_Init
                     _clrBufferUSART
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Inicializa_Driveby                                   3     3      0    4703
                                             32 BANK0      3     3      0
                            _BT_Init
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _PWM_init1
                          _PWM_init2
                          _Pause_seg
                     _clrBufferUSART
            _external_interrupt_init
 ---------------------------------------------------------------------------------
 (2) _external_interrupt_init                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_init2                                            1     1      0      68
                                              3 BANK0      1     1      0
                           _OpenPWM2
 ---------------------------------------------------------------------------------
 (3) _OpenPWM2                                             4     4      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _PWM_init1                                            1     1      0      44
                                              1 BANK0      1     1      0
                           _OpenPWM1
 ---------------------------------------------------------------------------------
 (3) _OpenPWM1                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BT_Init                                             18    18      0    1720
                                             14 BANK0     18    18      0
                          _Pause_seg
               _SendBlueToothCommand
                         _UART1_Init
 ---------------------------------------------------------------------------------
 (3) _SendBlueToothCommand                                 4     0      4    1039
                                             10 BANK0      4     0      4
                        _putSTRINGU1
 ---------------------------------------------------------------------------------
 (4) _putSTRINGU1                                          8     4      4     355
                                              2 BANK0      8     4      4
                           _putcTxU1
 ---------------------------------------------------------------------------------
 (5) _putcTxU1                                             1     1      0      44
                                              1 BANK0      1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _Pause_seg                                            2     2      0     350
                                              5 BANK0      2     2      0
                           _Pause_ms
 ---------------------------------------------------------------------------------
 (3) _Pause_ms                                             5     3      2     303
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Comando_Tablet                                       2     2      0  106134
                                            135 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                  _Lcd_Write_Integer
                   _Lcd_Write_String
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                     _clrBufferUSART
                      _getCNY70Value
                   _putcBluetoothInt
                _putcBluetoothString
 ---------------------------------------------------------------------------------
 (2) _putcBluetoothString                                  6     4      2     482
                                              7 BANK0      6     4      2
                         _UART1_Init
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _putcBluetoothInt                                    24    22      2   43823
                                            111 BANK0     24    22      2
                         _UART1_Init
                         _WriteUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _WriteUSART                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           1     1      0     306
                                              6 BANK0      1     1      0
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     284
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _getCNY70Value                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _clrBufferUSART                                       2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle2                                       9     9      0    7346
                                             57 BANK0      9     9      0
                          _SetDCPWM2
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM2                                            6     4      2     133
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _PWM_DutyCycle1                                       9     9      0    7346
                                             57 BANK0      9     9      0
                          _SetDCPWM1
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             4     1      3    2070
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _SetDCPWM1                                            6     4      2     133
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Integer                                   22    20      2   44617
                                            111 BANK0     22    20      2
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             54    47      7   43275
                                             63 BANK0     48    41      7
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               10     7      3   10248
                                             35 BANK0      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _fround                                              13    10      3   10050
                                             35 BANK0     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2207
                                             14 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    4524
                                             20 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1580
                                              6 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     431
                                              0 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          16    10      6     574
                                              0 BANK0     16    10      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    2181
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     671
                                             13 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     546
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     572
                                             42 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    3521
                                             57 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    3246
                                             45 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2048
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     109
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6     520
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2    1060
                                              4 BANK0      6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1    1236
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _TMRO_USART                                          14    14      0    4241
                                             51 COMRAM    14    14      0
                          _ReadUSART
                        i2_Lcd_Clear
                   i2_Lcd_Set_Cursor
                 i2_Lcd_Write_String
                   i2_PWM_DutyCycle1
                   i2_PWM_DutyCycle2
 ---------------------------------------------------------------------------------
 (8) i2_PWM_DutyCycle2                                     9     9      0    1626
                                             42 COMRAM     9     9      0
                        i2_SetDCPWM2
                          i2___ftmul
                          i2___fttol
                         i2___lbtoft
 ---------------------------------------------------------------------------------
 (9) i2_SetDCPWM2                                          6     4      2      93
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) i2_PWM_DutyCycle1                                     9     9      0    1626
                                             42 COMRAM     9     9      0
                        i2_SetDCPWM1
                          i2___ftmul
                          i2___fttol
                         i2___lbtoft
 ---------------------------------------------------------------------------------
 (9) i2___lbtoft                                           4     1      3     387
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___fttol                                           15    11      4     304
                                             27 COMRAM    15    11      4
                          i2___ftmul (ARG)
                         i2___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___ftmul                                           15     9      6     795
                                             12 COMRAM    15     9      6
                         i2___ftpack
                         i2___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftpack                                          8     3      5     365
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (9) i2_SetDCPWM1                                          6     4      2      93
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) i2_Lcd_Write_String                                   6     4      2     372
                                              4 COMRAM     6     4      2
                   i2_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Write_Char                                     3     3      0     178
                                              1 COMRAM     3     3      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i2_Lcd_Set_Cursor                                     5     4      1     484
                                              3 COMRAM     5     4      1
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (8) i2_Lcd_Clear                                          0     0      0     110
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (9) i2_Lcd_Cmd                                            2     2      0     110
                                              1 COMRAM     2     2      0
                         i2_Lcd_Port
 ---------------------------------------------------------------------------------
 (10) i2_Lcd_Port                                          1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comando_Tablet
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Integer
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lbtoft
         ___ftpack
     _clrBufferUSART
     _getCNY70Value
     _putcBluetoothInt
       _UART1_Init
         _OpenUSART
       _WriteUSART
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftpack
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _putcBluetoothString
       _UART1_Init
         _OpenUSART
       _WriteUSART
   _Inicializa_Driveby
     _BT_Init
       _Pause_seg
         _Pause_ms
       _SendBlueToothCommand
         _putSTRINGU1
           _putcTxU1
             _WriteUSART
       _UART1_Init
         _OpenUSART
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _PWM_init1
       _OpenPWM1
     _PWM_init2
       _OpenPWM2
     _Pause_seg
       _Pause_ms
     _clrBufferUSART
     _external_interrupt_init
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _UART1_Init
     _OpenUSART
   _clrBufferUSART

 _TMRO_USART (ROOT)
   _ReadUSART
   i2_Lcd_Clear
     i2_Lcd_Cmd
       i2_Lcd_Port
   i2_Lcd_Set_Cursor
     i2_Lcd_Cmd
       i2_Lcd_Port
   i2_Lcd_Write_String
     i2_Lcd_Write_Char
       i2_Lcd_Port
   i2_PWM_DutyCycle1
     i2_SetDCPWM1
     i2___ftmul
       i2___ftpack
       i2___lbtoft (ARG)
         i2___ftpack
     i2___fttol
       i2___ftmul (ARG)
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft (ARG)
         i2___ftpack
     i2___lbtoft
       i2___ftpack
   i2_PWM_DutyCycle2
     i2_SetDCPWM2
     i2___ftmul
       i2___ftpack
       i2___lbtoft (ARG)
         i2___ftpack
     i2___fttol
       i2___ftmul (ARG)
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft (ARG)
         i2___ftpack
     i2___lbtoft
       i2___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      80       7       50.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     89      8F       5       89.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     41      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16E      20        0.0%
DATA                 0      0     16E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Sep 13 11:58:02 2017

                               _i 0048                                 _j 0058  
         __size_of_PWM_DutyCycle1 007C           __size_of_PWM_DutyCycle2 007C  
                              l54 318A                                l59 29D2  
                              l68 2A6E                     _InicioComando 0050  
                    ___awdiv@sign 006B               ___wmul@multiplicand 0070  
                     __CFG_BORV$3 000000                        i2___ftpack 27AC  
                      i2___lbtoft 3420                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                      __CFG_CP2$OFF 000000  
                    __CFG_CP3$OFF 000000                      ___ftadd@exp1 0098  
                    ___ftadd@exp2 0097                      ___ftadd@sign 0096  
       __size_ofi2_Lcd_Write_Char 0038                               l208 30A8  
                             l261 331C                               l253 32F6  
                             l229 3512                               l255 3302  
                             l257 330E                               l273 2DFA  
                             l194 1B78                               l259 331A  
                             l451 24D4                               l195 1BC4  
                             l461 2538                               l453 24EE  
                             l630 2AE6                               l463 2552  
                             l455 24FE                               l631 2AF2  
                             l448 24C4                               l632 2AF4  
                             l457 250E                               l449 2578  
                             l625 2ACA                               l538 05C4  
                             l634 2B1C                               l491 0F14  
                             l459 2528                               l629 2AE4  
                             l591 3130                               l592 313C  
                             l593 313E                               l943 1686  
                             l952 1676                               l984 1EB2  
                    __CFG_CPB$OFF 000000                               _PR2 000FCB  
                    __CFG_CPD$OFF 000000                      __CFG_BOR$OFF 000000  
                             _cad 0055                      ___awmod@sign 0065  
                             prod 000FF3                               wreg 000FE8  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            l1021 1296                              l1022 14A8  
                            l1025 12D0                              l1105 1DA8  
                            l1027 12F8                              l1036 13E2  
                            l1045 140C                              l1061 181C  
                            l1070 180C                              l1063 1732  
                            l1144 222C                              l1064 177E  
                            l1154 28E6                              l1085 1B02  
                            l3110 1E16                              l3102 1DC2  
                            l1079 2310                              l1095 3374  
                            l3122 1E8C                              l3114 1E3C  
                            l3106 1DD6                              l3116 1E68  
                            l3108 1DEA                              l3212 1436  
                            l3204 13C4                              l3142 3304  
                            l3118 1E7C                              l3222 1484  
                            l3206 13D8                              l3310 214C  
                            l4006 312A                              l3128 1EA6  
                            l3232 19C8                              l3146 3310  
                            l3138 32F8                              l3170 12DE  
                            l3314 2160                              l3306 213E  
                            l3330 25CA                              l4114 29A4  
                            l3164 12A4                              l3252 1A50  
                            l3500 0DE6                              l4132 2A54  
                            l3350 2634                              l3342 2612  
                            l3334 25DC                              l3326 25A8  
                            l3262 1A9A                              l3238 1A02  
                            l4118 29DC                              l3192 1364  
                            l3176 12EE                              l3336 25E8  
                            l3256 1A6E                              l4320 256C  
                            l3096 34EE                              l4136 2A78  
                            l3194 1378                              l3186 1330  
                            l3522 16D8                              l3282 20B6  
                            l3338 25EE                              l3346 2620  
                            l3266 1AB8                              l3506 0EE4  
                            l3362 2696                              l4156 2DC2  
                            l3196 1384                              l3620 1670  
                            l3612 1636                              l3516 16B0  
                            l3460 10CA                              l3372 26EE  
                            l3356 264C                              l3198 1390  
                            l3702 2198                              l3550 17B0  
                            l3294 20FC                              l3390 2ABA  
                            l3366 26BC                              l3632 2284  
                            l3704 21B0                              l3608 161A  
                            l3560 17EE                              l3296 2108  
                            l3288 20DE                              l4600 1C14  
                            l3376 3092                              l3642 230E  
                            l3714 2212                              l3706 21B6  
                            l3730 28CC                              l3722 286A  
                            l3618 1658                              l3570 14E6  
                            l3562 1806                              l3554 17CC  
                            l3298 210E                              l3482 0B46  
                            l4610 1C5A                              l3636 22CA  
                            l3724 2882                              l3468 11D6  
                            l3492 0C48                              l3820 02D4  
                            l3812 0262                              l3804 01F4  
                            l3726 2888                              l3590 1588  
                            l3902 0648                              l3398 2ACC  
                            l4518 1F2E                              l3656 1C88  
                            l3736 2B26                              l3576 1522  
                            l3488 0C38                              l3920 077A  
                            l3912 0752                              l3832 0368  
                            l3816 028E                              l3760 0030  
                            l4608 1C36                              l3752 2F8A  
                            l3674 1D16                              l3738 2B3E  
                            l3914 0760                              l3922 0786  
                            l4570 1B56                              l3692 1D98  
                            l3684 1D54                              l3932 0800  
                            l3844 03DA                              l3828 033C  
                            l3772 0066                              l4564 1B34  
                            l3748 2F46                              l3686 1D6C  
                            l3678 1D32                              l3598 15E4  
                            l3862 0494                              l3774 00A2  
                            l3766 0052                              l4558 1B12  
                            l3688 1D72                              l3960 0954  
                            l3952 0882                              l3848 0442  
                            l3768 0060                              l3970 2906  
                            l3954 0896                              l3946 0852  
                            l3890 05C8                              l3962 0968  
                            l4842 274E                              l3884 0594  
                            l3868 04BE                              l3876 056C  
                            l3788 011C                              l3964 098C  
                            l4836 273C                              l3974 294C  
                            l3878 057A                              l4862 2792  
                            l3898 05F6                              STR_1 7FBC  
                            STR_2 7F68                              STR_3 7FDE  
                            STR_4 7FDE                              STR_5 7FB9  
                            STR_6 7F77                              STR_7 7F85  
                            STR_8 7FA1                              STR_9 7F93  
                i2_PWM_DutyCycle1 2E66                  i2_PWM_DutyCycle2 2DFC  
                 __end_of_BT_Init 24B4                              u3000 19EE  
                            u4005 07D8                              u3150 268A  
                            u3401 16C8                              u4105 303E  
                            u3180 26E0                              u3157 2680  
                            u4070 2942                              u4135 2FF6  
                            _PIE1 000F9D                              u4080 2988  
                            u3601 1C78                              u3450 17D4  
                            u3187 26D6                              u4251 23FC  
                            u3620 1CB4                              u3540 163E  
                            u4077 2938                              u3381 16A0  
                            u3470 14D2                              u4087 297E  
                            u3800 016C                              u2761 1242  
                            u3625 1CAA                              u3650 1D3A  
                            u3490 150E                              u2771 1262  
                            u3475 14C6                              u5307 1F1C  
                            u3805 0160                              u5317 309A  
                            u4630 251E                              u5327 30E6  
                            u3495 1502                              u5337 30FA  
                            u4730 2548                              u5347 3412  
                            u2971 19B8                              u5267 2D1C  
                            u5277 2D34                              u2991 19E0  
                            u5287 2D4C                              u3785 00F6  
                            u5297 1EDC                              u4780 2562  
                            _TMR2 000FCC                 ?_Lcd_Write_String 0064  
                            _main 26FC                      ___ftpack@arg 0060  
                    ___ftpack@exp 0063                              fsr0h 000FEA  
                            fsr1h 000FE2                              indf0 000FEF  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0018                ??_Lcd_Write_String 0066  
                   __CFG_IESO$OFF 000000                        _FinComandB 00EB  
                      _FinComandT 00EC                      _sprintf$1737 00AF  
                 __end_of_Lcd_Cmd 3420                      _sprintf$2762 00AC  
                    i2___lbtoft@c 000C                     __CFG_MCLRE$ON 000000  
                    ___ftmul@cntr 0081                      i2___ftmul@f1 000D  
                    i2___ftmul@f2 0010                      ___ftmul@sign 0082  
                    i2___fttol@f1 001C                       ?_UART1_Init 0001  
                    ___fttol@exp1 0098                      ___fttol@lval 0094  
                      _ComanBFlag 004B           __size_of_clrBufferUSART 0044  
                   __CFG_PLLDIV$1 000000                        _ComanTFlag 004C  
               _Lcd_Write_Integer 318C                    __CFG_CCP2MX$ON 000000  
                           ?_main 0001                   __end_of___awdiv 216A  
                 __end_of___ftadd 14AA                             STR_10 7FF6  
                           STR_11 7F58                             STR_12 7F45  
                           STR_20 7F36                             STR_13 7F56  
                           STR_21 7F47                             STR_14 7FFD  
                           STR_22 7F13                             STR_15 7F75  
                           STR_23 7FEF                             STR_16 7FE7  
                           STR_24 7FC8                             STR_17 7FD3  
                           STR_18 7FAF                             STR_19 7F25  
                 __end_of___awmod 263E                   __end_of___ftneg 3382  
                 __end_of___lldiv 223E                   __end_of___ftmul 1B04  
                 ___awdiv@divisor 0068                   __end_of___llmod 28F8  
                 __end_of___ftsub 3206                   __end_of___fttol 1DAA  
                           _T2CON 000FCA                       _RXComandoTB 0051  
                  __CFG_DEBUG$OFF 000000                ?_Lcd_Write_Integer 00CF  
                           i2l261 33AC                             i2l253 338C  
                           i2l255 3396                             i2l257 33A0  
                           i2l273 2FE6                             i2l259 33AA  
                           i2l380 18B8                             i2l390 1910  
                           i2l392 193C                             i2l643 3472  
                           i2l388 18E4                   ___awdiv@counter 006A  
                           i2l984 2852                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _SPBRG 000FAF  
                           _PORTA 000F80                             _PORTB 000F81  
                           _PORTE 000F84                     __CFG_USBDIV$2 000000  
         __size_of_Lcd_Set_Cursor 0076                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISD 000F95                             _TRISE 000F96  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
         PWM_DutyCycle1@DutyCycle 009D                     __CFG_WRT3$OFF 000000  
                    ___lltoft@exp 0070                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
                  __CFG_EBTR2$OFF 000000                    __CFG_EBTR3$OFF 000000  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                __size_ofi2_Lcd_Cmd 0020  
                  __CFG_EBTRB$OFF 000000                       ?i2_Lcd_Port 0001  
                 __end_of_dpowers 7EC5                             _array 0114  
             ??_Lcd_Write_Integer 00D1                             _scale 099A  
                   ___ftpack@sign 0064                             tablat 000FF5  
         PWM_DutyCycle2@DutyCycle 009D                             status 000FD8  
                 __end_of_sprintf 099A                    __CFG_ICPRT$OFF 000000  
                      Pause_seg@i 0066                        Pause_seg@x 0065  
              __size_ofi2___ftmul 00E4                __size_ofi2___fttol 00D4  
                i2_Lcd_Set_Cursor 2F98                       ?_TMRO_USART 0001  
                __end_of_Lcd_Init 2D86                    WriteUSART@data 0060  
                __end_of_Lcd_Port 331E                __size_of_PWM_init1 0026  
              __size_of_PWM_init2 0026                   __initialization 2ED0  
                    __end_of_main 27AC                     i2___ftmul@exp 0016  
       __end_of_Lcd_Write_Integer 31CA       __size_of_Inicializa_Driveby 00F0  
                     ?i2___ftpack 0001                       ?i2___lbtoft 0009  
               ?_putcBluetoothInt 00CF                  __end_of_OpenPWM1 34E0  
                __end_of_OpenPWM2 3148                            ??_main 00E9  
                   ___fttol@sign1 0093                  __end_of_Pause_ms 30BE  
              __size_of_Lcd_Clear 000E                     __activetblptr 000003  
              ??_putcBluetoothInt 00D1              __size_of__tdiv_to_l_ 0196  
              i2PWM_DutyCycle1@DC 0032                i2PWM_DutyCycle2@DC 0032  
                       ??_BT_Init 006E                  ___llmod@dividend 006D  
                          ?_scale 0083                            _CCPR1L 000FBE  
                          _CCPR2L 000FBB                  ___awdiv@dividend 0066  
                 putSTRINGU1@dato 0062                   putSTRINGU1@cont 0069  
                __end_of___ftpack 1EB4                  __end_of___lbtoft 3350  
                 putSTRINGU1@last 0068                   clrBufferUSART@i 0060  
             __size_of_UART1_Init 0016                  __end_of___lltoft 2B9C  
                          i2l1105 23E4                            i2l1085 2086  
                          i2l4030 33A2                            i2l4022 338E  
                          i2l4026 3398                            i2l4050 2808  
                          i2l4042 27CA                            i2l4052 2826  
                          i2l4044 27D4                            i2l4054 2830  
                          i2l4046 27F2                            i2l4038 27BC  
                          i2l4412 2026                            i2l4422 204E  
                          i2l4408 2016                            i2l4418 203E  
                          i2l4436 232C                            i2l4454 2386  
                          i2l4472 23D4                            i2l4464 23AE  
                          i2l4394 1FE4                            i2l4466 23BA  
                          i2l4458 2396                            i2l4388 1FBE  
                          i2l4468 23BE                            i2l4806 195C  
                          i2l4760 1898                            _INTCON 000FF2  
                          i2l4682 2CD6                            i2l4668 2FC0  
                          i2l4764 18AE                            i2l4678 2C9E  
              __size_of_ReadUSART 001E              i2SetDCPWM1@dutycycle 0001  
                          u481_41 1FB4                            u483_41 1FCE  
             _putcBluetoothString 2990                            u487_41 2322  
                       ??_Lcd_Cmd 0061                            _SPBRGH 000FB0  
              __size_of_SetDCPWM1 0048                __size_of_SetDCPWM2 0048  
         __size_of_Lcd_Write_Char 0046                    __CFG_XINST$OFF 000000  
            i2SetDCPWM2@dutycycle 0001                  __end_of__powers_ 7F13  
                          _Timer1 0053                __size_of_OpenUSART 0080  
   __size_of_SendBlueToothCommand 001A                      ?i2_Lcd_Clear 0001  
                          ___ftge 223E                __size_of_Pause_seg 0064  
               __end_ofi2_Lcd_Cmd 3464                            ___wmul 32B2  
                    ?_putSTRINGU1 0062                         ??___awdiv 006A  
                       ??___ftadd 0093                    _PWM_DutyCycle1 2C18  
                  _PWM_DutyCycle2 2B9C                    __CFG_STVREN$ON 000000  
                       ??___awmod 0064                         ??___ftneg 0063  
                       ??___lldiv 0068                         ??___ftmul 007A  
                       ??___llmod 0075                         ??___ftsub 009F  
                       ??___fttol 008E               __size_ofi2_Lcd_Port 002C  
             i2Lcd_Write_String@a 0005               i2Lcd_Write_String@i 0009  
        ?_external_interrupt_init 0001                            _packet 005D  
                          _lenght 0059                            _fround 0F16  
                          clear_0 2ED6                            clear_1 2EF0  
                ___awdiv@quotient 006C              ?_putcBluetoothString 0067  
                  sprintf@vd_1739 00B7                   ___awmod@divisor 0062  
                 ___awmod@counter 0064                  i2_Lcd_Write_Char 327A  
           ___ftmul@f3_as_product 007E                      __pdataCOMRAM 005E  
               __end_ofi2___ftmul 2088                 __end_ofi2___fttol 23E6  
                    __mediumconst 7E9C                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
             __size_of_TMRO_USART 1998                      ?i2_SetDCPWM1 0001  
                    ?i2_SetDCPWM2 0001                 __end_of_PWM_init1 33FA  
               __end_of_PWM_init2 33D4                  __end_of_putcTxU1 3518  
                       ??_sprintf 00A6           __size_of_Comando_Tablet 015C  
               i2SetDCPWM1@DCycle 0005                   Lcd_Set_Cursor@a 0064  
                 Lcd_Set_Cursor@b 0063                   Lcd_Set_Cursor@y 0066  
                 Lcd_Set_Cursor@z 0065                 i2SetDCPWM2@DCycle 0005  
                      __accesstop 0060           __end_of__initialization 2F2E  
                 __CFG_PBADEN$OFF 000000                        ___ftadd@f1 008D  
                      ___ftadd@f2 0090               __size_ofi2___ftpack 00A8  
             __size_ofi2___lbtoft 0024                        ___ftge@ff1 0060  
                      ___ftge@ff2 0063      PWM_DutyCycle2@percentageDuty 009F  
               __end_of_Lcd_Clear 3526                        ___ftneg@f1 0060  
                  i2___ftpack@arg 0001                    i2___ftpack@exp 0004  
                      ___lbtoft@c 006B            __end_of_PWM_DutyCycle1 2C94  
          __end_of_PWM_DutyCycle2 2C18                        ___ftmul@f1 0074  
                      ___ftmul@f2 0077                        ___ftsub@f1 0099  
                      ___ftsub@f2 009C                        ___fttol@f1 008A  
                      _WriteUSART 34E0                    __pcstackCOMRAM 0001  
                    __pidataBANK1 34F4        __size_of_Lcd_Write_Integer 003E  
                      ___lltoft@c 0068                    _clrBufferUSART 3148  
                  i2___ftmul@cntr 001A                     __end_of_scale 0F16  
                  i2___ftmul@sign 001B          __end_ofi2_PWM_DutyCycle1 2ED0  
        __end_ofi2_PWM_DutyCycle2 2E66             ??_putcBluetoothString 0069  
     __size_ofi2_Lcd_Write_String 007A                 __end_of_ReadUSART 3482  
                  i2___fttol@exp1 002A                    i2___fttol@lval 0026  
               __end_of_SetDCPWM1 3078                 __end_of_SetDCPWM2 3030  
               i2Lcd_Write_Char@a 0004                 i2Lcd_Write_Char@y 0003  
                  _Lcd_Set_Cursor 2D86                        __div_to_l_ 14AA  
                       ?_Lcd_Init 0001                     ReadUSART@data 0001  
            putcBluetoothString@a 0067              putcBluetoothString@i 006B  
                       ?_Lcd_Port 0001                 __end_of_OpenUSART 2B1E  
                   UART1_Init@bdr 0066                   __div_to_l_@exp1 006F  
                 __div_to_l_@cntr 006E                      sprintf@integ 00BF  
               __end_of_Pause_seg 2F98                           ??_scale 0086  
                 __div_to_l_@quot 006A              i2Lcd_Write_Char@temp 0002  
                      __pbssBANK0 00E9                        __pbssBANK1 0100  
                       ?_OpenPWM1 0001                         ?_OpenPWM2 0001  
                   __div_to_l_@f1 0060                     __div_to_l_@f2 0063  
                       ?_Pause_ms 0060            __end_of_clrBufferUSART 318C  
                 ?_PWM_DutyCycle1 0001                   ?_PWM_DutyCycle2 0001  
                         ?___ftge 0060                      ??_UART1_Init 0066  
                         ?___wmul 006E               Inicializa_Driveby@i 0081  
          __size_of_getCNY70Value 00C6                           _CCP1CON 000FBD  
                         _CCP2CON 000FBA              i2Lcd_Set_Cursor@temp 0008  
     SendBlueToothCommand@command 006A                           ?_fround 0083  
       __size_of_Lcd_Write_String 0098                         ?___ftpack 0060  
                       ?___lbtoft 0068            __end_of_Lcd_Set_Cursor 2DFC  
                       ?___lltoft 0068                  putSTRINGU1@total 0064  
        __end_ofi2_Lcd_Set_Cursor 2FE8                           _BT_Init 23E6  
                         _SBUSART 0052                        ??_Lcd_Init 0063  
                    ??i2_Lcd_Port 0001                        ??_Lcd_Port 0060  
              __end_of_UART1_Init 34CC                   __CFG_VREGEN$OFF 000000  
                  _Lcd_Write_Char 30BE                           _Lcd_Cmd 33FA  
                         _Comando 004D                           _Med_lsb 0042  
                         _Med_msb 0044                        ??_OpenPWM1 0060  
                      ??_OpenPWM2 0060                        ??_Pause_ms 0062  
                    ??_TMRO_USART 0034                 __end_of__npowers_ 7EEC  
                         __Hparam 0000                        _scale$2761 0086  
                         __Lparam 0000                   ?_clrBufferUSART 0001  
                     ?_WriteUSART 0001                   __size_of___ftge 00D4  
                         ___awdiv 2088                           ___ftadd 122A  
                         ___awmod 257A                         ?_putcTxU1 0001  
                         ___ftneg 3350                           ___lldiv 216A  
                 __size_of___wmul 0036                           ___ftmul 19A0  
                         ___llmod 2854                           ___ftsub 31CA  
                         ___fttol 1C60                __end_ofi2_Lcd_Port 33AE  
            __size_ofi2_Lcd_Clear 000E                           __pcinit 2ED0  
                    ??i2___ftpack 0006                      ??i2___lbtoft 000C  
                      ??___ftpack 0065                        ??___lbtoft 006B  
            __size_of_putSTRINGU1 00BE                   __size_of_fround 0314  
                    BT_Init@F5671 016E           i2___ftmul@f3_as_product 0017  
                         __ramtop 0800                   ?_Lcd_Set_Cursor 0063  
                      ??___lltoft 006C                           __ptext0 26FC  
                         __ptext1 2D0E                           __ptext2 1EB4  
                         __ptext3 3482                           __ptext4 33AE  
                         __ptext5 3104                           __ptext6 33D4  
                         __ptext7 34CC                           __ptext8 23E6  
                         __ptext9 349C    i2PWM_DutyCycle1@percentageDuty 0031  
                         _comando 015A                       ?__div_to_l_ 0060  
                         _countup 005E                           _dpowers 7E9D  
                       _T2CONbits 000FCA                  ___awmod@dividend 0060  
              __end_of_TMRO_USART 19A0                    _Comando_Tablet 1B04  
                         _sprintf 001C                     _getCNY70Value 24B4  
          __end_of_Lcd_Write_Char 3104                    __pintcode_body 181E  
            __size_ofi2_SetDCPWM1 003A              __size_ofi2_SetDCPWM2 003A  
            end_of_initialization 2F2E                       _TramaTablet 0100  
       __size_of_putcBluetoothInt 0086                           int_func 181E  
        __end_ofi2_Lcd_Write_Char 32B2                __end_ofi2___ftpack 2854  
              __end_ofi2___lbtoft 3444                   ___lldiv@divisor 0064  
       i2PWM_DutyCycle1@DutyCycle 002F                   ___lldiv@counter 006C  
                       _RCSTAbits 000FAB        __end_of_Inicializa_Driveby 1FA4  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                         Lcd_Port@a 0060  
                      ??_putcTxU1 0061                        _num_med_hi 005A  
                  __tdiv_to_l_@f1 0060                    __tdiv_to_l_@f2 0063  
       i2PWM_DutyCycle2@DutyCycle 002F                     ??__tdiv_to_l_ 0066  
                       i2_Lcd_Cmd 3444                         _PORTAbits 000F80  
                       _PORTBbits 000F81                         _PORTDbits 000F83  
                       _PORTEbits 000F84            __end_of_Comando_Tablet 1C60  
    __end_of_SendBlueToothCommand 34B6                         _TRISBbits 000F93  
                       _TRISCbits 000F94                    ?_getCNY70Value 0060  
             __size_of_WriteUSART 0014  __size_of_external_interrupt_init 001A  
                       i2___ftmul 1FA4                         i2___fttol 2312  
                 ?_Lcd_Write_Char 0001                 Lcd_Write_String@a 0064  
               Lcd_Write_String@i 0068                         _PWM_init1 33D4  
                       _PWM_init2 33AE                         _TXSTAbits 000FAC  
                 i2___ftpack@sign 0005               __size_of__div_to_l_ 01DE  
                     ___ftmul@exp 007D                         _Lcd_Clear 3518  
                  __end_of___ftge 2312                    __end_of___wmul 32E8  
                _Lcd_Write_String 28F8                 ?i2_PWM_DutyCycle1 0001  
               ?i2_PWM_DutyCycle2 0001                     __pidataCOMRAM 3534  
                      ?i2_Lcd_Cmd 0001                    __end_of_fround 122A  
              ??i2_PWM_DutyCycle1 002B                ??i2_PWM_DutyCycle2 002B  
             start_initialization 2ED0                         Pause_ms@i 0063  
                       Pause_ms@x 0060                   ?_Comando_Tablet 0001  
                       _ReadUSART 3464                         _SetDCPWM1 3030  
                       _SetDCPWM2 2FE8                   SetDCPWM1@DCycle 0064  
             __end_of__tdiv_to_l_ 181E                   SetDCPWM2@DCycle 0064  
                 i2___fttol@sign1 0025                         _DutyCycle 00E9  
                      ?i2___ftmul 000D                        ?i2___fttol 001C  
               __size_of_Lcd_Init 0078                 __size_of_Lcd_Port 0036  
                      ?_PWM_init1 0001                        ?_PWM_init2 0001  
            Comando_Tablet@sensed 00E7                         _OpenUSART 2A9E  
                ??_PWM_DutyCycle1 0099                  ??_PWM_DutyCycle2 0099  
                       _Pause_seg 2F34                   ___llmod@divisor 0071  
                 ___llmod@counter 0075       __end_of_putcBluetoothString 2A18  
               __size_of_OpenPWM1 0014                 __size_of_OpenPWM2 0044  
               __size_of_Pause_ms 0046                        ?_Lcd_Clear 0001  
                        ??___ftge 0066        __end_ofi2_Lcd_Write_String 2D0E  
                        ??___wmul 0072                       __pdataBANK1 016E  
                __CFG_LPT1OSC$OFF 000000                   Lcd_Write_Char@a 0063  
                 Lcd_Write_Char@y 0062                          ??_fround 0086  
                  _num_med_medium 005C                        fround@prec 008C  
               __size_of___ftpack 010A                 __size_of___lbtoft 0032  
               __size_of___lltoft 007E                       __pbssCOMRAM 0042  
                 ??_getCNY70Value 0062                        ?_ReadUSART 0001  
                        ?_BT_Init 0001                     __pcstackBANK0 0060  
               ?i2_Lcd_Set_Cursor 0004                        ?_SetDCPWM1 0060  
                      ?_SetDCPWM2 0060               __end_of__stringdata 7FFF  
              ??i2_Lcd_Set_Cursor 0005                  _putcBluetoothInt 2A18  
                      ?_OpenUSART 0060                          ?_Lcd_Cmd 0001  
                     sprintf@_val 00C4                       sprintf@flag 00BD  
                ??_clrBufferUSART 0060                        ?_Pause_seg 0001  
                     sprintf@fval 00CB                       sprintf@prec 00C2  
                       _cleanBfer 00ED                      ??_WriteUSART 0060  
                ??_Lcd_Set_Cursor 0064              _SendBlueToothCommand 349C  
                       __pintcode 0008                     __pmediumconst 7E9C  
                        ?___awdiv 0066                          ?___ftadd 008D  
                        ?___awmod 0060                          ?___ftneg 0060  
                        ?___lldiv 0060                          ?___ftmul 0074  
                        ?___llmod 006D                          ?___ftsub 0099  
                       __npowers_ 7EC5                          ?___fttol 008A  
               putcTxU1@character 0061                       ??i2_Lcd_Cmd 0002  
               __size_of_putcTxU1 0012                       __tdiv_to_l_ 1688  
                       _contador2 0057                      ??__div_to_l_ 0066  
       SendBlueToothCommand@total 006C           _external_interrupt_init 3482  
                    _TamanhoTrama 0046                          ?_sprintf 009F  
                     ??i2___ftmul 0013                    __size_of_scale 057C  
                     ??i2___fttol 0020                __end_of_WriteUSART 34F4  
                     ??_PWM_init1 0061                       ??_PWM_init2 0063  
    PWM_DutyCycle1@percentageDuty 009F                     _ComandoTablet 004E  
                  ___wmul@product 0072                 ?i2_Lcd_Write_Char 0001  
                        _PIE1bits 000F9D                          Lcd_Cmd@a 0062  
                        _PIR1bits 000F9E                __end_of__div_to_l_ 1688  
                        i2u506_40 2CCE                          i2u506_47 2CC4  
                        i2u507_40 2D06                          i2u507_47 2CFC  
                        i2u518_40 18B4                ??i2_Lcd_Write_Char 0002  
                        i2u535_47 3296                          i2u480_45 3210  
                        i2u536_47 32A8                          i2u537_47 3456  
                        i2u484_40 1FD6                          i2u492_40 239C  
           ?_SendBlueToothCommand 006A                          i2u479_45 324A  
                        i2u489_40 234A                          i2u489_45 2342  
                   ??i2_Lcd_Clear 0004                       ??_Lcd_Clear 0063  
                __CFG_WDTPS$32768 000000                     ??_putSTRINGU1 0066  
                      _ADCON1bits 000FC1                       __stringdata 7F13  
               ___wmul@multiplier 006E                          _CheckSum 004A  
                ??_Lcd_Write_Char 0061                       ??_ReadUSART 0001  
              _Inicializa_Driveby 1EB4                     ??i2_SetDCPWM1 0003  
                   ??i2_SetDCPWM2 0003                       ??_SetDCPWM1 0062  
                     ??_SetDCPWM2 0062                  __size_of_BT_Init 00CE  
                        _Lcd_Init 2D0E                          _Lcd_Port 32E8  
                     _INTCON2bits 000FF1                       _INTCON3bits 000FF0  
                       copy_data0 2F0A                          _EntTrama 004F  
             ?_Inicializa_Driveby 0001                     _BluetoothDato 0128  
        __end_of_Lcd_Write_String 2990                       ??_OpenUSART 0062  
              SetDCPWM1@dutycycle 0060                       ??_Pause_seg 0065  
                 OpenUSART@config 0065                  __size_of_Lcd_Cmd 0026  
                    _Timer2Config 00EE                          _OpenPWM1 34CC  
                        _OpenPWM2 3104                          _Pause_ms 3078  
                        __Hrparam 0000                          __Lrparam 0000  
              SetDCPWM2@dutycycle 0060                  __size_of___awdiv 00E2  
                __size_of___ftadd 0280                  __size_of___awmod 00C4  
            ??_Inicializa_Driveby 0080                  PWM_DutyCycle1@DC 00A0  
                PWM_DutyCycle2@DC 00A0                  __size_of___ftneg 0032  
                __size_of___lldiv 00D4                  __size_of___ftmul 0164  
                __size_of___llmod 00A4                  __size_of___ftsub 003C  
                __size_of___fttol 014A                  ??_Comando_Tablet 00E7  
                        ___ftpack 1DAA                          ___lbtoft 331E  
                     _fround$2760 0086                       _fround$2759 0089  
                        ___lltoft 2B1E               __end_ofi2_Lcd_Clear 3534  
                  OpenPWM2@ccp2mx 0062             __CFG_FOSC$INTOSCIO_EC 000000  
             __end_of_putSTRINGU1 26FC         ??_external_interrupt_init 0060  
                      sprintf@exp 00C9                    OpenPWM1@period 0060  
                  OpenPWM2@period 0061                          __ptext10 263E  
                        __ptext11 3506                          __ptext20 24B4  
                        __ptext12 2F34                          __ptext21 3148  
                        __ptext13 3078                          __ptext30 0F16  
                        __ptext22 2B9C                          __ptext14 1B04  
                        __ptext31 32B2                          __ptext23 2FE8  
                        __ptext15 2990                          __ptext40 1C60  
                        __ptext32 19A0                          __ptext24 2C18  
                        __ptext16 2A18                          __ptext41 31CA  
                        __ptext33 257A                          __ptext25 331E  
                        __ptext17 34E0                          __ptext50 33FA  
                        __ptext42 122A                          __ptext34 2088  
                        __ptext26 3030                          __ptext18 34B6  
                        __ptext51 32E8                          __ptext43 1DAA  
                        __ptext35 1688                          __ptext27 318C  
                        __ptext19 2A9E                          __ptext60 3240  
                        __ptext44 3350                          __ptext36 14AA  
                        __ptext28 001C                          __ptext61 2C94  
                        __ptext53 2DFC                          __ptext45 223E  
                        __ptext37 2B1E                          __ptext29 099A  
                        __ptext62 327A                          __ptext54 3206  
                        __ptext46 28F8                          __ptext38 2854  
                        __ptext63 2F98                          __ptext55 2E66  
                        __ptext47 30BE                          __ptext39 216A  
                        __ptext64 3526                          __ptext56 3420  
                        __ptext48 2D86                          __ptext65 3444  
                        __ptext57 2312                          __ptext49 3518  
                        __ptext66 3382                          __ptext58 1FA4  
                        __ptext67 3464                          __ptext59 27AC  
                        __powers_ 7EEC                   PWM_init1@period 0061  
                 PWM_init2@period 0063                          _contador 0056  
       __size_ofi2_PWM_DutyCycle1 006A         __size_ofi2_PWM_DutyCycle2 006A  
                __size_of_sprintf 097E               __end_ofi2_SetDCPWM1 327A  
             __end_ofi2_SetDCPWM2 3240                     __size_of_main 00B0  
          ??_SendBlueToothCommand 006E                          _putcTxU1 3506  
                     i2Lcd_Port@a 0001                     BT_Init@nameBT 006E  
        __end_of_putcBluetoothInt 2A9E             __CFG_CPUDIV$OSC1_PLL2 000000  
                      _INTCONbits 000FF2                i2_Lcd_Write_String 2C94  
                  OpenUSART@spbrg 0060                          scale@scl 0089  
               putcBluetoothInt@a 00CF                 putcBluetoothInt@i 00E5  
               putcBluetoothInt@s 00D1                Lcd_Write_Char@temp 0061  
                        intlevel2 0000                         sprintf@ap 00BB  
                __tdiv_to_l_@exp1 006E                         sprintf@vd 00B3  
                       sprintf@sp 009F                  __tdiv_to_l_@cntr 006D  
             ?i2_Lcd_Write_String 0005                  __tdiv_to_l_@quot 0069  
               i2Lcd_Set_Cursor@a 0005                 i2Lcd_Set_Cursor@b 0004  
               i2Lcd_Set_Cursor@y 0007                 i2Lcd_Set_Cursor@z 0006  
                ___lldiv@dividend 0060   __end_of_external_interrupt_init 349C  
       __size_ofi2_Lcd_Set_Cursor 0050                        _OSCCONbits 000FD3  
                      i2Lcd_Cmd@a 0003                       i2_Lcd_Clear 3526  
                      _UART1_Init 34B6                       _putSTRINGU1 263E  
            ??i2_Lcd_Write_String 0007                Lcd_Set_Cursor@temp 0067  
    __size_of_putcBluetoothString 0088                      ?__tdiv_to_l_ 0060  
                     _num_med_low 005B                          sprintf@c 00CE  
                        sprintf@f 00A1                  ___lldiv@quotient 0068  
  i2PWM_DutyCycle2@percentageDuty 0031                       i2_SetDCPWM1 3240  
                     i2_SetDCPWM2 3206                Lcd_Write_Integer@a 00CF  
              Lcd_Write_Integer@s 00D1             __end_of_getCNY70Value 257A  
                      i2_Lcd_Port 3382                      _USART_Status 0054  
                      _TMRO_USART 0008  
